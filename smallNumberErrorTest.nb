(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    277464,       5563]
NotebookOptionsPosition[    266386,       5384]
NotebookOutlinePosition[    267179,       5410]
CellTagsIndexPosition[    267089,       5405]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "These", " ", "functions", " ", "are", " ", "to", " ", "precompute", " ", 
    "the", " ", "time", " ", "integrals"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Compute", " ", "the", " ", "partitions", " ", "of", " ", "the", " ", 
    "list", " ", "x"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"partition", "[", 
      RowBox[{"{", "x_", "}"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"{", "x", "}"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"partition", "[", 
      RowBox[{"{", 
       RowBox[{"r__", ",", "x_"}], "}"}], "]"}], ":=", 
     RowBox[{"Join", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"ReplaceList", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"b___", ",", 
                RowBox[{"{", "S__", "}"}], ",", "a___"}], "}"}], 
              "\[RuleDelayed]", 
              RowBox[{"{", 
               RowBox[{"b", ",", 
                RowBox[{"{", 
                 RowBox[{"S", ",", "x"}], "}"}], ",", "a"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", "S__", "}"}], "\[RuleDelayed]", 
              RowBox[{"{", 
               RowBox[{"S", ",", 
                RowBox[{"{", "x", "}"}]}], "}"}]}]}], "}"}]}], "]"}], "&"}], "/@", 
        RowBox[{"partition", "[", 
         RowBox[{"{", "r", "}"}], "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Kimura", "'"}], "s", " ", "eigenvalues"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"KimuraEig", "[", "i_", "]"}], ":=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", "i", "*", 
      RowBox[{"(", 
       RowBox[{"i", "+", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "integrand", " ", "of", " ", "all", " ", "the", " ", "time", 
     " ", "integrals"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"integrand", "[", "k_", "]"}], ":=", 
     RowBox[{"Exp", "[", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"KimuraEig", "[", 
            RowBox[{"q", "[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], " ", "-", " ", 
           RowBox[{"KimuraEig", "[", 
            RowBox[{"q", "[", "i", "]"}], "]"}], " ", "-", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["2", 
              RowBox[{"1", "+", 
               RowBox[{"r", "[", "i", "]"}]}]], "*", " ", "Ne", " ", "*", " ", 
             RowBox[{"VG", " ", "/", " ", "W"}]}], ")"}]}], ")"}], 
         RowBox[{"s", "[", "i", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "limits", " ", "of", " ", "the", " ", "time", " ", 
     "integrals"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sLimits", "[", "k_", "]"}], ":=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"s", "[", "k", "]"}], ",", "0", ",", "t"}], "}"}], "}"}], 
       ",", 
       RowBox[{"Reverse", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"s", "[", "j", "]"}], ",", "0", ",", 
            RowBox[{"s", "[", 
             RowBox[{"j", "+", "1"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "limits", " ", "of", " ", "the", " ", "k", " ",
      "fold", " ", "sum", " ", "over", " ", "the", " ", "j_i", " ", "s"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rLimits", "[", "k_", "]"}], " ", ":=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "[", "i", "]"}], ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Define", " ", "the", " ", "limits", " ", "of", " ", "the", " ", "k"}], 
     "+", 
     RowBox[{"1", " ", "fold", " ", "infinite", " ", 
      RowBox[{"sums", ".", " ", "Truncating"}], " ", "after", " ", "n_", " ", 
      "terms"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"qLimits", "[", 
      RowBox[{"k_", ",", " ", "n_"}], " ", "]"}], " ", ":=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"q", "[", "1", "]"}], ",", "1", ",", "n"}], "}"}], "}"}], 
       ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"q", "[", "j", "]"}], ",", 
           RowBox[{
            RowBox[{"q", "[", 
             RowBox[{"j", "-", "1"}], "]"}], "-", "2"}], ",", 
           RowBox[{
            RowBox[{"q", "[", 
             RowBox[{"j", "-", "1"}], "]"}], "+", "2"}], ",", "1"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "2", ",", 
           RowBox[{"k", "+", "1"}]}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Compute", " ", "the", " ", "appropriat", " ", "integrand", " ", "for", 
     " ", "the", " ", "partition"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integrandPart", "[", 
     RowBox[{"myPartition_", ",", "k_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "curFun", ",", "firstElement", ",", "block", ",", "curElement"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"curFun", " ", "=", " ", 
        RowBox[{"integrand", "[", "k", "]"}]}], ";", "\[IndentingNewLine]", 
       " ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"a", "=", "1"}], ",", 
         RowBox[{"a", "\[LessEqual]", 
          RowBox[{"Length", "[", "myPartition", "]"}]}], ",", 
         RowBox[{"a", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"firstElement", " ", "=", " ", 
           RowBox[{"myPartition", "[", 
            RowBox[{"[", 
             RowBox[{"a", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"b", "=", "2"}], ",", 
            RowBox[{"b", "\[LessEqual]", 
             RowBox[{"Length", "[", 
              RowBox[{"myPartition", "[", 
               RowBox[{"[", "a", "]"}], "]"}], "]"}]}], ",", 
            RowBox[{"b", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"curElement", " ", "=", " ", 
              RowBox[{"myPartition", "[", 
               RowBox[{"[", 
                RowBox[{"a", ",", "b"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"curFun", " ", "=", " ", 
              RowBox[{"curFun", "/.", 
               RowBox[{
                RowBox[{"q", "[", "curElement", "]"}], "\[Rule]", 
                RowBox[{"q", "[", "firstElement", "]"}]}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"curFun", "//", "FullSimplify"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"computeInts", "[", "k_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "curParts", ",", "curLimits", ",", "curIntegrand", ",", "curInts", ",",
         "j"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"curParts", " ", "=", " ", 
        RowBox[{"partition", "[", 
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"k", "+", "1"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"curLimits", " ", "=", " ", 
        RowBox[{"sLimits", "[", "k", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "curParts", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"curIntegrand", "=", 
           RowBox[{"integrandPart", "[", 
            RowBox[{
             RowBox[{"curParts", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", "k"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"curInts", "[", 
            RowBox[{"curParts", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], "=", 
           RowBox[{"Integrate", "[", 
            RowBox[{"curIntegrand", ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "curLimits"}], "]"}]}], "]"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "curInts", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.5814539400525427`*^9, 3.5814540620104427`*^9}, {
   3.581454594180583*^9, 3.58145480740322*^9}, {3.581454866740066*^9, 
   3.5814548678454247`*^9}, {3.58145490894516*^9, 3.581454924331727*^9}, {
   3.58145502909582*^9, 3.581455031314741*^9}, {3.581455064729435*^9, 
   3.581455170755177*^9}, {3.5814552094337378`*^9, 3.581455211711643*^9}, {
   3.581455352225129*^9, 3.581455352710936*^9}, {3.581455810283917*^9, 
   3.581455881942319*^9}, {3.5814560254363823`*^9, 3.581456040044921*^9}, {
   3.5814561132483273`*^9, 3.581456129493671*^9}, {3.581456165828951*^9, 
   3.581456166840122*^9}, {3.58145657855786*^9, 3.581456588847856*^9}, {
   3.581458591472971*^9, 3.5814586127735558`*^9}, {3.58145869867527*^9, 
   3.58145869941565*^9}, {3.581459021557664*^9, 3.581459029643702*^9}, {
   3.5816962726080427`*^9, 3.581696281315442*^9}, {3.581696338232327*^9, 
   3.581696340239723*^9}, {3.5816976989023123`*^9, 3.581697709314034*^9}, 
   3.894022831608147*^9, {3.894022866372384*^9, 3.8940228745911303`*^9}, {
   3.8940229054205217`*^9, 3.8940229160099745`*^9}, {3.894023643194696*^9, 
   3.8940236461237*^9}, {3.8940253775578365`*^9, 3.894025378146474*^9}, {
   3.894025413154995*^9, 3.894025417372884*^9}, {3.8944559543053727`*^9, 
   3.8944559608101797`*^9}, {3.894456205441204*^9, 3.894456206096498*^9}, {
   3.8944562720131865`*^9, 3.894456299363558*^9}, {3.8944626270422716`*^9, 
   3.894462632553527*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"572babc4-47d7-47c9-be9b-6b9c6c0c79f8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"qLimits", "[", 
  RowBox[{"3", ",", "10"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"rLimits", "[", "3", "]"}]}], "Input",
 CellChangeTimes->{{3.8940239464742537`*^9, 3.8940239964729958`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"ed6fc0b9-a9d4-4dca-929e-5b57a9955240"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "[", "1", "]"}], ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "[", "2", "]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"q", "[", "1", "]"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"q", "[", "1", "]"}]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "[", "3", "]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"q", "[", "2", "]"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"q", "[", "2", "]"}]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "[", "4", "]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"q", "[", "3", "]"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"q", "[", "3", "]"}]}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8940239554717197`*^9, 3.8940239972311316`*^9}, 
   3.894025286138513*^9, 3.894025429520293*^9, 3.8940282688998284`*^9, 
   3.894029139095399*^9, 3.894033858407998*^9, 3.894036674485894*^9, 
   3.894094852243531*^9, 3.8941068931532974`*^9, 3.8941087856379843`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"002ecf02-b9cc-4d4e-b0fd-28012a945513"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "[", "1", "]"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "[", "2", "]"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "[", "3", "]"}], ",", "0", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8940239554717197`*^9, 3.8940239972311316`*^9}, 
   3.894025286138513*^9, 3.894025429520293*^9, 3.8940282688998284`*^9, 
   3.894029139095399*^9, 3.894033858407998*^9, 3.894036674485894*^9, 
   3.894094852243531*^9, 3.8941068931532974`*^9, 3.8941087856459785`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"c2f50272-f154-465b-ab3c-c69d3dac1ed0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"qLimits", "[", 
    RowBox[{"3", ",", "10"}], "]"}], ",", 
   RowBox[{"rLimits", "[", "3", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8940240064797926`*^9, 3.8940240183763847`*^9}, {
   3.8940252931522017`*^9, 3.8940252947189484`*^9}, 3.894036686044402*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"a15bd583-c4d3-4ba0-9786-c4f4e8e68a3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "[", "1", "]"}], ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "[", "2", "]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"q", "[", "1", "]"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"q", "[", "1", "]"}]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "[", "3", "]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"q", "[", "2", "]"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"q", "[", "2", "]"}]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "[", "4", "]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"q", "[", "3", "]"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"q", "[", "3", "]"}]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "[", "1", "]"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "[", "2", "]"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "[", "3", "]"}], ",", "0", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8940240193102074`*^9, {3.894025287045841*^9, 3.894025297411436*^9}, 
   3.8940254306242905`*^9, 3.8940282705410223`*^9, 3.8940291408579903`*^9, 
   3.894033859734409*^9, 3.8940366773446665`*^9, 3.894094854709345*^9, 
   3.89410689442239*^9, 3.8941087872532277`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"42344a33-1e15-4d44-ba4f-a1c65242573f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "These", " ", "functions", " ", "are", " ", "to", " ", "compute", " ", 
    "the", " ", "Gegenbauer", " ", "integrals"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "normalizations", " ", "for", " ", "the", " ", "Gegenbauer", 
    " ", "polynomials"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"gegenbauerNorm", "[", 
      RowBox[{"i_", ",", 
       RowBox[{"\[Lambda]_", ":", 
        RowBox[{"3", "/", "2"}]}]}], "]"}], " ", ":=", " ", 
     RowBox[{"\[Pi]", "*", 
      SuperscriptBox["2", 
       RowBox[{"1", "-", 
        RowBox[{"2", "*", "\[Lambda]"}]}]], "*", 
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{"i", "+", 
         RowBox[{"2", "*", "\[Lambda]"}]}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Factorial", "[", "i", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"i", "+", "\[Lambda]"}], ")"}], "*", 
         SuperscriptBox[
          RowBox[{"Gamma", "[", "\[Lambda]", "]"}], "2"]}], ")"}]}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "Int_", 
     RowBox[{"{", 
      RowBox[{"0", "^", "1"}], "}"}], 
     RowBox[{"x", "^", "2"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "+", "j"}], ")"}]}], "C_", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", "-", "1"}], "}"}], "^", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"3", "/", "2"}], ")"}], "}"}]}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", "*", "x"}]}], ")"}], "C_", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"j", "-", "1"}], "}"}], "^", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"3", "/", "2"}], ")"}], "}"}]}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", "*", "x"}]}], ")"}], "dx"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"0", ",", "0"}], "]"}], "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
    RowBox[{"a", "^", "b"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gegenbauerInt", "[", 
      RowBox[{"a_", ",", "b_", ",", "r_"}], "]"}], ":=", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"4", "+", "r"}], ")"}]}]], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"KroneckerDelta", "[", 
          RowBox[{"a", ",", "b"}], "]"}], "*", " ", 
         RowBox[{"gegenbauerNorm", "[", "a", "]"}]}], " ", "-", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", "a"}]}], ")"}]}], " ", "*", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"a", "+", "1"}], ")"}], "*", 
                 RowBox[{"KroneckerDelta", "[", 
                  RowBox[{"a", ",", 
                   RowBox[{"b", "-", "1"}]}], "]"}], "*", 
                 RowBox[{"gegenbauerNorm", "[", 
                  RowBox[{"a", "+", "1"}], "]"}]}], "+", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"a", "+", "2"}], ")"}], "*", 
                 RowBox[{"KroneckerDelta", "[", 
                  RowBox[{"a", ",", 
                   RowBox[{"b", "+", "1"}]}], "]"}], "*", 
                 RowBox[{"gegenbauerNorm", "[", 
                  RowBox[{"a", "-", "1"}], "]"}]}]}], ")"}]}], ")"}], ",", 
            RowBox[{"(", 
             RowBox[{"1", "-", "r"}], ")"}]}], " ", "]"}], " ", "*", " ", 
          RowBox[{"(*", 
           RowBox[{
           "3", "rdd", " ", "to", " ", "last", " ", "partenthesis", " ", "on",
             " ", "this", " ", "line", " ", "was", " ", 
            RowBox[{"missing", ".", " ", "check"}], " ", "if", " ", "this", 
            " ", "fixed"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", "*", "a"}], "+", "3"}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", "*", "b"}], "+", "3"}], ")"}]}], ")"}]}], "*",
               "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"a", "+", "1"}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"b", "+", "1"}], ")"}], "*", 
                 RowBox[{"KroneckerDelta", "[", 
                  RowBox[{"a", ",", "b"}], "]"}], "*", 
                 RowBox[{"gegenbauerNorm", "[", 
                  RowBox[{"a", "+", "1"}], "]"}]}], "+", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"a", "+", "1"}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"b", "+", "2"}], ")"}], "*", 
                 RowBox[{"KroneckerDelta", "[", 
                  RowBox[{"a", ",", 
                   RowBox[{"b", "-", "2"}]}], "]"}], "*", 
                 RowBox[{"gegenbauerNorm", "[", 
                  RowBox[{"a", "+", "1"}], "]"}]}], "+", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"a", "+", "2"}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"b", "+", "1"}], ")"}], "*", 
                 RowBox[{"KroneckerDelta", "[", 
                  RowBox[{"a", ",", 
                   RowBox[{"b", "+", "2"}]}], "]"}], "*", 
                 RowBox[{"gegenbauerNorm", "[", 
                  RowBox[{"a", "-", "1"}], "]"}]}], "+", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"a", "+", "2"}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"b", "+", "2"}], ")"}], "*", 
                 RowBox[{"KroneckerDelta", "[", 
                  RowBox[{"a", ",", "b"}], "]"}], "*", 
                 RowBox[{"gegenbauerNorm", "[", 
                  RowBox[{"a", "-", "1"}], "]"}]}]}], ")"}]}], ")"}], ",", 
            "r"}], "]"}]}], ")"}]}], ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.581456599371223*^9, 3.581456685833618*^9}, {
  3.581697794901085*^9, 3.581697836586824*^9}, {3.894023094210832*^9, 
  3.8940231228807883`*^9}, {3.8940242358508234`*^9, 3.894024260225165*^9}, {
  3.8940247031670427`*^9, 3.8940247108107243`*^9}, {3.894441003726901*^9, 
  3.894441008622075*^9}, {3.8944425584294863`*^9, 3.8944425587758026`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"48eb2620-4124-4b79-b860-a512304e326a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Functions", " ", "to", " ", "compute", " ", "the", " ", "path", " ", 
    "integral", " ", "to", " ", "order", " ", "k"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "partition", " ", "given", " ", "the", " ", 
    "current", " ", "state", " ", "of", " ", "the", " ", "summation"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"findEquiv", "[", "vals_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "tempPart", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tempPart", "=", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"val", ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Position", "[", 
             RowBox[{"vals", ",", "val"}], "]"}], "]"}]}], "]"}], "/@", 
         RowBox[{"Union", "[", "vals", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Sort", "[", 
        RowBox[{"tempPart", ",", 
         RowBox[{
          RowBox[{"Less", "[", 
           RowBox[{
            RowBox[{"First", "[", "#1", "]"}], ",", 
            RowBox[{"First", "[", "#2", "]"}]}], "]"}], "&"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "the", " ", "coefficients", " ", "from", " ", 
     RowBox[{"Kimura", "'"}], "s", " ", "solution"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"kimuraCoefficient", "[", "i_", "]"}], ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", ">", "0"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "*", "i"}], "+", "1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"i", "*", 
          RowBox[{"(", 
           RowBox[{"i", "+", "1"}], ")"}]}], ")"}]}], ",", "0"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Kimura", "'"}], "s", " ", "transition", " ", "density"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "TODO", " ", "get", " ", "rid", " ", "of", " ", "the", " ", "default"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Kimura", "[", 
     RowBox[{"x_", ",", "y_", ",", "t_", ",", "n_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "m", "}"}], ",", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"4", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", "m"}], "+", "1"}], ")"}], "*", "x", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"m", "*", 
            RowBox[{"(", 
             RowBox[{"m", "+", "1"}], ")"}]}], ")"}]}], "*", 
         RowBox[{"GegenbauerC", "[", 
          RowBox[{
           RowBox[{"m", "-", "1"}], ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"1", "-", 
            RowBox[{"2", "*", "x"}]}]}], "]"}], "*", 
         RowBox[{"GegenbauerC", "[", 
          RowBox[{
           RowBox[{"m", "-", "1"}], ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"1", "-", 
            RowBox[{"2", "*", "y"}]}]}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}], "*", "m", "*", 
           RowBox[{"(", 
            RowBox[{"m", "+", "1"}], ")"}], "*", "t"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Compute", " ", "the", " ", "path", " ", "integral", " ", "at", " ", 
     "order", " ", "k"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pathInt", "[", 
      RowBox[{
      "x_", ",", "y_", ",", "t_", ",", "k_", ",", "n_", ",", " ", "Ne_", ",", 
       " ", "\[Alpha]_", ",", " ", "\[CapitalLambda]_", ",", " ", "W_", ",", 
       "VG_"}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "qlims", ",", " ", "rlims", ",", " ", "lims", ",", " ", "tInts"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"myInds", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"i", "[", "j", "]"}], ",", "1", ",", "n"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"k", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"qlims", " ", "=", " ", 
         RowBox[{"qLimits", "[", 
          RowBox[{"k", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rlims", " ", "=", " ", 
         RowBox[{"rLimits", "[", "k", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"lims", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"qlims", ",", "rlims"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tInts", " ", "=", " ", 
         RowBox[{"computeInts", "[", "k", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"4", " ", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"8", " ", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "k"], " ", "*", " ", "x", 
         "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], "*", 
         RowBox[{"ParallelSum", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"Negative", "@", 
              RowBox[{"Min", "@", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"q", "[", "j", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "1", ",", 
                   RowBox[{"k", "+", "1"}]}], "}"}]}], "]"}]}]}], ",", "0", 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Product", "[", 
               RowBox[{
                RowBox[{"kimuraCoefficient", "[", 
                 RowBox[{"q", "[", "j", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", 
                  RowBox[{"k", "+", "1"}]}], "}"}]}], "]"}], "*", 
              "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"KimuraEig", "[", 
                  RowBox[{"q", "[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "*", "t"}], "]"}],
               "*", "\[IndentingNewLine]", 
              RowBox[{"GegenbauerC", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"q", "[", "1", "]"}], "-", "1"}], ",", 
                RowBox[{"3", "/", "2"}], ",", 
                RowBox[{"1", "-", 
                 RowBox[{"2", "*", "x"}]}]}], "]"}], "*", 
              "\[IndentingNewLine]", 
              RowBox[{"GegenbauerC", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"q", "[", 
                  RowBox[{"k", "+", "1"}], "]"}], "-", "1"}], ",", 
                RowBox[{"3", "/", "2"}], ",", 
                RowBox[{"1", "-", 
                 RowBox[{"2", "*", "y"}]}]}], "]"}], "*", 
              "\[IndentingNewLine]", 
              RowBox[{"Product", "[", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"2", "VG"}], ")"}], 
                  RowBox[{"1", "-", 
                   RowBox[{"r", "[", "j", "]"}]}]], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", " ", "\[Alpha]"}], " ", "\[CapitalLambda]"}],
                    ")"}], 
                  RowBox[{"r", "[", "j", "]"}]], " ", 
                 RowBox[{"gegenbauerInt", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"q", "[", "j", "]"}], "-", "1"}], ",", 
                   RowBox[{
                    RowBox[{"q", "[", 
                    RowBox[{"j", "+", "1"}], "]"}], "-", "1"}], ",", " ", 
                   RowBox[{"r", "[", "j", "]"}]}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}], "*", 
              "\[IndentingNewLine]", 
              RowBox[{"tInts", "[", 
               RowBox[{"findEquiv", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"q", "[", "j", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", 
                    RowBox[{"k", "+", "1"}]}], "}"}]}], "]"}], "]"}], 
               "]"}]}]}], "]"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "lims"}], "]"}]}], "]"}]}]}]}], "]"}]}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.5814540877137413`*^9, 3.581454105314958*^9}, {
   3.581456826539709*^9, 3.581456899288327*^9}, 3.581456937525036*^9, {
   3.581456996753779*^9, 3.5814570454574223`*^9}, {3.581457082779111*^9, 
   3.581457166142714*^9}, {3.581457944939389*^9, 3.5814580110817842`*^9}, {
   3.581458066375146*^9, 3.581458144999946*^9}, {3.581458374344418*^9, 
   3.581458403899914*^9}, {3.5814587528597918`*^9, 3.5814587553690977`*^9}, {
   3.581459012773491*^9, 3.581459013169909*^9}, {3.581459123411289*^9, 
   3.581459154221068*^9}, {3.581459189007881*^9, 3.581459194109892*^9}, {
   3.581695890464436*^9, 3.5816958966079397`*^9}, {3.581695973997765*^9, 
   3.581696003660441*^9}, {3.581696074657789*^9, 3.581696075271782*^9}, {
   3.581696110181171*^9, 3.581696110498863*^9}, {3.581696202022273*^9, 
   3.58169625035603*^9}, {3.581697621007565*^9, 3.581697621251835*^9}, {
   3.5816977574105873`*^9, 3.581697763568321*^9}, {3.581697867557579*^9, 
   3.5816978679160433`*^9}, 3.581698926998487*^9, {3.894023164387251*^9, 
   3.894023164842475*^9}, {3.894023239594702*^9, 3.894023328561409*^9}, {
   3.894023458820818*^9, 3.8940234667301807`*^9}, {3.8940235158334446`*^9, 
   3.8940235331614614`*^9}, {3.89402358937779*^9, 3.8940236538893704`*^9}, {
   3.8940238211417055`*^9, 3.894023844610284*^9}, {3.8940240295937834`*^9, 
   3.894024041785575*^9}, {3.8940241593163633`*^9, 3.894024185267995*^9}, {
   3.894024672445916*^9, 3.8940246736124425`*^9}, {3.89402471794925*^9, 
   3.8940248104978*^9}, {3.894024858188717*^9, 3.8940248633857255`*^9}, 
   3.894025901940241*^9, {3.8940259628838625`*^9, 3.894025964250369*^9}, 
   3.894028276591203*^9, {3.8940367319625287`*^9, 3.894036732316803*^9}, {
   3.894037803615914*^9, 3.894037827814293*^9}, {3.894045679451688*^9, 
   3.8940456798081856`*^9}, {3.8944386432295976`*^9, 3.894438650054517*^9}, {
   3.8944409667415857`*^9, 3.894440994431795*^9}, {3.8944471324028006`*^9, 
   3.894447137051852*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"31dc9109-bca1-4399-8407-e1232660f308"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pathIntLog", "[", 
    RowBox[{
    "x_", ",", "y_", ",", "t_", ",", "k_", ",", "n_", ",", " ", "Ne_", ",", 
     " ", "\[Alpha]_", ",", " ", "\[CapitalLambda]_", ",", " ", "W_", ",", 
     "VG_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "qlims", ",", " ", "rlims", ",", " ", "lims", ",", " ", "tInts"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"myInds", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "[", "j", "]"}], ",", "1", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"k", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"qlims", " ", "=", " ", 
       RowBox[{"qLimits", "[", 
        RowBox[{"k", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rlims", " ", "=", " ", 
       RowBox[{"rLimits", "[", "k", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lims", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"qlims", ",", "rlims"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tInts", " ", "=", " ", 
       RowBox[{"computeInts", "[", "k", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"4", " ", "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"8", " ", 
          SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", 
           SuperscriptBox["W", "2"]}]}], ")"}], "k"], " ", "*", " ", "x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], "*", 
       RowBox[{"ParallelSum", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Negative", "@", 
            RowBox[{"Min", "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"q", "[", "j", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{"k", "+", "1"}]}], "}"}]}], "]"}]}]}], ",", "0", ",",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Product", "[", 
             RowBox[{
              RowBox[{"kimuraCoefficient", "[", 
               RowBox[{"q", "[", "j", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"k", "+", "1"}]}], "}"}]}], "]"}], "*", 
            "\[IndentingNewLine]", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"KimuraEig", "[", 
                  RowBox[{"q", "[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "*", "t"}], ")"}],
               "+", "\[IndentingNewLine]", 
              RowBox[{"Log", "[", 
               RowBox[{"GegenbauerC", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"q", "[", "1", "]"}], "-", "1"}], ",", 
                 RowBox[{"3", "/", "2"}], ",", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", "*", "x"}]}]}], "]"}], "]"}], "+", 
              "\[IndentingNewLine]", 
              RowBox[{"Log", "[", 
               RowBox[{"GegenbauerC", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"q", "[", 
                   RowBox[{"k", "+", "1"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"3", "/", "2"}], ",", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", "*", "y"}]}]}], "]"}], "]"}]}], "]"}], "*", 
            "\[IndentingNewLine]", 
            RowBox[{"Product", "[", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "VG"}], ")"}], 
                RowBox[{"1", "-", 
                 RowBox[{"r", "[", "j", "]"}]}]], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", " ", "\[Alpha]"}], " ", "\[CapitalLambda]"}], 
                 ")"}], 
                RowBox[{"r", "[", "j", "]"}]], " ", 
               RowBox[{"gegenbauerInt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"q", "[", "j", "]"}], "-", "1"}], ",", 
                 RowBox[{
                  RowBox[{"q", "[", 
                   RowBox[{"j", "+", "1"}], "]"}], "-", "1"}], ",", " ", 
                 RowBox[{"r", "[", "j", "]"}]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}], "*", 
            "\[IndentingNewLine]", 
            RowBox[{"tInts", "[", 
             RowBox[{"findEquiv", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"q", "[", "j", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", 
                  RowBox[{"k", "+", "1"}]}], "}"}]}], "]"}], "]"}], "]"}]}]}],
           "]"}], ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Sequence", "@@", "lims"}], "]"}]}], "]"}]}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.894454660442314*^9, 3.8944546608170557`*^9}, {
  3.8944547266293526`*^9, 3.8944547624769382`*^9}, {3.894454805444439*^9, 
  3.8944548171536303`*^9}, {3.894455075441698*^9, 3.894455130970222*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"33916aa6-e829-4a67-aa24-2cebcccbf2b7"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "TODO", " ", "find", " ", "out", " ", "if", " ", "we", " ", "need", " ", 
    "to", " ", "do", " ", "the", " ", "find", " ", "Equiv", " ", "thing", " ",
     "or", " ", 
    RowBox[{"not", ".", " ", 
     RowBox[{"It", "'"}]}], "d", " ", "make", " ", "a", " ", "difference", 
    " ", "for", " ", "VG"}], " ", "=", " ", 
   RowBox[{
   "0", " ", "but", " ", "only", " ", "if", " ", "that", " ", "is", " ", 
    "declared", " ", "prior", " ", "to", " ", "the", " ", "integrand", " ", 
    "being", " ", "calculated"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.894095129867941*^9, 3.8940951730239124`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"270bf6e6-6a46-460c-9ca5-0e2822dc1e8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"o", "[", "0", "]"}], " ", "=", " ", 
   RowBox[{"Kimura", "[", 
    RowBox[{"x", ",", "y", ",", "t", ",", "10"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.581698840608252*^9, 3.5816988470281277`*^9}, {
   3.58169893358095*^9, 3.581698936016356*^9}, {3.8940249390010157`*^9, 
   3.894024942791192*^9}, {3.8940256247291794`*^9, 3.8940256463354864`*^9}, {
   3.8940260146888204`*^9, 3.8940260208799677`*^9}, {3.8940949925296106`*^9, 
   3.894094993168956*^9}, 3.894106940768386*^9, 3.89443871636213*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"b2842080-7adb-4862-9bab-61fa164a318b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"o", "[", "1", "]"}], " ", "=", " ", 
   RowBox[{"pathInt", "[", 
    RowBox[{
    "x", ",", "y", ",", "t", ",", "1", ",", "10", ",", " ", "Ne", ",", " ", 
     "\[Alpha]", ",", " ", "\[CapitalLambda]", ",", " ", "W", ",", "VG"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.581458550861885*^9, 3.5814585558613653`*^9}, {
   3.894024945431729*^9, 3.894024958799531*^9}, 3.8940252473834114`*^9, {
   3.8940256270577126`*^9, 3.8940256271987886`*^9}, {3.894025659502817*^9, 
   3.894025661351304*^9}, {3.8940260089671917`*^9, 3.8940260322077703`*^9}, {
   3.8940263484720373`*^9, 3.894026352654399*^9}, {3.894028305363382*^9, 
   3.8940283054431505`*^9}, 3.8941069528933315`*^9, 3.8944387199248333`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"dd7575d0-b4ae-447f-b86e-93299ab00d2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"o", "[", "2", "]"}], " ", "=", " ", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"pathInt", "[", 
      RowBox[{
      "x", ",", "y", ",", "t", ",", "2", ",", "10", ",", " ", "Ne", ",", " ", 
       "\[Alpha]", ",", " ", "\[CapitalLambda]", ",", " ", "W", ",", "VG"}], 
      "]"}], ",", "100"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.581457342123027*^9, 3.581457347934339*^9}, {
   3.894024969743354*^9, 3.8940249728240886`*^9}, {3.8940250106647124`*^9, 
   3.894025024592394*^9}, {3.8940260361218214`*^9, 3.894026036183374*^9}, 
   3.8940263621598988`*^9, {3.894028309436065*^9, 3.89402830955498*^9}, 
   3.894106962559558*^9, 3.8944387237902193`*^9, {3.8944627045533895`*^9, 
   3.8944627113961906`*^9}, {3.8944633040747623`*^9, 3.8944633043314342`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"52f1e2c7-66cc-4f9e-9777-1d0ed9c3ad11"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"o", "[", "3", "]"}], " ", "=", " ", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"pathInt", "[", 
      RowBox[{
      "x", ",", "y", ",", "t", ",", "3", ",", "10", ",", " ", "Ne", ",", " ", 
       "\[Alpha]", ",", " ", "\[CapitalLambda]", ",", " ", "W", ",", "VG"}], 
      "]"}], ",", "50"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.581457171528211*^9, 3.581457204518023*^9}, {
   3.581457236045732*^9, 3.5814572393563128`*^9}, {3.5814573060276546`*^9, 
   3.5814573116912394`*^9}, {3.894025003335619*^9, 3.894025033663895*^9}, {
   3.8940260613835726`*^9, 3.894026061454717*^9}, 3.894026364640445*^9, 
   3.8940270098668475`*^9, {3.8940283130831685`*^9, 3.8940283134200525`*^9}, {
   3.894035636321269*^9, 3.8940356516290607`*^9}, {3.8940357538195267`*^9, 
   3.8940357543000574`*^9}, {3.8940365717252493`*^9, 3.8940365779277506`*^9}, 
   3.8941069666359367`*^9, 3.8944387306371093`*^9, {3.8944626625968513`*^9, 
   3.894462670887946*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"ed3f4b96-cdcd-4e5e-8f77-dd0cef55bd13"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"o", "[", "4", "]"}], " ", "=", " ", 
    RowBox[{"pathInt", "[", 
     RowBox[{
     "x", ",", "y", ",", "t", ",", "4", ",", "10", ",", " ", "Ne", ",", " ", 
      "\[Alpha]", ",", " ", "\[CapitalLambda]", ",", " ", "W", ",", "VG"}], 
     "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.581457171528211*^9, 3.581457204518023*^9}, {
   3.581457236045732*^9, 3.5814572393563128`*^9}, {3.5814573060276546`*^9, 
   3.5814573116912394`*^9}, {3.894025003335619*^9, 3.894025033663895*^9}, {
   3.8940260613835726`*^9, 3.894026061454717*^9}, 3.894026364640445*^9, 
   3.8940270098668475`*^9, {3.8940283130831685`*^9, 3.8940283134200525`*^9}, {
   3.894035636321269*^9, 3.8940356516290607`*^9}, {3.8940357538195267`*^9, 
   3.8940357543000574`*^9}, {3.8940365717252493`*^9, 3.8940365779277506`*^9}, 
   3.894106971652803*^9, {3.8941086368584394`*^9, 
   3.894108643835526*^9}},ExpressionUUID->"e94a2b89-566c-4fc8-91fe-\
980840bb6d2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"olog", "[", "1", "]"}], "=", 
   RowBox[{"pathInt", "[", 
    RowBox[{
    "x", ",", "y", ",", "t", ",", "1", ",", "10", ",", " ", "Ne", ",", " ", 
     "\[Alpha]", ",", " ", "\[CapitalLambda]", ",", " ", "W", ",", "VG"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8944548595134306`*^9, 3.894454892488119*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"ef570326-8884-4047-9780-65df5dd5a469"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"olog", "[", "2", "]"}], "=", 
   RowBox[{"pathInt", "[", 
    RowBox[{
    "x", ",", "y", ",", "t", ",", "2", ",", "10", ",", " ", "Ne", ",", " ", 
     "\[Alpha]", ",", " ", "\[CapitalLambda]", ",", " ", "W", ",", "VG"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8944549627499876`*^9, 3.8944549716074643`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"cedf5cec-72b2-4da0-a9c7-36332425d497"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"o", "[", "5", "]"}], " ", "=", " ", 
   RowBox[{"pathInt", "[", 
    RowBox[{
    "x", ",", "y", ",", "t", ",", "5", ",", "10", ",", " ", "Ne", ",", " ", 
     "\[Alpha]", ",", " ", "\[CapitalLambda]", ",", " ", "W", ",", "VG"}], 
    "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.581457171528211*^9, 3.581457204518023*^9}, {
   3.581457236045732*^9, 3.5814572393563128`*^9}, {3.5814573060276546`*^9, 
   3.5814573116912394`*^9}, {3.894025003335619*^9, 3.894025033663895*^9}, {
   3.8940260613835726`*^9, 3.894026061454717*^9}, 3.894026364640445*^9, 
   3.8940270098668475`*^9, {3.8940283130831685`*^9, 3.8940283134200525`*^9}, {
   3.894035636321269*^9, 3.8940356516290607`*^9}, {3.8940357538195267`*^9, 
   3.8940357543000574`*^9}, {3.8940365717252493`*^9, 3.8940365779277506`*^9}, 
   3.894106971652803*^9, {3.8941086368584394`*^9, 3.894108660422559*^9}, 
   3.8944536931603384`*^9},ExpressionUUID->"f38e853c-ef79-4c4a-9bf5-\
d81947136dec"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8941087495371313`*^9, 3.8941179653879695`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"6d774ad6-1107-43d4-8e13-a1614e15e2dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Save", "[", 
    RowBox[{"\"\<o1through4.m\>\"", ",", "o"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Get", "[", "\"\<o1through4.m\>\"", "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.894101178267416*^9, 3.894101199331894*^9}, {
   3.8941013178191385`*^9, 3.894101318003171*^9}, 3.894106910139295*^9, {
   3.894106976069117*^9, 3.8941070002231145`*^9}, {3.894438596501548*^9, 
   3.8944386132621574`*^9}},ExpressionUUID->"3c75cfbe-6a65-4d98-97bc-\
12f70c1da44c"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
       RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
       RowBox[{"(", 
         RowBox[{
           FractionBox[
            RowBox[{"3", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "t"}]], " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    FractionBox["1", "4"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"4", " ", "Ne", " ", "t", " ", "VG"}], "W"]}]], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    FractionBox[
                    RowBox[{"2", " ", "Ne", " ", "t", " ", "VG"}], "W"]]}], 
                    "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    FractionBox[
                    RowBox[{"4", " ", "Ne", " ", "t", " ", "VG"}], "W"]]}], 
                    ")"}]}], "+", 
                  RowBox[{
                    FractionBox["1", "6"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"6", " ", "Ne", " ", "t", " ", "VG"}], "W"]}]], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    FractionBox[
                    RowBox[{"4", " ", "Ne", " ", "t", " ", "VG"}], "W"]]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    FractionBox[
                    RowBox[{"6", " ", "Ne", " ", "t", " ", "VG"}], "W"]]}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                    FractionBox["1", "24"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"8", " ", "Ne", " ", "t", " ", "VG"}], "W"]}]], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    FractionBox[
                    RowBox[{"6", " ", "Ne", " ", "t", " ", "VG"}], "W"]]}], 
                    "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    FractionBox[
                    RowBox[{"8", " ", "Ne", " ", "t", " ", "VG"}], "W"]]}]}], 
                    ")"}]}]}], ")"}], " ", 
              SuperscriptBox["W", "4"]}], 
            RowBox[{"8", " ", 
              SuperscriptBox["Ne", "4"]}]], "+", 
           TemplateBox[{"16687"}, "OutputSizeLimit`Skeleton"], "+", 
           FractionBox[
            RowBox[{"250", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"-", "3"}], " ", "t"}]], " ", 
              SuperscriptBox["W", "2"], " ", 
              RowBox[{"(", 
                RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "t", " ", 
                    RowBox[{"(", 
                    RowBox[{"14", "+", 
                    FractionBox[
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "W"]}], 
                    ")"}]}]], " ", 
                    SuperscriptBox["W", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "-", 
                    RowBox[{"4", " ", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], "+", 
                    RowBox[{"6", " ", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}]}], ")"}],
                     " ", "Ne", " ", "VG"}], "+", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], ")"}]}], 
                   RowBox[{"4", " ", 
                    SuperscriptBox["Ne", "2"], " ", 
                    SuperscriptBox["VG", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"8", " ", "Ne", " ", "VG"}], "+", 
                    RowBox[{"14", " ", "W"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"24", " ", "Ne", " ", "VG"}], "+", 
                    RowBox[{"14", " ", "W"}]}], ")"}]}]], "+", 
                  FractionBox[
                   TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], 
                   TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]], "+", 
                  TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "-", 
                  FractionBox[
                   RowBox[{"2", " ", "W", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "+", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], ")"}]}], 
                   RowBox[{"Ne", " ", "VG", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "-", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], 
                    ")"}]}]]}], ")"}], " ", 
              TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", 
                  RowBox[{"2", " ", "y"}]}], ")"}], " ", 
              SuperscriptBox["\[Alpha]", "4"], " ", 
              SuperscriptBox["\[CapitalLambda]", "4"]}], 
            RowBox[{"290521", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"8", " ", "Ne", " ", "VG"}], "-", 
                  RowBox[{"14", " ", "W"}]}], ")"}]}]]}], ")"}]}], 
     Short[#, 8]& ], "line" -> 21, "sessionID" -> 28659472436753182570, 
   "byteCount" -> 154951352, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.89410701983234*^9, 3.894108810196476*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"b4f52b86-f951-4a7b-82fc-30dc56054ecb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"o", "[", "0", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", ".2"}], ",", 
    RowBox[{"y", "\[Rule]", ".4"}], ",", 
    RowBox[{"t", "\[Rule]", ".2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5816988548740807`*^9, 3.5816988611955957`*^9}, {
  3.894025046408874*^9, 3.8940250825759015`*^9}, {3.894026064640986*^9, 
  3.894026064703346*^9}, {3.8940296201718025`*^9, 3.8940296213166833`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"c8b750da-47fc-481a-afbd-b0f48ea7de6b"],

Cell[BoxData["0.9376085106639277`"], "Output",
 CellChangeTimes->{3.893526559802105*^9, 3.894025050984471*^9, 
  3.8940263728171654`*^9, 3.8940302706581173`*^9, 3.8940354227318997`*^9, 
  3.8940437039372644`*^9, 3.8940456905764875`*^9, 3.8941070289897733`*^9, 
  3.894440110392908*^9, 3.8944425278117657`*^9, 3.894446878846348*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"826e6b90-aa9e-44ba-8292-2f7724dfdfb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"o", "[", "1", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", ".2"}], ",", 
    RowBox[{"y", "\[Rule]", ".4"}], ",", 
    RowBox[{"t", "\[Rule]", ".2"}], ",", 
    RowBox[{"Ne", "\[Rule]", "500"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.005"}], ",", " ", 
    RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "1"}], ",", " ", 
    RowBox[{"W", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"VG", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5814592255013447`*^9, 3.581459232108129*^9}, {
  3.894025053967447*^9, 3.8940250572708797`*^9}, {3.8940250913915205`*^9, 
  3.894025099319282*^9}, {3.894026066968057*^9, 3.894026067047793*^9}, {
  3.8940296239150677`*^9, 3.894029623994348*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"19fe2030-ca6b-4d44-9749-6c47bbb7de80"],

Cell[BoxData["0.9416296716964567`"], "Output",
 CellChangeTimes->{3.5816978585211277`*^9, 3.581698647904564*^9, 
  3.893526570041801*^9, 3.894025100011117*^9, 3.89402525867178*^9, 
  3.894025559777506*^9, 3.894026157373062*^9, 3.894026374840218*^9, 
  3.8940302707109284`*^9, 3.8940354227848473`*^9, 3.8940437039684024`*^9, 
  3.894107031705038*^9, 3.894440117813876*^9, 3.8944425294767413`*^9, 
  3.8944468805024633`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"6241afcf-a3a1-4ce4-ae19-354d877e1f26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"o", "[", "2", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", ".2"}], ",", 
    RowBox[{"y", "\[Rule]", ".4"}], ",", 
    RowBox[{"t", "\[Rule]", ".2"}], ",", 
    RowBox[{"Ne", "\[Rule]", "500"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.005"}], ",", " ", 
    RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "1"}], ",", " ", 
    RowBox[{"W", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"VG", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.581698652296801*^9, 3.581698656890707*^9}, 
   3.8940265573759212`*^9, {3.894026628141996*^9, 3.894026643823029*^9}, {
   3.894029626451759*^9, 3.894029626547222*^9}, {3.8944558620674543`*^9, 
   3.894455872213746*^9}, {3.894456034428669*^9, 3.894456042736411*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"6d9e476e-7006-4615-b0cb-856c70f22caf"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*FractionBox[\\\"1\\\", SuperscriptBox[RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"122\\\", \\\"\[RightSkeleton]\\\"}], \\\"800.`\\\"]]\
\\) is too small to represent as a normalized machine number; precision may \
be lost.\"", 2, 99, 28, 28661732538050829320, "2ndLocal"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8944563795891795`*^9, 3.8944632730944104`*^9, 
  3.8944633711455493`*^9},
 CellLabel->
  "During evaluation of \
In[99]:=",ExpressionUUID->"2b03ab8c-3024-4d7e-ad93-c34e37ee0756"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*FractionBox[\\\"1\\\", SuperscriptBox[RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"122\\\", \\\"\[RightSkeleton]\\\"}], \\\"800.`\\\"]]\
\\) is too small to represent as a normalized machine number; precision may \
be lost.\"", 2, 99, 29, 28661732538050829320, "2ndLocal"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8944563795891795`*^9, 3.8944632730944104`*^9, 
  3.8944633711545506`*^9},
 CellLabel->
  "During evaluation of \
In[99]:=",ExpressionUUID->"6c0f53fe-85db-4de1-ab4d-14e7e0b35baf"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*FractionBox[\\\"1\\\", SuperscriptBox[RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"122\\\", \\\"\[RightSkeleton]\\\"}], \\\"801.`\\\"]]\
\\) is too small to represent as a normalized machine number; precision may \
be lost.\"", 2, 99, 30, 28661732538050829320, "2ndLocal"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8944563795891795`*^9, 3.8944632730944104`*^9, 
  3.894463371162619*^9},
 CellLabel->
  "During evaluation of \
In[99]:=",ExpressionUUID->"563e7890-9535-4072-af96-36fc09ef5a80"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 99, 31, 28661732538050829320, "2ndLocal"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8944563795891795`*^9, 3.8944632730944104`*^9, 
  3.8944633711706476`*^9},
 CellLabel->
  "During evaluation of \
In[99]:=",ExpressionUUID->"4a3c36d1-1bdc-41c1-8ece-a3533e16795a"],

Cell[BoxData["0.47374633293160123`"], "Output",
 CellChangeTimes->{
  3.894455826277878*^9, {3.894456010123927*^9, 3.894456043499221*^9}, 
   3.8944563796508083`*^9, 3.8944632731314507`*^9, 3.894463371179534*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"dc9d4ca1-c1e7-4d70-98e8-9dbde30a8ed4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{"0.47374633293160123`", ",", "16"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[97]:=",ExpressionUUID->"0bb86e9e-15a3-4249-ba79-f900226a28fe"],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   StyleBox["\<\"0.4737463329316013\"\>",
    ShowStringCharacters->False],
   0.47374633293160123`,
   AutoDelete->True],
  NumberForm[#, 16]& ]], "Output",
 CellChangeTimes->{3.894463291712837*^9},
 CellLabel->
  "Out[97]//NumberForm=",ExpressionUUID->"9fd44fca-c433-4a44-b69a-\
9924b9c5b77c"]
}, Open  ]],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{
  3.894455230565523*^9},ExpressionUUID->"ad92abd1-7c0a-4f48-9b4b-\
1cca93b4c153"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"o", "[", "3", "]"}]], "Input",
 CellLabel->"In[23]:=",ExpressionUUID->"46078c37-16dd-4082-93e7-3f409498eeca"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     FractionBox[
      RowBox[{"2048", " ", 
        SuperscriptBox["Ne", "6"], " ", 
        RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        SuperscriptBox["\[CapitalLambda]", "3"], " ", 
        RowBox[{"(", 
          RowBox[{
            FractionBox[
             RowBox[{"3", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", "t"}]], " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}], " ", 
               SuperscriptBox["W", "3"]}], 
             RowBox[{"1024", " ", 
               SuperscriptBox["Ne", "3"]}]], "+", 
            TemplateBox[{"2864"}, "OutputSizeLimit`Skeleton"]}], ")"}]}], 
      SuperscriptBox["W", "6"]], Short[#, 8]& ], "line" -> 23, "sessionID" -> 
   28661732538050829320, "byteCount" -> 14218240, "size" -> 8, "stored" -> 
   False, "expr" -> Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8944546978862333`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"29c318c3-3b6e-464e-8bdb-d7dd802efd92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"o", "[", "3", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", ".2"}], ",", 
    RowBox[{"y", "\[Rule]", ".4"}], ",", 
    RowBox[{"t", "\[Rule]", ".2"}], ",", 
    RowBox[{"Ne", "\[Rule]", "500"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.005"}], ",", " ", 
    RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "1"}], ",", " ", 
    RowBox[{"W", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"VG", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5816986587724657`*^9, 3.581698663761424*^9}, 
   3.8940265593679614`*^9, {3.894026632113603*^9, 3.8940266477906017`*^9}, {
   3.8940377048632298`*^9, 3.894037704937372*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"1d684948-2181-4c30-8aaa-984d962f5e30"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \\\"800.`\\\
\"}], \\\"]\\\"}]\\) is too small to represent as a normalized machine \
number; precision may be lost.\"", 2, 59, 17, 28661633952470015237, 
   "2ndLocal"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8940302710942855`*^9, 3.8940454290467696`*^9, 
  3.8941070487588215`*^9, 3.8944401304756365`*^9, 3.894446886975087*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"d90ba994-12d6-4757-8c98-68fbab7afabc"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \\\"800.`\\\
\"}], \\\"]\\\"}]\\) is too small to represent as a normalized machine \
number; precision may be lost.\"", 2, 59, 18, 28661633952470015237, 
   "2ndLocal"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8940302710942855`*^9, 3.8940454290467696`*^9, 
  3.8941070487588215`*^9, 3.8944401304756365`*^9, 3.894446887018402*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"4c72ed33-8015-481f-a78e-57dd632e0ede"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \\\"800.`\\\
\"}], \\\"]\\\"}]\\) is too small to represent as a normalized machine \
number; precision may be lost.\"", 2, 59, 19, 28661633952470015237, 
   "2ndLocal"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8940302710942855`*^9, 3.8940454290467696`*^9, 
  3.8941070487588215`*^9, 3.8944401304756365`*^9, 3.8944468870602846`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"dc14c7ce-bbaa-4692-b0b0-ec796cd01790"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 59, 20, 28661633952470015237, "2ndLocal"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8940302710942855`*^9, 3.8940454290467696`*^9, 
  3.8941070487588215`*^9, 3.8944401304756365`*^9, 3.8944468870755243`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"ca64b92d-ab85-4004-9626-f2a10b531e43"],

Cell[BoxData["0.15525975186138727`"], "Output",
 CellChangeTimes->{3.581698664177492*^9, 3.8935265771123714`*^9, 
  3.8940269953122644`*^9, 3.8940302712735476`*^9, 3.8940454291659813`*^9, 
  3.894107048948924*^9, 3.8944401305971975`*^9, 3.8944468871201925`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"f90187be-6f09-47bf-99af-0eb4d2cbedc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{"0.15525975186138727`", ",", "16"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[60]:=",ExpressionUUID->"32ed974a-f610-445f-9bf5-deb4c3bafe27"],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   StyleBox["\<\"0.1552597518613873\"\>",
    ShowStringCharacters->False],
   0.15525975186138727`,
   AutoDelete->True],
  NumberForm[#, 16]& ]], "Output",
 CellChangeTimes->{3.894446907963908*^9},
 CellLabel->
  "Out[60]//NumberForm=",ExpressionUUID->"c93d847d-eb91-4953-af9a-\
8dca1bb6cf5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"o", "[", "4", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", ".2"}], ",", 
    RowBox[{"y", "\[Rule]", ".4"}], ",", 
    RowBox[{"t", "\[Rule]", ".2"}], ",", 
    RowBox[{"Ne", "\[Rule]", "500"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.005"}], ",", " ", 
    RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "1"}], ",", " ", 
    RowBox[{"W", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"VG", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.894037636157112*^9, 3.8940376622608194`*^9}, {
  3.89403770731588*^9, 3.894037707371934*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e81749fd-d90c-45e2-b47c-24087e127e68"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \\\"800.`\\\
\"}], \\\"]\\\"}]\\) is too small to represent as a normalized machine \
number; precision may be lost.\"", 2, 26, 9, 28659459998579567246, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.89404543237569*^9, 3.8941014779042935`*^9, 
  3.8941070587227063`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"7e8f8046-53d4-4109-993b-059f02cfb66a"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \\\"800.`\\\
\"}], \\\"]\\\"}]\\) is too small to represent as a normalized machine \
number; precision may be lost.\"", 2, 26, 10, 28659459998579567246, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.89404543237569*^9, 3.8941014779042935`*^9, 
  3.8941070589608884`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"45b1c2d7-6677-456c-ae0f-377b6091f878"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \\\"800.`\\\
\"}], \\\"]\\\"}]\\) is too small to represent as a normalized machine \
number; precision may be lost.\"", 2, 26, 11, 28659459998579567246, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.89404543237569*^9, 3.8941014779042935`*^9, 
  3.8941070592055616`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"3f5a3bfa-1afb-44c1-9364-7a5eee990d91"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 26, 12, 28659459998579567246, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.89404543237569*^9, 3.8941014779042935`*^9, 
  3.8941070594573383`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"ac37a469-82dd-4a30-9fff-1829b3e91db1"],

Cell[BoxData[
 RowBox[{"-", "5.164961418839354`*^-14"}]], "Output",
 CellChangeTimes->{3.894045433335414*^9, 3.8941014792457533`*^9, 
  3.894107060251173*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"088542eb-5306-45df-b41d-a4251e8b54f9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"newversion", " ", "=", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", 
       SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
       RowBox[{"\[CapitalLambda]", " ", "/", " ", 
        SuperscriptBox["W", "2"]}]}], ")"}], "2"], " ", "*", " ", 
    RowBox[{"o", "[", "2", "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.894045979490324*^9, 3.894046001826153*^9}, {
  3.89410708114368*^9, 
  3.894107083505861*^9}},ExpressionUUID->"3f7a9219-1ff0-4c5e-ad5f-\
427440d60fa0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"DumpSave", "[", 
    RowBox[{"\"\<newversion.mx\>\"", ",", "newversion"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", " ", "=", " ", "0"}], ",", " ", 
    RowBox[{"k", " ", "\[LessEqual]", "3"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"approx", "[", "k", "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"Sum", "[", " ", 
       RowBox[{
        RowBox[{"o", "[", "j", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "0", ",", " ", "k"}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.89404604908537*^9, 3.894046073057393*^9}, {
  3.8941070865912323`*^9, 3.8941070970104065`*^9}, {3.894107146454072*^9, 
  3.8941072463569164`*^9}, {3.8944406774697027`*^9, 3.89444069875743*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"fd175828-766d-48f6-970d-f82f1349d10d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"approx", "[", "k", "]"}], "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "0.2"}], ",", " ", 
         RowBox[{"t", "\[Rule]", "0.05"}], ",", 
         RowBox[{"Ne", "\[Rule]", "500"}], ",", 
         RowBox[{"\[Alpha]", "\[Rule]", "0.005"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "1"}], ",", " ", 
         RowBox[{"W", "\[Rule]", "1"}], ",", " ", 
         RowBox[{"VG", "\[Rule]", "1"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", " ", "4"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"Table", "[", 
      RowBox[{"k", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "4"}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.581699093013836*^9, 3.5816991226436577`*^9}, 
   3.8940264893421993`*^9, {3.894026562488262*^9, 3.8940265662294765`*^9}, {
   3.894026603401546*^9, 3.894026611990757*^9}, {3.8940270224228735`*^9, 
   3.8940270411118507`*^9}, {3.8940274078549423`*^9, 
   3.8940274083026896`*^9}, {3.8940275810794344`*^9, 3.8940275861190734`*^9}, 
   3.8941072358271103`*^9, {3.8941074942820735`*^9, 3.8941075179447064`*^9}, {
   3.8941075596519723`*^9, 3.8941075931286783`*^9}, {3.8941076572886553`*^9, 
   3.894107702456088*^9}, {3.89444068182786*^9, 3.894440682187627*^9}, {
   3.894440736837143*^9, 3.894440737588107*^9}, {3.8944469425398293`*^9, 
   3.8944469429121304`*^9}, {3.8944470115443907`*^9, 3.8944470124486246`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"fe18bc76-f948-4ad9-afcc-1f9e6432fe7f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9cpMHJvQICFTNE9GdZgCV2oJV9tlEhZeJkkwjlIQkDM/vvkc3Q+0oPPZY/Tx
ucN5X4+TUFFkeIKVSkHXRAbf6910PXlU+Etn6P6/I5BUt4lef4+Lh6zn6Hpd
fvHLacUW3Vd3s7UsUXDO9Hi3Wp8tuNPXdrjTKPD6j9viSYMtDLZTNp9apYCN
L6nsKGGL6abiP6GMkyi/eTJ/MdYWp0+/X7i8cRIXXV4/OBBkC4cXL2dmN0/i
pLj5r2IXW6zXNh9R2TGJd4+bq721bLFvZH8ty75JqDprfNy81RZ3ZTdXlHBO
gmtR8hz/gg0SU+eKrLgm0bqyW6l8wAYnzL5nN/NOQi6Jluf6yQaXF+yiQoUm
cTro6fSSug28NfXDL4tMQqnsnvreizaoy78eNHtqEgfWdr3P5bXBzSeH3VXO
T0I92nCvy7Q1TDa3PGSRprN9ZQ2nmzUyHn67XyI7iab3GpFy960xX/v2rpXc
JOR3/TVfkbWGa4irSvP1SUQ/WXUc3WKNcA4hsVCtSTCY9Tj/emaFb8d9mVjM
J6HoyBx81NESZ9v21odZTqLtxAaSgKYlMl1SQ9lsJlHF95Kv9IwlEusrOfc5
TMJcPn7Bvc8CvhYbhbjdJzEs2j65VGAO1U/uKkIRkzivm7AYqGaGMfHHUfJF
k8ge5lVonTeC3sh23driSXAE7j8wH2mE7mcxfNfL6Plz3Yt5eNEIdb0F75Wr
J2GUyHBT66khsp/QijRbJqHCkGbzaL0BXErtRwzJk3Dad4ehfkIPLNesT7gz
T+GSrc0dyQh1xJfs3CbOMoUfpePHFVPVICL2YWJ29xRG7Nvbr+Sq4obAeMo9
jilYrgh95GpThv8mHZ7Lh6cgccnFtWH9NWwok2dfJz6F1J9cw/trz2DxAs+6
J4ZT8H3pzTjVJUt4fSrqFzWewnJFjXzez6sE2/E736gmU5hyue/BMytPnOZ8
6XTXcgpXdfzLw7bdICyXty9cdJ6CQFwjexavGjHxeXniT8gU/sha1fzWvU30
CjW1OhZOgS20UvrwD0MibpLl8XpiCmFsK1lCKkaEfpoaf2DJFCjvvaOnqo2I
icOdDvGVU+DreVXukvuAWNzfz1XVNIVbax2v3UMeEixbpx6wjU5BPdjx4aLw
I6KtSogldmwK37gsbFPiHxGRXhZfj1Lo3/8OMm5mMScOMvzefmFmCjl/1Kp8
58yJE8srWfdWpmBX+7DU96YlcYW8+e/HHVTwctxbDWKwJrYky785v4uKV9ps
Jeqi1kTdvWc3SlmpWI61J+UZWxNqfcwJ7XupOCea4q3SYE3ote258peHivVm
n/JCwm0I51K+EPmzVGzgW+9huY1ESLgZirWep2LVfN7qwHn6e10idfjOBSoe
jRxskDEgEb75gqKWklQ08TAKMxaQiIjM/7ojrlHx11unfu4e/T0Ri8M/dag4
M3zjevFze+K30+/N9+5R8WZ2TtLliz1xVjN1su8+FVu9n8++7LInCnbu/NRp
TIXL21M7yJwORKVb/+VaayokfPWeJrx0IJjuhh2RI1EREHk/nzvHgVAQu7Kl
wp4KYp4rYqrZgWia/dBU5ELFf5s3xjzc4kj06D/Wzfamwp7P9/RnC0fiIP6T
PulHxWGXpTkTH0dCb/8o//tndJY1X9GJdSTIrYrTb0KoKHmUxLn43ZEQyFzX
wvucCr93HS3h/Y6EacDnnLgXVNxf3rzDeM6R+CVz4PGrKCrkd1iJJe11Ik7z
NOmxv6biZnR96aZjToTdqofM8zgqhne4/n0h5kTk/TgnsCuRitOSGpk35J2I
PzmT2wKTqWj7bp8qrOVESITFzWxJpWLf4qP000ZOhJu5Wqt3Gn09h488vW3j
RGw6WhDl9pEKs6Lcyq3PnAj59RZPVjOpOHkkozTwhRMRMMCr7/SJPj/Dx/eC
cU5EQ0GH7FIOFZ8bma8NpDoRLJH+x2zzqIgIK9JNy3Ai1G0ldsx+peIog0y2
9xcnIkJ57tejb1TcWa7aSCp0In6cSGmjEFQMKB04aF3iRBzYop33oJSKLIXy
IucKJ0J3dEfMz3Iq+Pf8TQ+udiISS0pc71VRsbe8+M27Gifi52vS/f7vVLAp
dlnV1zoRR52OXb1dR4VO3o/mOTqb3OwT7Gqg4u0WUV8OOr8/Fcqs0UzFx9AL
mvjuRMwwy841t1KhekaAQb/SiTg1udx+o4OKqsyjcq6lTgSp6n1+bRcVjb16
0+Hf6Pom6b2W66HCP3o1Jz7XiaC5sj2t6KNCMe/UvfhMJ+LSnWoDqUEqgo/I
Z4e+pet73kWOGKbrJ51iak3Xq5RN5MTFUSrietuUJOl6bpwd2Zk/RoVafSDP
ip8TIVf/8rcohYojDCVJUY+dCP80hc7sKSrm7WJf8Vo6EfVe/76enKECzHGV
QfeciF36n2Lfz9L3A0fQdK+KE6Eq8cD92DwVsdvC2rdediJecO43SlmkYuPR
s5LsJ52IrsUGeb4VKgqTbX7/3e9E3M04y8K1RgWn36q8Gt1vX7SXmZvWTeN7
ZNqzih+OBPOmr9s91k/j6mK4fxvhSBTfucQ0wTSNa5JyJt/o/t7H9G9jzLZp
SBg5JIY+dCSsPhWvV2KehoNRx5UleUeCd6vMv8+7p/H2j2eQ6SZHwiln4+oD
9mn8O00LtR12IFr1qmicHNM4KruxdP03B8Iz99qi28Fp6FXfs0t75ECQDVSo
isemMXb13tHyQntCYtfuyX/H6fMptTzODLAnXha0jWcLTyPLJrFi+217Qo5V
6+e+M9OYm991YutvOyKd0On5KTEN9bvq7bU77QhG00M/Xl6ehs5J3+OTLSTi
NvtwxzWZaTwv+vrBIJxEbH9k2JIpP41a0ZrHt1lJhDmn2XcX9WkcSdVs3EGz
ISorhKpOak4jg+/w8qcMG4LbaqZ8+NY0JhvJ3HH3bYimKutiOd1p8IQNbhWv
tCZOkRxz2Uym4X7tvKq4nRXhf+hCTpXZNMTTT+gXc1kRI7V/s50sppGziYPB
vsySCOd1+zhoOw1pL5V50y2WxFKj95v3rtO4uGJtr7tmRig7yyXputO/v8H5
iHLSjHjLvzWB1Wsad8w+GWfcNSW0HwfGOPhPI5Sl7knbh4dEoWD4c5kX02iY
LTFlOmREuHklPO1Nn8ZMw5tehNwhdthvvnbvwzQic6wTvKK0iSjjR6zkjGl4
TtRwfnutRXxSEEua+UzXu/GWLjlInSCzNJczEtPg23RvtO2sHKEQu47pWOs0
RJtndPgSzqMr2KjpQ/s0Ul+3s9bxXYbB07rIU13TSBrLeTW+8QqeGEQeu9g3
jfNtT2i/F5WQKSiioDQ2DRX1tOGiK9pgz9UNIv2ZxtnYZjHZI8ZIeltxk7Y6
jWQGM+GGiIcQiTrO7bpuBntqhm6e3W4K+cdLGb4bZxCm3HLxPaM5XKSDm6N3
zuBZ91DsfzutMdxYxFbKNwNN45cJF/wc8GGcK5pZcQY8h4WOOj/2gO9rL73+
GzMQr15t2MzkCQNV6pGPKjPYIGwp3vbcEwcKCzOva86gLGxV40SGF/yDb1cG
6M/Ap9SttXPeB8ZnX81udZyBsLWM+HxBAHg92eQ2p8xAqXHTdsHo51g777Kj
8+0MqtwLQ7nnn+MHdaQl5d0MNG5MbPxwPRwhmp/uXsmawY3OeO9Axhf4J6hq
41U4g+c5hffUbSLQ2xwcu76Vnq9BXuZ9y1fI816639o+A45XS7zPWl4h/ILu
saSuGahKD16BaBQU3gh/luqnx8+5yHztbxS+OtR/fzoxA6dvd043hsQgQkg0
WGVqhv6+Pjl/eSkGVsMx6jwzM7itqP1aTOc1BBTNBornZxBYY379k1AsNjC0
JYcszYBqHcl+OiIWgzkXTPRoM9gp4KJ4+l8sCk2SToqszoDvYw+RbRyHl9zb
Fv79m0H932bxzJY4/A9XvXYy
          "]]}, Annotation[#, "Charting`Private`Tag$430055#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ZpHCYHeUOVIjxN3rKKDvearw/89N3dWPbH+kQIbm+zh+ND7Z6NvXJ40U+K53
ttkV3X9SqmCUjFDAQPBnyXH0/XxMt+setlIgJPPu8GFU393lIxlL7RTw+P24
yAjVj2tp8b3fRYEAlu13RH48spTp8WCuhwJUhSm3mnjxyFlv8at3+ilwjIoo
vMyFRxxvzkpMDFLAjlEq1JQVj5TIxbGafUb1zHz8x8yAR7ZYtb99HkHz+6Ru
j/4Ah8it//pybYwCCetqtFd/4hCPrpIPfRMU+PzAIqRnA4fU4e9l6kxTAIlk
pYpawCF/fLn8O2YpMHzNfi1mHIeoWXbbahIooFjqWD/Uh0P8Lv2ngyxQoOTl
+S1DtH5auWSlVJcpsHOduHeoEofoDKR8v0CmAJPzkTiBJBwS8VZ/vHIDrafv
dxn9gnHIQPDBx3NbFPCjMsVweeCQG+oPA8R30PM75E+OGuOQJN6T9gU/KfCh
8/q5fXUcMvFzUFf4NwWOYjRlbkriEKuyixyn9tF5YhB4NJIah9Tc/sU6RLUJ
nBoGHi/XchFW+o+HA2k3YVOBxP9kKBdptlRjXGPcBIfASwnXsbnICcaDQxks
m6CSp+ar6puLPHvfTHuddRM6wlv+CNvkIkLMlw+qjm6CkJXU5tSZXMS7+tDe
w2ObwFi3GF1Al4uM3Ov6w8uzCTKBn9jtFnOQoFq9n36nN+FG2R/O95k5CMnW
mGIgvgmT0lTNVofQ+cR+dP1AchN+nBQTO/YhG0mpH12tlNmEqaBu2Ut22YgO
p8XSCYVN0JI3tmyryUKKEOvpJfVNuKrm6R2lnonQPBaYTNHYhNJDl90/TmUg
d44tjOldRvcX/3wozj0DOfzEbrhcF9VjaaYllYtFnHmdev4z3YS+luWz1bNp
SGeHdNc580043m7T222fhvA/22pfuLUJHxqP0zlQUpGhLtdmnbvofkzstBrf
UxA5jxe1XI6bkCbS8WqDkIRECKhUdzltgqjuNzaam0nIYt+/Su+nm3D9tphc
WHcikijk947gvglfw2/9N5GfgOx+Cskv8d2Eoq0LfhIacYjRSx383YBNMDz2
5rNdbizyRpQ5lzN4E952e9ZT9mKQ2z5RGV4RmzBLHNfgtY1CGiQSEy4nbUKK
hM/3e1uhiF9wrv9M0SbIfXT1u/frOXLkOYPe/dJNaHj9aeHDgTuS/ugJJ6ls
Eyw4UtUF9p4h7/WV8FtVm8Bd+5Q0+/4hQuL43E6DbIKT5buXgqVSoJ9FxSg+
sgljpyu2Q6//BxMx9kOlXzZh33PkuN+6L9j696fKTWwC9RT+0+9uf3hlmyqu
OrsJ9z/VpF7wDYZyCVn96ytoPe2kKF2QjIJjtXejPf5uQuUBZVaqNRnwbzpu
/tnbhC8XTilujKSAbLokvy/VFphsGV60W00FXZ/dsrBDW1B3zasynAcL/2nF
fMaybYGEr+yzloxsWPjUxNUqvAU53ZdififkQenqKSyrwRacv74U2ShZBmGZ
wffmrm2BamWr8oOfZWB7gyLyzngL3r8yDbC7Xw58DQ3lhuZb0BhR/NxFtgIi
Yu50RtpsgQw91R+OyUp4dDFtm/nFFrCdkJFyMK0BoSAuHYaCLShs8nniuN0I
+5f+OzL+ZgucuhaOPndtgknK4nBB8RbE/p3curXTBLHm762uVGyBxTADJvsP
AgcSN9yCG7bA7eKZujDGFpj5HJNFO7IFP5JMfGzk2qAuZPfByJctCBPhv2b3
og0SVe6K4ye2gJ2e1r2vuQ3082WqNOe2IO3FZ03EqB0+eg30+K9twWsykibn
0QHJ0hdijDe2gNxvMKuGdMCzhQxTwa0t+Kcvz1rI1AliBk7zzTtbMDQ4Khub
3Ql01KN5sbtbsLSclcC63gmEahXHe3+2YNK8r2PlYhc0OOLPye5tQXqT5Q5v
YBek8LP8ODjYgonKgquFn7rgfxW8Wrc=
          "]]}, Annotation[#, "Charting`Private`Tag$430055#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3c8le8bx42SbCpllLKikG9DRlynUDKyV0VIpewVadgjW0lkr8g8zrFH
j+yMHHtzDs7B4SApKvR7fn89r/frua/7vq/P9bnXKRtngwcMdHR0nYx0dP//
aj5Y7GtcMlbxGpr5hFcZh32q/C4zfBfhBubGiHH7GFxIT0zB86kB51SmO6Ph
GGj1jOBS+YzgkNvwc0f3URCNPJ77T8gcGjnizp9kHoUdzfvvrcUt4b3rHq0z
fQRMbbca3vDZgorPp/M/R4ahRZW/qjnlIZTxaojZew+DrIgydlPoMRzOMl9r
FRgG5tmALBNxJ5j59ZDpqP0QTJ0LVY3i84AoWZ+drLODEJ9+rFHsjieUb1lr
180OgCZnwZXPKU+hI8i8903KAFSudl9aE3oGfcwc8w7HBsDB0hIXau0DH9P/
KTwc7wfhb2syJ7Ofg7GFnRZbej9EF/NI6Iu/AnpLSwNt2X5QP56Ts/TIF7Su
nz0ztdMHr9o+cH0x8oOR6hV/5u4+MH81dyvqpx+8NT4x+DW1Dy7KSUWZJ/jD
Of3tNEG3PuBc9egSuxwA7c+dbHc0+oCa23BwYyQAsrXOFdgK90HGEd2QcL4g
GF5fmqmfJMDznvctJrVB4ME8RctuIIBJMJFB5E4wkK6zVtNnEuA/Zcmra3+D
YSWoZrgvhABsP11961JCgN+QROZ0JsBCUW1DqHIobK+cC64yJ0CTLeOO4XQo
GKjuN2u5ToBUQW3Fk75h8GvDbf95OQJ4D8Z7rwi9hqMYJfmd0wQwjJyqrG58
DRqchLQTggSQURP/GWQdDqe+6y/H8xDg4I7TBX2GCAjZix64zUqAeXyV6/Hs
CGhZoOd2YCIAYk+HXVKNBNtZglULIwE+iNxcrZiPhJDc7sB7KD+diJMKCI6C
PlNnFYX9BNB/O/7klng06ARMmOkcJICUlsgn/vZo+ME1kfaekwDMjA4LlEcx
8E5+eubQMQK4WYy/Md8XC+JP/qw2CBPgXs1eGWIUCzyaS1lx5wigfUSkTyw3
Fg68PzAcrkIARdcb6xE/Y6H+hNHDXF0CSPTYc26ox4FUvtOlKRsCHJGMlTFL
iIOPcwkSMt4EYAgu1/lMiQM6o0KJ+BgCrBNHHUQvv4FiOQlh1k8EmL6yGxEe
+gZKPMX3x7QQoCvxVOH6yBtYCL3dKjBLgOpN9U4TibeQb3XodjF9H3zUe7JU
7/0WePQVPoNIH/gz40+/5ouH/fQPN0wc+uDMjbgwnEs8uIsf6Lnyvg/6g52X
JtrjQZaFT/lJSx+IMkoVyjx9B9GrKs2hYv3QfZWFzaznHVy39R11NO8HT79F
B3/RBPAUDfEPjemHtt0cmcH+BPD/cKf5KsMAOF8JjNmVfA/VXvkBoyoDcOy5
9bq4/3ugvigXjnk5AI+3j+OenUuEjLcjoRr0g8D2I+GSUGQS9PuQw21PDUHF
f54JGnNJ4HM+sN/NaQgsXQy3XBU/wG7kfl+fhiEopXHWtCx+AI5cquh962Ew
WAy78kQ9BRCNoGDexhFInPJRrdhLg1+GoTY7g+NwVdA8Z9o4Ha7x7bp7wARQ
b1/ez1ycDgOhp2NSCifgxMqz+8XSGaAVgDm/HDYJzo/lxOgmM4A0l2l1wHQa
eGxL83Pls+DusQ/na0+Q4GHgCXNF2yxQzNXmcLMiQV1W1MHemCxg8g9Kncki
gS3J/sk2JQtmA+69HZCchQpLCSmtd9nQvnQllAxzYGaeWbr+PQdUph9ZrYaT
YW3CiCWLPxck65yV9vrIEGLJ/MBQNRe63TbxsXwUwN935q+Mz4WN60vylwso
wOGkHPz88kdw2Grjvte3AK0BY7eZXuZB/nm1oOZLVDhfxM0kyFwAUnl440Dt
NWD953/3xolSMHgtIiZz/ieI6a8uNkeUQ1SZ37UD9nQYft8bio8yy+GCcpi9
dhAdhqs4I4KlqhxWJfDnIlPpMH+YDWX0Z8vB4e+/qD+9dBhCY5X7tHwFuE4P
jEVcpMf4yPrvbZMrQDv/dLvWDj3mG+fhwzKYKkCeKWBKgxgxXt8UIHGzBo6F
7IU3OzJhOGQqyF+Za4Hx3IG94AAmTE6UbORfwVp4RP+3Vf49E6ZP+/SYpXot
OPa7jzo1MmHOdh12F0uohfVE2TI+ngOYmfa1j7jLdZD4Jv22Hu4A5saXXI4e
n3oIjwu640dmxkyfPFWxF10PPDz/yfBuM2M8/FLuyGbXg32YyEYiy0FMJrzN
f9tVD0p7xzdszx3E/G3wu3ZbsAG6q/EWh70PYkpr7zxdaGiA/jqV/Z/3s2CO
lnNP09MjwPpRYbKMmxVzN/Kv0TwvAvsis3sOi7BismzJXW1SCJh9UQy0vMiK
kTpSUxNhhoDv9tvlXBNWzLWnVu+OYBEIoadPYPjAipFLMf0Yf64RDA6puswJ
sGHMw7pJwYqNsLZ348ens2yYFx5Xj3upN8K+e0snTJTYMF+0z8ab32mE6wwn
L9y7zYbR3t3zPxHaCJ0rbeXn37NhrC0/WuRPN8K4+5rMACs7JkhTIClpqRFe
GWgV0vjYMR/lYgfDNxvBRDVgZ+U0O2aFw0fLkeULnH65/j1JlR3zFNFROC/3
BR522jEVPWPHRJ78ebg+6gukjHB+yCeyYypnVbt7rzTBqX/e+d+SODDDGv7f
o240wezCvp2rORyYXyWfebUNmqBIzFn9QwkH5vJzBeuOR03oPnGy5HcTB6b6
0LlfjW+aALfnHutO5cDUqPGfxC02gbKGC7fBRU7MeIGpusuPJuBj/d57SJkT
84fr3ROZvSY4euy4Y606J0ZxirOi4FAzsEnnqVWacGJqPfdrZqs0wwuJrOd2
XpyY+o/r7vHxzXAwOONqNZ4TM8kmk2SQ3gzqJs/dO2o5MTtu9p+5CpphUaUi
reELJ0YZKMxRSDMMuNmumvRyYj6PTKQGU5thrMR9VH2JEzOtzNes+rMZRA3b
FV6tcWL2sk0W6elaINRYG5/8kxOj4tJ3/tWRFnCKItA103FhEOb29qeYFjg2
/leLjY0LQ3TaR7uo1QKKj7lFGji4MHRDV3l+GLdAGZdEshU3FwaTWX/X2b4F
jBWtfXx5uTCNCrjvjxJagNbXqXP8JBqfvsYrntkCLf8Eg+8Lo/FM0lfmC1uA
eP6DV4ooF+Zqf16I1ZcWYOwtSqFIcGGanqQKmK+0wJ+IQv1JWS4Mfsne3vJX
C3w41X4u6TwXJsdOse4+XStwnJZN1bzIhQl+OHLb6XArnPesuBBxmQvzlJxb
4H6iFRzEJu7zK3BhHtp6/PGWaIVHVKv/0hS5MBo23B8Cr7SCAUEJH6jMhVEg
zSyFXUfbJ7M6k1W4MGesShSi9VqhIFd2RAnDhWGz1BpLtG2FNl/m+rZrXJhe
8+BjJZGtsE38dsP4BprvqKEdPqEV4ifahu5qcGGwpsLV1RmtEMkZJ2t+kwvz
xhgxbS5vhfH7oxayWlyYwMGovI7PrfBa77ACqzYXxsPw7lZPRysco6RvjKNs
ov87YXSyFc4UlvGY3+LC3CC0U6YoreDy2iLggC4XRl43QW5uvRWM1XNmC1CW
+GYbsvinFYIV5OVV9bgwfDoXhmn72oDt8mgoAWWWbnrxHxxtQHPRHTbQ58L8
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
+r9/UdFRcxb+B3PXPSw=
          "]]}, Annotation[#, "Charting`Private`Tag$430055#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$430055#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.22312579757529907`, 4.360987079996822}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"0", "1", "2", "3", "4"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8940306562991767`*^9, 3.8941075974118643`*^9, 3.894107707433611*^9, {
   3.8944406898448515`*^9, 3.8944407017733727`*^9}, 3.8944407444851675`*^9, {
   3.8944469194427495`*^9, 3.8944469436635313`*^9}, 3.894447013073924*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"fda51e04-e2e8-45b9-856c-90c3aeacfc94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"approx", "[", "4", "]"}], " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "\[Rule]", "0.2"}], ",", " ", 
        RowBox[{"t", "\[Rule]", "0.05"}], ",", 
        RowBox[{"Ne", "\[Rule]", "500"}], ",", 
        RowBox[{"\[Alpha]", "\[Rule]", "0.005"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "1"}], ",", " ", 
        RowBox[{"W", "\[Rule]", "1"}], ",", " ", 
        RowBox[{"VG", "\[Rule]", "1"}]}], "}"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8940306722069883`*^9, 3.8940306996514397`*^9}, {
  3.8941078263281593`*^9, 3.894107827451651*^9}, {3.894108552774825*^9, 
  3.894108560957994*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"3c879996-78a6-4080-a632-7a9e19287c7a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
baH6/FQo3svFhv0fjiyjWQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$13558#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-0.3539441404870623, 4.433895156687364}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8940308923972583`*^9, 3.8941085457432556`*^9, 
  3.894108576777226*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"bc826a5e-c167-4c0b-b073-8ddb44b9b082"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"approx", "[", "4", "]"}], " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "0.2"}], ",", " ", 
    RowBox[{"t", "\[Rule]", "0.1"}], ",", 
    RowBox[{"Ne", "\[Rule]", "500"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.005"}], ",", " ", 
    RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "1"}], ",", " ", 
    RowBox[{"W", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"VG", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"y", " ", "\[Rule]", "0.4"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"approx", "[", "4", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "0.2"}], ",", " ", 
      RowBox[{"t", "\[Rule]", "0.05"}], ",", 
      RowBox[{"Ne", "\[Rule]", "500"}], ",", 
      RowBox[{"\[Alpha]", "\[Rule]", "0.005"}], ",", " ", 
      RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "1"}], ",", " ", 
      RowBox[{"W", "\[Rule]", "1"}], ",", " ", 
      RowBox[{"VG", "\[Rule]", "1"}]}], "}"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.894031004293624*^9, 3.894031059687689*^9}, {
   3.894031091691492*^9, 3.894031104363802*^9}, 3.894031680476951*^9, {
   3.894107835212375*^9, 3.8941078384076405`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"fac97a59-39a5-41cb-90f1-128d0169783e"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"800.5`\\\"}], \\\"]\\\"}]\\) is too small to represent as a normalized \
machine number; precision may be lost.\"", 2, 33, 17, 28659459998579567246, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8941085861478877`*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"32be90e7-dad0-4774-8fa2-4db9fdb9f530"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"800.2`\\\"}], \\\"]\\\"}]\\) is too small to represent as a normalized \
machine number; precision may be lost.\"", 2, 33, 18, 28659459998579567246, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.89410858681561*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"5f2ef192-dd11-4e0d-9cb3-2f24aaffdc6f"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"800.2`\\\"}], \\\"]\\\"}]\\) is too small to represent as a normalized \
machine number; precision may be lost.\"", 2, 33, 19, 28659459998579567246, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.894108587376666*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"c9b72c3a-e08f-46ab-a429-e396211fe31b"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 33, 20, 28659459998579567246, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.89410858794426*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"4bef7c2c-5b21-453c-97d8-3d1681a108dd"],

Cell[BoxData["0.8484273398448643`"], "Output",
 CellChangeTimes->{
  3.8940310665781374`*^9, {3.894031096876087*^9, 3.8940311054037943`*^9}, 
   3.8940332586942406`*^9, 3.8941085884851003`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"7eaaf874-4d1d-4c24-a5d4-e471c4bfe452"],

Cell[BoxData["1.0235322118335592`"], "Output",
 CellChangeTimes->{
  3.8940310665781374`*^9, {3.894031096876087*^9, 3.8940311054037943`*^9}, 
   3.8940332586942406`*^9, 3.894108593662075*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"245933e2-7705-484b-bf2b-2f7b75b3895f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pade", " ", "=", " ", 
   RowBox[{
    RowBox[{"PadeApproximant", "[", 
     RowBox[{
      RowBox[{"approx", "/.", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], "\[Rule]", "g"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"g", ",", "0", ",", "2"}], "}"}]}], "]"}], "/.", 
    RowBox[{"g", "\[Rule]", 
     SuperscriptBox["\[Gamma]", "2"]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.581699194582568*^9, 
  3.581699220007044*^9}},ExpressionUUID->"64abc3c6-0d87-4cb6-8c3d-\
3f23ad712cca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pade", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", ".2"}], ",", 
      RowBox[{"t", "\[Rule]", ".1"}], ",", 
      RowBox[{"\[Gamma]", "\[Rule]", "10"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581699307278331*^9, 3.581699315316313*^9}, 
   3.5816993473145657`*^9},ExpressionUUID->"dff71931-96d5-46c1-b4c4-\
91f50fe100e7"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
lI2/qYJ021a2f148lczbP8uadMJDVY3yJ1Q0XTy124e0w/QF+rdnVNzqTWfc
Jq1on/W09wUVJ4KPpyaRZlVwjrIzqXBLue+VQzpPUX3JTC4Vigw3i1LS/rfc
K4XeUzGybdHBL6T1OdlBUiVUrMn1MW8mzWc2tkWpnIpfX797dJD+WqAxqlVN
hY6uxTMa6Rgpz5S9dVQYzswboZI+dinXyqKJzM9i4e420tL//Vx2qp2K+IaQ
nAbSAwZbajy/UxGnFb+1knRGhtflkD4qrqZ51L0n7Sb8dlv0EBU0Hw3/DNKa
Hr9ZTxhUXDbkbY8j/a91a2omh3y+YJFoKOkybW/r4t9UuLS6zbqQjnicL/Z1
koqcDad5h0gb88a/0GapWPRu+UoN0mKntoXS59Pg6J9lsIw0rdpH5y8/Dbvf
2N1gkvvxVPkdl28JDQbUYwOVpJ2i/qaLi9Gw5WOt2WPSyr+07ORX0vDqLL3T
jXTBh/f1kKNh7N6syhLSgTKT1w4r0nDD9+QUlTwvlFCdHbabaOCwD/Ykka43
/PAycBsNhvsesBRJ38uccripS0NL6nnJYfJ8WonoSsaDhtq772yekR6iFkUU
HKDBjJGoLkb61Y7pnZWHaVD770NpFXnePZJ2/GkxpyE29KCzL+mZMyWnxmzJ
/p63L/xG1ovE34+UTV40CAztCrENJCjfj89NbPejQb8hZWCKrL/kj/rZhsE0
DBW8dfh/PaqEf5I5E0HDrbMKuR/JejWQKP+XnEDD3B7ea64vQRHyn5eXnUS2
t8wc9ybd1LXrbGkqDY3XHllPkPeBzfMKalcWDXlV98J/k/eF95bK/BWfafB3
7Tb/4kXWn6Zs8t1aGpr0VA9sIm2lFXxbuJGGX8/e9N30JOtJV9NxficNyuZq
v/Q8yPtzd+oyDoeGY3yKxYEXCMr4HmLaZZwGFcvemvLzBOXHXpvhwSkaEjzb
AhaSrj0g8bGTrxO+IinfrroSlGjTMNeqVZ14um+T2VFnsp7N+49SZDtR67gt
PvQM+b47qrereH0n9Bl/r786TZ7f4+MrczU6QbydOfOLvH+lTzpVJe7rhHLk
xNYTDmT+Hgay3l6doFnoxN2yIiiJXsmLuX6dSF0xUx5qSVAivWf+nr3UiXsv
MlJ8jpH745/fYH+DbE8PvWJuQVC0QxSCjJ52wjhyopZ+hLx/ovk65L92QtHR
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 1}, {-0.000025102428150030543`, 2.0629131967500847`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.5816993351528387`*^9, 
  3.581699347319481*^9}},ExpressionUUID->"4c084245-7a07-414d-914f-\
962919eb8cef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vals10", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"approx", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "\[Rule]", ".2"}], ",", 
       RowBox[{"t", "\[Rule]", ".1"}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", "5"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1", ",", ".05"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.581699504688846*^9, 3.581699533282777*^9}, {
  3.581699697504149*^9, 
  3.581699705229033*^9}},ExpressionUUID->"a02aa792-d626-4a8a-81ff-\
9632858c32fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.36404309365884957`", ",", "0.9426170766472292`", ",", 
   "1.5684750012427098`", ",", "2.10829581910155`", ",", "2.462189070739536`",
    ",", "2.5819364088002685`", ",", "2.472916259619711`", ",", 
   "2.182901301941231`", ",", "1.783354447256437`", ",", 
   "1.3494157185272426`", ",", "0.9437080313341007`", ",", 
   "0.6069754433362979`", ",", "0.3561408741834235`", ",", 
   "0.1883227290039229`", ",", "0.08815461355502081`", ",", 
   "0.035567907943546195`", ",", "0.011865501122242297`", ",", 
   "0.0030519348785353513`", ",", "0.0005295096066095498`", ",", 
   "0.000044659123005762924`", ",", "1.4837971076525892`*^-7"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.581699536026902*^9, 
  3.5816997083948717`*^9},ExpressionUUID->"1c1fb3b2-e47d-42ba-af56-\
a7d3e708a167"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<~/Desktop/testMathematica.txt\>\"", ",", "vals10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.581699538844342*^9, 
  3.581699555762833*^9}},ExpressionUUID->"8bde03c7-4218-4b0a-9715-\
5da01da9a6ac"],

Cell[BoxData["\<\"~/Desktop/testMathematica.txt\"\>"], "Output",
 CellChangeTimes->{3.581699556475512*^9, 
  3.5816997141049023`*^9},ExpressionUUID->"9aa4db7f-1e1d-4b3b-b3db-\
afd1a34c7e56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mass", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"approx", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", ".2"}], ",", 
         RowBox[{"t", "\[Rule]", ".1"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", ",", 
      RowBox[{"-", "10"}], ",", "10", ",", ".5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.581699866649927*^9, 
  3.581699895278923*^9}},ExpressionUUID->"45d035f0-794c-4806-9b2b-\
2fba5443711e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9171918293498542`", ",", "0.9264827831993718`", ",", 
   "0.9341350882219026`", ",", "0.9405471363179051`", ",", 
   "0.9460179992531761`", ",", "0.9507699119771765`", ",", 
   "0.9549662552233817`", ",", "0.9587258421909669`", ",", 
   "0.9621341811651029`", ",", "0.965252273781475`", ",", 
   "0.9681234142383714`", ",", "0.9707783754860141`", ",", 
   "0.9732393021260982`", ",", "0.97552257432651`", ",", "0.977640861212797`",
    ",", "0.9796045440976204`", ",", "0.9814226586546609`", ",", 
   "0.9831034793915093`", ",", "0.9846548484999963`", ",", 
   "0.9860843331886904`", ",", "0.9873992795936943`", ",", 
   "0.988606815616196`", ",", "0.9897138372120403`", ",", 
   "0.9907269893970412`", ",", "0.991652619558709`", ",", 
   "0.9924966291292199`", ",", "0.9932640690577496`", ",", 
   "0.9939581979242291`", ",", "0.9945785235454191`", ",", 
   "0.9951170414027448`", ",", "0.9955514090985353`", ",", 
   "0.9958330701299334`", ",", "0.9958672356797652`", ",", 
   "0.9954799612764065`", ",", "0.9943650363328974`", ",", 
   "0.9919996242217213`", ",", "0.9875119356297194`", ",", 
   "0.9794757823460143`", ",", "0.9655943041681581`", ",", 
   "0.9422165151503096`", ",", "0.903602664659556`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.581699947861136*^9},ExpressionUUID->"7bc2cbe5-aa68-446e-a878-\
5989b67aae9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "mass", "]"}]], "Input",
 CellChangeTimes->{{3.581699954437766*^9, 
  3.581699961779789*^9}},ExpressionUUID->"d610b34f-534f-4f43-9fab-\
0ca22df3a4de"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQEf7I+9fLZ2UeRbe6iAQ9z+Ixb7l8L4HA4hG/e5
5D+B8QUcJs675fdN4h2UL+KgwsHeddwVxpdwYD+/j3VrDowv4/DjZ1yKaD+M
r+Bw3tPx4sO1ML6Sw9offvPPnoTxVRz6/nXsiXgM46s5+KwM+XL3F4yv4XCS
+8z5uQLvoXwth8vsu/YfU4HxdRyM96vLVZvD+HoO5r1Haq56wPgGDgGGfxe8
joDxDR0iTc7XXkiH8Y0c7B0m5U4thfGNHeJ/tDzyaoLxTRzWTHPZzdAH45s6
mMTuiz82A8Y3c5g0eeuhVYtgfHMHRb30qD2rYXwLhwuG4WKcW2B8S4cpr+zd
5u2G8a0cfjAWeHUcgvGtHfQXz9l18QSMb+PAMN80p/EcjG/roH/+b9i0yzC+
ncOF7gkb/1+H8e0dHgh/WtB3G8Z3cGgq7w+4exfKb3BwyHzI813lHkze0UFD
d8OpH7dg8o4Oc/e+mn/tIkzeyWHCsq//SvfB5J0cDvPVLdw0Eybv7PDvbM+M
u+EweWcHn9TNbGrPYPHn4iDtfcp+sRqU3+Di8DxwpVLAqzf2AEisz4U=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0.895},
  PlotRange->{{0., 41.}, {0.895, 0.9958672356797652}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.581699962225233*^9},ExpressionUUID->"310655e0-934f-485b-b60e-\
d2b9acbd2c35"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.581701139994479*^9},ExpressionUUID->"1e29a155-d9fc-472c-9f8e-\
b2884dbe602e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", ".1", ",", "50"}], "]"}], ",", "x"}], 
       "]"}], "/.", 
      RowBox[{"x", "\[Rule]", ".0"}]}], ",", 
     RowBox[{"4", "*", 
      RowBox[{"Entrance", "[", 
       RowBox[{"y", ",", ".1", ",", "50"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7336718917013474`*^9, 3.7336719624403048`*^9}, {
  3.7336726875462933`*^9, 3.733672734476016*^9}, {3.733672767433984*^9, 
  3.7336727678490477`*^9}},ExpressionUUID->"006ed6c4-b1da-4751-b9bb-\
f00513abd36b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
2RJIJt2BhXdcZB9BTq4GFh3lIVsaqZ357ZvPS7YYoj9goInsJ1sUGW4qZasQ
IFsKuVEu2K8ivJWvZT9KqRchWxh5kDxnp3OIbD5kd/h5mQ7xrfkv7xdvGEpu
1Uu48tcMSG25yOZB0OVjZPMgasa/LkzIks2JtGvp8dmdIBuHmMPCifmTZNMi
vyT53jtDsvmRu/wBrqsKW/00bDMKXkpkz50M3XaWfpvq//NwfH/zWh+qb83P
mNgbw6i5lT+I8zcb0N56nuXZn0LvdLdylEZ/2l1vK+cpLs7SukA2G7LsIOi8
12jLbUKB8j+Nt/rf9SzgSi5tnf9R0MXqQIv/XWKt9PmxsdXW/oororpiV/+f
V8L7Lph9zWZr/xWLf731dlvPa+ewSIxx+P8+SrIavljb3vq/viTQ+4iYvPPW
PldloubpXclmKlGaxuX13CNbsGRfwlW3NI+t+f/0mhXuev9//yWddMdpTvtt
9WeXxjdw3f9//+Knt2iCJx9u2UbkxoWCwP+/nxLl/k6eh0Fb+/EFg2GD4K37
WFNJfSUStrVv9+pOu+WIrXk5WbelaqPJFil5ZtX/NyJuq9+WW7nkSsLWfipN
6T6ySVvP5/djU6NJ3co3jrvt7Hq99T19+/mjNfXt/++7JOelRqTzu/+/55Jn
Fz6YqLzfev51hj0C7Dn/z0PUyn0mRnO39hd0nsr4WLA1b1P07C3/4q332zNY
cFz/09b7yw3dvyFYsbVfsPrDz4uVW/32G3MPKmu25p/+YKAdWreVC10tY7Vs
3LoP3F6Rb0ebt+6vryXoBVXblvMD/l5u69h6/6Hylw4mdW/dl8Nc9S/H3q15
GikSOYoDW/chbBTuyvJ9y5S7NsDwj615A5+tqLPHtt53oUvjF+/JrfOHix8L
0p3Z2v/mcKze/tmt/TQjqLnn57dyEc3rg2WLW/dDTdGe/Ozv1vOHPsrbmP3b
en6xTdJhyfWt80Ts2/Fnc/P/n18l/wFwmR7A
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
7w75L2pPWuo+hRvYOeG8FUuC/WcJGaberLiiPHeZxoT/5/9oZL3KjvvPdnQz
9v3hf1pbTFYJX+HIoY67l0KCc3TcMQXFnDiN9uzn8p9IYFgk+62bmhJ3JohV
iyqdBCfqJ4OPb5zG7V96dqL/y2G/7RIpCv7x4waXp7vSv5JA5O+IpbsaA67o
o26cxzcStCsoCkhd5cb9d7PwtkY+CSgv2gZ6KfDgnOg4BU4VHeLZsn1RuXAC
p1X9HD/7nQTshtQznHJCOEGPxZzi0sN+rKpLGfAWxB2IX38cXEGC9Ev+iTVD
1Lih8dJLN34e6kWU+W66woX7Hs2/L1hDgt0A3uXiJlbcW+1Xv9ZqSVBzeTgo
aJgP92D/z8vaBhKcZd/ypuc5idMpNLka3UQCs8vvjtRw8+CE7KtYbFpJMO4V
4pq2zIgj4xYdvNBBAtGWaF+JWAHcSGfkhyPdJEj0ou+UkSXD/QjZvNvdSwL1
hXbt/emNimjFO2KfBkiHfqzKpLRAHOfyp57oOkwC63cR0ma9LDjdNKkilTES
sB1jUPoexIsTNovxYp48nDcJDmfi45hxFAz76NQ0CbTg6YzhDj9u7JctZcEc
CfLdzzDFDaxUlHm2/g5YONTPt2oBVy+Ii5GUizQgkKBBmSu1GM+LezSVZMRP
OuxXsc9PKnZO4a7EUnKsrJCg407inVyBzQrRK07jVWskSFZsqemWp8BRkvd8
/m+TBP/elmanXxLGTRQrOlj+O5x3uh9ka38w4SocPp2T3ju8f6URrkwV/LhY
Xtr1gwMSTN8/qrvCeQz3P4mGwxw=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.733671902461052*^9, 3.733671944475284*^9}, 
   3.73367199696037*^9, 3.7336727055409737`*^9, 3.73367275237062*^9, 
   3.7336727837520638`*^9},ExpressionUUID->"3d9ce5e0-68ff-4828-995f-\
dc7b1eaebde8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GegenbauerC"}]], "Input",
 CellChangeTimes->{{3.733672297923854*^9, 
  3.7336723010232897`*^9}},ExpressionUUID->"1b15122f-4e06-40ac-be0b-\
9bf3b2db9018"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GegenbauerC\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the Gegenbauer polynomial \
\\!\\(\\*RowBox[{SubsuperscriptBox[StyleBox[\\\"C\\\", \\\"TI\\\"], StyleBox[\
\\\"n\\\", \\\"TI\\\"], RowBox[{\\\"(\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \
\\\")\\\"}]], \\\"(\\\", StyleBox[\\\"x\\\", \\\"TI\\\"], \\\")\\\"}]\\). \\n\
\\!\\(\\*RowBox[{\\\"GegenbauerC\\\", \\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the renormalized form \\!\\(\\*RowBox[{UnderscriptBox[\\\"lim\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \\\"0\\\"}], \
LimitsPositioning -> True], \
RowBox[{RowBox[{SubsuperscriptBox[StyleBox[\\\"C\\\", \\\"TI\\\"], \
StyleBox[\\\"n\\\", \\\"TI\\\"], RowBox[{\\\"(\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"], \\\")\\\"}]], \\\"(\\\", StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\")\\\"}], \\\"/\\\", StyleBox[\\\"m\\\", \\\"TI\\\"]}]}]\\). \"\>", "MSG"],
   "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/GegenbauerC"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.733672301973795*^9},
 CellTags->
  "Info1713733657901-3168157",ExpressionUUID->"a8795371-07be-48ca-8514-\
9b75d5009a27"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.733672319245256*^9, 
  3.733672324440317*^9}},ExpressionUUID->"688dc7ae-4869-4156-9c75-\
d564be2262b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"4", "*", "x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "x"}]}]}], "]"}]}], ",", "x"}], "]"}], ",", 
    RowBox[{"x", "\[Rule]", "0"}]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7336722874366837`*^9, 3.7336723445668373`*^9}, {
  3.7336724233214912`*^9, 
  3.733672431550959*^9}},ExpressionUUID->"7275a67d-2349-4b4b-89a5-\
133a5d648f94"],

Cell[BoxData[
 RowBox[{"2", " ", "i", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "i"}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.733672432112278*^9},ExpressionUUID->"824d316f-9382-4110-8c62-\
e69e4eacd1c6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Entrance", "[", 
   RowBox[{"y_", ",", "t_", ",", 
    RowBox[{"n_", ":", "20"}]}], "]"}], ":=", 
  RowBox[{"2", "*", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "*", "i"}], "+", "1"}], ")"}], "*", 
      RowBox[{"GegenbauerC", "[", 
       RowBox[{
        RowBox[{"i", "-", "1"}], ",", 
        RowBox[{"3", "/", "2"}], ",", 
        RowBox[{"1", "-", 
         RowBox[{"2", "*", "y"}]}]}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], "*", "i", "*", 
        RowBox[{"(", 
         RowBox[{"i", "+", "1"}], ")"}], "*", "t"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.733672600802712*^9, 3.733672676273141*^9}, {
  3.7336727905115623`*^9, 
  3.7336727910150948`*^9}},ExpressionUUID->"1a092ce9-8c73-4332-83a3-\
af71c10a59e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stuff", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{"5", ",", "k"}], "]"}], "*", 
       SuperscriptBox["y", "k"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "y"}], ")"}], 
        RowBox[{"5", "-", "k"}]], "*", 
       RowBox[{"Entrance", "[", 
        RowBox[{"y", ",", ".2", ",", "50"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.733672679746933*^9, 3.733672681820137*^9}, {
   3.7336728414982433`*^9, 3.7336729032793293`*^9}, {3.733672954216642*^9, 
   3.7336729620320263`*^9}, {3.733672999990897*^9, 3.7336730009404287`*^9}, {
   3.7336730648882027`*^9, 3.733673065286747*^9}, {3.733673104317078*^9, 
   3.7336731044995203`*^9}, 3.73367323540309*^9, {3.7336742889720488`*^9, 
   3.7336742890673103`*^9}, {3.733678043195877*^9, 3.733678045265531*^9}, {
   3.7337441373715773`*^9, 
   3.733744137969153*^9}},ExpressionUUID->"1bc8d697-997d-48d4-8186-\
c41dc78ef7ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.758388239145159`", ",", "2.494881035160848`", ",", "0.8128767932067905`",
    ",", "0.22219628912477019`", ",", "0.04616310673172385`", ",", 
   "0.005624813351148861`"}], "}"}]], "Output",
 CellChangeTimes->{{3.733672955450074*^9, 3.733672968376699*^9}, 
   3.733673007197439*^9, 3.7336730679323883`*^9, 3.733673111120968*^9, 
   3.7336732425645113`*^9, 3.733674295594243*^9, 3.7336780519761667`*^9, 
   3.733744147014381*^9},ExpressionUUID->"c82389aa-8882-422f-acd5-\
e7f46682e53a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stuff", "/", 
  RowBox[{"Total", "[", "stuff", "]"}]}]], "Input",
 CellChangeTimes->{{3.733673008324226*^9, 3.733673029490189*^9}, {
  3.733673195284751*^9, 
  3.733673198466919*^9}},ExpressionUUID->"09129fb6-e06a-4382-a239-\
87c619427c6c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.4124865870460745`", ",", "0.26716835429517233`", ",", 
   "0.16357974366890718`", ",", "0.09248875915380196`", ",", 
   "0.0461477767673915`", ",", "0.018128779068652616`"}], "}"}]], "Output",
 CellChangeTimes->{3.733673029849622*^9, 3.73367307081835*^9, 
  3.7336731423796062`*^9, 3.73367319894769*^9, 
  3.7336732441251383`*^9},ExpressionUUID->"cff87f42-b274-4d4d-b37f-\
04687af6fc82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"stuff", "[", 
   RowBox[{"[", 
    RowBox[{"2", ";;", "5"}], "]"}], "]"}], "/", 
  RowBox[{"Total", "[", 
   RowBox[{"stuff", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", "5"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.733673221644021*^9, 
  3.733673230296672*^9}},ExpressionUUID->"2b1330a4-8201-4dfb-90cc-\
a4193d6cde18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9071026467959761`", ",", "0.08622727695883829`", ",", 
   "0.006347922121307167`", ",", "0.0003221541238784187`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.733673230550763*^9},ExpressionUUID->"bcd99b4d-ab5f-414f-ac27-\
5dc0da908a4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Entrance", "[", 
      RowBox[{"y", ",", "t", ",", "50"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", ".001", ",", ".5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.733672888806601*^9, 3.7336728898297853`*^9}, {
  3.73367474464526*^9, 3.73367478220009*^9}, {3.733674837957881*^9, 
  3.733674853657734*^9}},ExpressionUUID->"43b46893-5583-41d1-aa78-\
c1b679c2d10d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.733674833800345*^9, 
  3.733674903725862*^9},ExpressionUUID->"13690ad0-7502-495f-b984-\
7df2be5c504c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.733672726110631*^9, 
  3.733672728820286*^9}},ExpressionUUID->"88acbe43-8308-4787-88ce-\
c4e1772035b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", 
  RowBox[{
   RowBox[{"-", "800"}], "+", 
   RowBox[{"Log", "[", "400.3", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8944555878142047`*^9, 3.894455637813998*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"8de50ee3-2e24-4d04-8cf7-d4e8bf5003bb"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"794.0077857340015`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 38, 11, 
   28661732538050829320, "2ndLocal"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8944555969493904`*^9, 3.8944556385513134`*^9}},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"6ce6cadf-202f-4fba-a697-d51fbc2d26ab"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.8944555920361032`*^9, 3.89445563856238*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"fb342cfb-97d2-478e-9dcf-42584ab0a7f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetPrecision", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", "800"}], "]"}], ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.8944556664564795`*^9, 3.894455677075962*^9}, {
  3.8944557130219336`*^9, 3.894455719873307*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"77b8a48e-e902-4d92-8568-7e97edcddabf"],

Cell[BoxData["3.\
667874584177687213455495654260798215469634226612640705069151310903542448310183\
622525663193492234050522686942648268`97.09691001300804*^-348"], "Output",
 CellChangeTimes->{3.8944557203592477`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"0ff295a5-2eee-453b-b844-7b039b9f5e30"]
}, Open  ]]
},
Evaluator->"2ndLocal",
WindowSize->{960, 478},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0ecf8e95-5552-47f7-9f37-ed457fac0a26"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info1713733657901-3168157"->{
  Cell[247908, 4955, 1466, 27, 75, "Print",ExpressionUUID->"a8795371-07be-48ca-8514-9b75d5009a27",
   CellTags->"Info1713733657901-3168157"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info1713733657901-3168157", 266923, 5399}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 11121, 279, 717, "Input",ExpressionUUID->"572babc4-47d7-47c9-be9b-6b9c6c0c79f8"],
Cell[CellGroupData[{
Cell[11703, 303, 296, 5, 48, "Input",ExpressionUUID->"ed6fc0b9-a9d4-4dca-929e-5b57a9955240"],
Cell[12002, 310, 1263, 34, 32, "Output",ExpressionUUID->"002ecf02-b9cc-4d4e-b0fd-28012a945513"],
Cell[13268, 346, 721, 17, 32, "Output",ExpressionUUID->"c2f50272-f154-465b-ab3c-c69d3dac1ed0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14026, 368, 401, 8, 28, "Input",ExpressionUUID->"a15bd583-c4d3-4ba0-9786-c4f4e8e68a3e"],
Cell[14430, 378, 1570, 45, 52, "Output",ExpressionUUID->"42344a33-1e15-4d44-ba4f-a1c65242573f"]
}, Open  ]],
Cell[16015, 426, 7245, 188, 317, "Input",ExpressionUUID->"48eb2620-4124-4b79-b860-a512304e326a"],
Cell[23263, 616, 11178, 263, 555, "Input",ExpressionUUID->"31dc9109-bca1-4399-8407-e1232660f308"],
Cell[34444, 881, 5568, 136, 269, "Input",ExpressionUUID->"33916aa6-e829-4a67-aa24-2cebcccbf2b7"],
Cell[40015, 1019, 740, 15, 48, "Input",ExpressionUUID->"270bf6e6-6a46-460c-9ca5-0e2822dc1e8c"],
Cell[40758, 1036, 633, 11, 28, "Input",ExpressionUUID->"b2842080-7adb-4862-9bab-61fa164a318b"],
Cell[41394, 1049, 834, 15, 28, "Input",ExpressionUUID->"dd7575d0-b4ae-447f-b86e-93299ab00d2e"],
Cell[42231, 1066, 908, 17, 28, "Input",ExpressionUUID->"52f1e2c7-66cc-4f9e-9777-1d0ed9c3ad11"],
Cell[43142, 1085, 1096, 21, 28, "Input",ExpressionUUID->"ed3f4b96-cdcd-4e5e-8f77-dd0cef55bd13"],
Cell[44241, 1108, 1000, 19, 28, "Input",ExpressionUUID->"e94a2b89-566c-4fc8-91fe-980840bb6d2b"],
Cell[45244, 1129, 447, 10, 28, "Input",ExpressionUUID->"ef570326-8884-4047-9780-65df5dd5a469"],
Cell[45694, 1141, 449, 10, 28, "Input",ExpressionUUID->"cedf5cec-72b2-4da0-a9c7-36332425d497"],
Cell[CellGroupData[{
Cell[46168, 1155, 999, 18, 28, "Input",ExpressionUUID->"f38e853c-ef79-4c4a-9bf5-d81947136dec"],
Cell[47170, 1175, 182, 2, 32, "Output",ExpressionUUID->"6d774ad6-1107-43d4-8e13-a1614e15e2dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47389, 1182, 547, 12, 48, "Input",ExpressionUUID->"3c75cfbe-6a65-4d98-97bc-12f70c1da44c"],
Cell[47939, 1196, 6800, 150, 219, "Output",ExpressionUUID->"b4f52b86-f951-4a7b-82fc-30dc56054ecb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54776, 1351, 530, 11, 28, "Input",ExpressionUUID->"c8b750da-47fc-481a-afbd-b0f48ea7de6b"],
Cell[55309, 1364, 410, 5, 32, "Output",ExpressionUUID->"826e6b90-aa9e-44ba-8292-2f7724dfdfb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55756, 1374, 837, 17, 28, "Input",ExpressionUUID->"19fe2030-ca6b-4d44-9749-6c47bbb7de80"],
Cell[56596, 1393, 501, 7, 32, "Output",ExpressionUUID->"6241afcf-a3a1-4ce4-ae19-354d877e1f26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57134, 1405, 858, 17, 28, "Input",ExpressionUUID->"6d9e476e-7006-4615-b0cb-856c70f22caf"],
Cell[57995, 1424, 575, 12, 40, "Message",ExpressionUUID->"2b03ab8c-3024-4d7e-ad93-c34e37ee0756"],
Cell[58573, 1438, 575, 12, 40, "Message",ExpressionUUID->"6c0f53fe-85db-4de1-ab4d-14e7e0b35baf"],
Cell[59151, 1452, 573, 12, 40, "Message",ExpressionUUID->"563e7890-9535-4072-af96-36fc09ef5a80"],
Cell[59727, 1466, 509, 11, 28, "Message",ExpressionUUID->"4a3c36d1-1bdc-41c1-8ece-a3533e16795a"],
Cell[60239, 1479, 291, 4, 32, "Output",ExpressionUUID->"dc9d4ca1-c1e7-4d70-98e8-9dbde30a8ed4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60567, 1488, 206, 4, 28, "Input",ExpressionUUID->"0bb86e9e-15a3-4249-ba79-f900226a28fe"],
Cell[60776, 1494, 339, 11, 46, "Output",ExpressionUUID->"9fd44fca-c433-4a44-b69a-9924b9c5b77c"]
}, Open  ]],
Cell[61130, 1508, 145, 3, 28, "Input",ExpressionUUID->"ad92abd1-7c0a-4f48-9b4b-1cca93b4c153"],
Cell[CellGroupData[{
Cell[61300, 1515, 133, 2, 28, "Input",ExpressionUUID->"46078c37-16dd-4082-93e7-3f409498eeca"],
Cell[61436, 1519, 1244, 27, 108, "Output",ExpressionUUID->"29c318c3-3b6e-464e-8bdb-d7dd802efd92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62717, 1551, 766, 16, 28, "Input",ExpressionUUID->"1d684948-2181-4c30-8aaa-984d962f5e30"],
Cell[63486, 1569, 575, 12, 28, "Message",ExpressionUUID->"d90ba994-12d6-4757-8c98-68fbab7afabc"],
Cell[64064, 1583, 575, 12, 28, "Message",ExpressionUUID->"4c72ed33-8015-481f-a78e-57dd632e0ede"],
Cell[64642, 1597, 577, 12, 28, "Message",ExpressionUUID->"dc14c7ce-bbaa-4692-b0b0-ec796cd01790"],
Cell[65222, 1611, 557, 11, 28, "Message",ExpressionUUID->"ca64b92d-ab85-4004-9626-f2a10b531e43"],
Cell[65782, 1624, 340, 4, 32, "Output",ExpressionUUID->"f90187be-6f09-47bf-99af-0eb4d2cbedc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66159, 1633, 206, 4, 28, "Input",ExpressionUUID->"32ed974a-f610-445f-9bf5-deb4c3bafe27"],
Cell[66368, 1639, 339, 11, 46, "Output",ExpressionUUID->"c93d847d-eb91-4953-af9a-8dca1bb6cf5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66744, 1655, 686, 15, 28, "Input",ExpressionUUID->"e81749fd-d90c-45e2-b47c-24087e127e68"],
Cell[67433, 1672, 518, 11, 28, "Message",ExpressionUUID->"7e8f8046-53d4-4109-993b-059f02cfb66a"],
Cell[67954, 1685, 519, 11, 28, "Message",ExpressionUUID->"45b1c2d7-6677-456c-ae0f-377b6091f878"],
Cell[68476, 1698, 519, 11, 28, "Message",ExpressionUUID->"3f5a3bfa-1afb-44c1-9364-7a5eee990d91"],
Cell[68998, 1711, 503, 11, 28, "Message",ExpressionUUID->"ac37a469-82dd-4a30-9fff-1829b3e91db1"],
Cell[69504, 1724, 237, 4, 32, "Output",ExpressionUUID->"088542eb-5306-45df-b41d-a4251e8b54f9"]
}, Open  ]],
Cell[69756, 1731, 545, 14, 31, "Input",ExpressionUUID->"3f7a9219-1ff0-4c5e-ad5f-427440d60fa0"],
Cell[70304, 1747, 1471, 36, 86, "Input",ExpressionUUID->"fd175828-766d-48f6-970d-f82f1349d10d"],
Cell[CellGroupData[{
Cell[71800, 1787, 1816, 38, 48, "Input",ExpressionUUID->"fe18bc76-f948-4ad9-afcc-1f9e6432fe7f"],
Cell[73619, 1827, 91988, 1593, 242, "Output",ExpressionUUID->"fda51e04-e2e8-45b9-856c-90c3aeacfc94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165644, 3425, 961, 22, 48, "Input",ExpressionUUID->"3c879996-78a6-4080-a632-7a9e19287c7a"],
Cell[166608, 3449, 21779, 376, 239, "Output",ExpressionUUID->"bc826a5e-c167-4c0b-b073-8ddb44b9b082"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188424, 3830, 1408, 31, 48, "Input",ExpressionUUID->"fac97a59-39a5-41cb-90f1-128d0169783e"],
Cell[189835, 3863, 476, 11, 28, "Message",ExpressionUUID->"32be90e7-dad0-4774-8fa2-4db9fdb9f530"],
Cell[190314, 3876, 473, 11, 28, "Message",ExpressionUUID->"5f2ef192-dd11-4e0d-9cb3-2f24aaffdc6f"],
Cell[190790, 3889, 474, 11, 28, "Message",ExpressionUUID->"c9b72c3a-e08f-46ab-a429-e396211fe31b"],
Cell[191267, 3902, 452, 10, 28, "Message",ExpressionUUID->"4bef7c2c-5b21-453c-97d8-3d1681a108dd"],
Cell[191722, 3914, 272, 4, 32, "Output",ExpressionUUID->"7eaaf874-4d1d-4c24-a5d4-e471c4bfe452"],
Cell[191997, 3920, 270, 4, 32, "Output",ExpressionUUID->"245933e2-7705-484b-bf2b-2f7b75b3895f"]
}, Open  ]],
Cell[192282, 3927, 535, 15, 31, "Input",ExpressionUUID->"64abc3c6-0d87-4cb6-8c3d-3f23ad712cca"],
Cell[CellGroupData[{
Cell[192842, 3946, 488, 13, 28, "Input",ExpressionUUID->"dff71931-96d5-46c1-b4c4-91f50fe100e7"],
Cell[193333, 3961, 9136, 157, 243, "Output",ExpressionUUID->"4c084245-7a07-414d-914f-962919eb8cef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202506, 4123, 573, 15, 28, "Input",ExpressionUUID->"a02aa792-d626-4a8a-81ff-9632858c32fa"],
Cell[203082, 4140, 824, 16, 57, "Output",ExpressionUUID->"1c1fb3b2-e47d-42ba-af56-a7d3e708a167"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203943, 4161, 252, 6, 28, "Input",ExpressionUUID->"8bde03c7-4218-4b0a-9715-5da01da9a6ac"],
Cell[204198, 4169, 190, 3, 32, "Output",ExpressionUUID->"9aa4db7f-1e1d-4b3b-b3db-afd1a34c7e56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204425, 4177, 641, 18, 28, "Input",ExpressionUUID->"45d035f0-794c-4806-9b2b-2fba5443711e"],
Cell[205069, 4197, 1375, 25, 90, "Output",ExpressionUUID->"7bc2cbe5-aa68-446e-a878-5989b67aae9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206481, 4227, 194, 4, 28, "Input",ExpressionUUID->"d610b34f-534f-4f43-9fab-0ca22df3a4de"],
Cell[206678, 4233, 1063, 24, 239, "Output",ExpressionUUID->"310655e0-934f-485b-b60e-d2b9acbd2c35"]
}, Open  ]],
Cell[207756, 4260, 147, 3, 48, "Input",ExpressionUUID->"1e29a155-d9fc-472c-9f8e-b2884dbe602e"],
Cell[CellGroupData[{
Cell[207928, 4267, 792, 21, 28, "Input",ExpressionUUID->"006ed6c4-b1da-4751-b9bb-f00513abd36b"],
Cell[208723, 4290, 38963, 654, 235, "Output",ExpressionUUID->"3d9ce5e0-68ff-4828-995f-dc7b1eaebde8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247723, 4949, 182, 4, 28, "Input",ExpressionUUID->"1b15122f-4e06-40ac-be0b-9bf3b2db9018"],
Cell[247908, 4955, 1466, 27, 75, "Print",ExpressionUUID->"a8795371-07be-48ca-8514-9b75d5009a27",
 CellTags->"Info1713733657901-3168157"]
}, Open  ]],
Cell[249389, 4985, 184, 4, 28, "Input",ExpressionUUID->"688dc7ae-4869-4156-9c75-d564be2262b0"],
Cell[CellGroupData[{
Cell[249598, 4993, 692, 19, 28, "Input",ExpressionUUID->"7275a67d-2349-4b4b-89a5-133a5d648f94"],
Cell[250293, 5014, 209, 6, 32, "Output",ExpressionUUID->"824d316f-9382-4110-8c62-e69e4eacd1c6"]
}, Open  ]],
Cell[250517, 5023, 981, 29, 28, "Input",ExpressionUUID->"1a092ce9-8c73-4332-83a3-af71c10a59e5"],
Cell[CellGroupData[{
Cell[251523, 5056, 1206, 28, 33, "Input",ExpressionUUID->"1bc8d697-997d-48d4-8186-c41dc78ef7ee"],
Cell[252732, 5086, 529, 10, 32, "Output",ExpressionUUID->"c82389aa-8882-422f-acd5-e7f46682e53a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253298, 5101, 264, 6, 28, "Input",ExpressionUUID->"09129fb6-e06a-4382-a239-87c619427c6c"],
Cell[253565, 5109, 432, 9, 32, "Output",ExpressionUUID->"cff87f42-b274-4d4d-b37f-04687af6fc82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254034, 5123, 374, 11, 28, "Input",ExpressionUUID->"2b1330a4-8201-4dfb-90cc-a4193d6cde18"],
Cell[254411, 5136, 280, 7, 32, "Output",ExpressionUUID->"bcd99b4d-ab5f-414f-ac27-5dc0da908a4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254728, 5148, 615, 15, 28, "Input",ExpressionUUID->"43b46893-5583-41d1-aa78-c1b679c2d10d"],
Cell[255346, 5165, 9144, 164, 211, "Output",ExpressionUUID->"13690ad0-7502-495f-b984-7df2be5c504c"]
}, Open  ]],
Cell[264505, 5332, 184, 4, 28, "Input",ExpressionUUID->"88acbe43-8308-4787-88ce-c4e1772035b7"],
Cell[CellGroupData[{
Cell[264714, 5340, 282, 6, 28, "Input",ExpressionUUID->"8de50ee3-2e24-4d04-8cf7-d4e8bf5003bb"],
Cell[264999, 5348, 517, 11, 28, "Message",ExpressionUUID->"6ce6cadf-202f-4fba-a697-d51fbc2d26ab"],
Cell[265519, 5361, 176, 2, 32, "Output",ExpressionUUID->"fb342cfb-97d2-478e-9dcf-42584ab0a7f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265732, 5368, 341, 7, 28, "Input",ExpressionUUID->"77b8a48e-e902-4d92-8568-7e97edcddabf"],
Cell[266076, 5377, 294, 4, 32, "Output",ExpressionUUID->"0ff295a5-2eee-453b-b844-7b039b9f5e30"]
}, Open  ]]
}
]
*)

