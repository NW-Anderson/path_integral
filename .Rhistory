Edx = function(x,t){0}
Vdx = function(x,t){x*(1-x)}
X = numeric(n)
X[1] = .3
for (i in 2:n) {
X[i] = X[i-1] + Edx(X[i-1],t[i-1])*dt + sqrt(Vdx(X[i-1],t[i-1]))*rnorm(1,0,sqrt(dt))
X[i] = max(0,X[i])
X[i] = min(1,X[i])
}
# plot(t,X,type="l",ylim = c(0,1))
if(rep == 1){
masterdiff <- data.frame(class = 0,rep = rep, X = X,t = t)
}else{
masterdiff <- dplyr::bind_rows(masterdiff,
data.frame(class = 0,
rep = rep,
X = X,
t = t))
}
}
diffline <- masterdiff %>% filter(rep <= 3)
# Edx = function(x,t){5*x*(1-x)}
# Vdx = function(x,t){x*(1-x)}
# X = numeric(n)
# X[1] = .3
# for (i in 2:n) {
#   X[i] = X[i-1] + Edx(X[i-1],t[i-1])*dt + sqrt(Vdx(X[i-1],t[i-1]))*rnorm(1,0,sqrt(dt))
#   X[i] = max(0,X[i])
#   X[i] = min(1,X[i])
# }
#
# ggplot(stochline, aes(x = t, y = X)) +
#   geom_line(aes(color = class,
#                 group = as.factor(lineID)),
#                 alpha = 0.6,
#                 linewidth = 0.5) +
#   theme_bw() +
#   guides(color=guide_legend(title = "Number of\n interactions",
#                             override.aes = list(alpha=1))) +
#   # scale_x_break(c(1,2), scales = 0.9)
#   scale_x_continuous("time (genomic units)") +
#   scale_y_continuous("Allele Frequency") +
#   theme(panel.grid.minor.y = element_blank(),
#         panel.grid.minor.x = element_blank()) +
#   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
#   scale_color_viridis(end = 0.8) +
#   geom_line(data = detline,
#             aes(x = t, y = X),
#             color = viridis(11)[11],
#             size = 1.5) +
#   geom_line(data = diffline,
#             aes(x = t, y = X,
#                 group = rep),
#             linetype="dashed",
#             color = viridis(11)[11], size  = 0.75)
#
# firstplot <- ggplot(detline,aes(x = t, y = X)) +
#   theme_bw() +
#   guides(color=element_blank()) +
#   # scale_x_break(c(1,2), scales = 0.9)
#   scale_x_continuous("time (genomic units)") +
#   scale_y_continuous("Allele Frequency",
#                      limits = c(0,1)) +
#   theme(panel.grid.minor.y = element_blank(),
#         panel.grid.minor.x = element_blank()) +
#   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
#   geom_line(color = viridis(11)[11],
#             size = 1.5)
firstplot
secondplot <- firstplot +
geom_line(data = diffline,
aes(x = t, y = X,
group = rep),
linetype="dashed",
color = viridis(11)[11], size  = 0.75)
secondplot
neutline <- stochline %>% filter(class == 0)
thirdplot <- secondplot +
geom_line(data = neutline,
aes(group = as.factor(lineID)),
alpha = 0.6,
linewidth = 0.5,
color = viridis(11)[1])
thirdplot
pertline <- stochline %>% filter(class == 200)
thirdplot + geom_line(data = pertline,
aes(group = as.factor(lineID)),
alpha = 0.6,
linewidth = 0.5,
color = viridis(11)[6])
##################################
#############
#set parameters
dt = .001
n = 1000
t = cumsum(rep(dt,n))
#Brownian motion
B = cumsum(rnorm(n,0,sqrt(dt)))
plot(t,B,type="l")
# master <- data.frame("class","rep", "X", "t")
for(rep in 1:10){
#neutral Wright-Fisher
Edx = function(x,t){0}
Vdx = function(x,t){x*(1-x)}
X = numeric(n)
X[1] = .3
for (i in 2:n) {
X[i] = X[i-1] + Edx(X[i-1],t[i-1])*dt + sqrt(Vdx(X[i-1],t[i-1]))*rnorm(1,0,sqrt(dt))
X[i] = max(0,X[i])
X[i] = min(1,X[i])
}
# plot(t,X,type="l",ylim = c(0,1))
if(rep == 1){
master <- data.frame(class = 0,rep = rep, X = X,t = t)
}else{
master <- dplyr::bind_rows(master,
data.frame(class = 0,
rep = rep,
X = X,
t = t))
}
for(Numinteractions in c(10,100,200,500)){
interactions = sample(2:n,Numinteractions) %>% sort()
Edx = function(x,t){5*x*(1-x)}
Vdx = function(x,t){x*(1-x)}
X = numeric(n)
X[1] = .3
for (i in 2:n) {
if(i %in% interactions){
X[i] = X[i-1] + Edx(X[i-1],t[i-1])*dt
X[i] = max(0,X[i])
X[i] = min(1,X[i])
} else{
X[i] = X[i-1] + sqrt(Vdx(X[i-1],t[i-1]))*rnorm(1,0,sqrt(dt))
X[i] = max(0,X[i])
X[i] = min(1,X[i])
}
}
master <- dplyr::bind_rows(master,
data.frame(class = Numinteractions,
rep = rep,
X = X,
t = t))
}
}
Edx = function(x,t){5*x*(1-x)}
Vdx = function(x,t){x*(1-x)}
X = numeric(n)
X[1] = .3
for (i in 2:n) {
X[i] = X[i-1] + Edx(X[i-1],t[i-1])*dt
X[i] = max(0,X[i])
X[i] = min(1,X[i])
}
master <- dplyr::bind_rows(master,
data.frame(class = 1000,
rep = 1,
X = X,
t = t))
# ggplot(master, aes(x = t, y = X)) +
#   geom_line(aes(color = as.factor(class),
#                 alpha = as.factor(rep)))
tmp <- master %>% # filter(class %in% c(0,500,1000)) %>%
filter(rep <= 3) %>%
group_by(class,rep) %>%
mutate(lineID = cur_group_id()) %>%
ungroup() %>%
mutate(deterministic = (class == 1000))
detline <- tmp %>% filter(deterministic)
stochline <- tmp %>% filter(!deterministic)
# #genic selection Wright-Fisher
for(rep in 1:10){
#neutral Wright-Fisher
Edx = function(x,t){0}
Vdx = function(x,t){x*(1-x)}
X = numeric(n)
X[1] = .3
for (i in 2:n) {
X[i] = X[i-1] + Edx(X[i-1],t[i-1])*dt + sqrt(Vdx(X[i-1],t[i-1]))*rnorm(1,0,sqrt(dt))
X[i] = max(0,X[i])
X[i] = min(1,X[i])
}
# plot(t,X,type="l",ylim = c(0,1))
if(rep == 1){
masterdiff <- data.frame(class = 0,rep = rep, X = X,t = t)
}else{
masterdiff <- dplyr::bind_rows(masterdiff,
data.frame(class = 0,
rep = rep,
X = X,
t = t))
}
}
diffline <- masterdiff %>% filter(rep <= 3)
# Edx = function(x,t){5*x*(1-x)}
# Vdx = function(x,t){x*(1-x)}
# X = numeric(n)
# X[1] = .3
# for (i in 2:n) {
#   X[i] = X[i-1] + Edx(X[i-1],t[i-1])*dt + sqrt(Vdx(X[i-1],t[i-1]))*rnorm(1,0,sqrt(dt))
#   X[i] = max(0,X[i])
#   X[i] = min(1,X[i])
# }
#
# ggplot(stochline, aes(x = t, y = X)) +
#   geom_line(aes(color = class,
#                 group = as.factor(lineID)),
#                 alpha = 0.6,
#                 linewidth = 0.5) +
#   theme_bw() +
#   guides(color=guide_legend(title = "Number of\n interactions",
#                             override.aes = list(alpha=1))) +
#   # scale_x_break(c(1,2), scales = 0.9)
#   scale_x_continuous("time (genomic units)") +
#   scale_y_continuous("Allele Frequency") +
#   theme(panel.grid.minor.y = element_blank(),
#         panel.grid.minor.x = element_blank()) +
#   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
#   scale_color_viridis(end = 0.8) +
#   geom_line(data = detline,
#             aes(x = t, y = X),
#             color = viridis(11)[11],
#             size = 1.5) +
#   geom_line(data = diffline,
#             aes(x = t, y = X,
#                 group = rep),
#             linetype="dashed",
#             color = viridis(11)[11], size  = 0.75)
#
# firstplot <- ggplot(detline,aes(x = t, y = X)) +
#   theme_bw() +
#   guides(color=element_blank()) +
#   # scale_x_break(c(1,2), scales = 0.9)
#   scale_x_continuous("time (genomic units)") +
#   scale_y_continuous("Allele Frequency",
#                      limits = c(0,1)) +
#   theme(panel.grid.minor.y = element_blank(),
#         panel.grid.minor.x = element_blank()) +
#   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
#   geom_line(color = viridis(11)[11],
#             size = 1.5)
firstplot
secondplot <- firstplot +
geom_line(data = diffline,
aes(x = t, y = X,
group = rep),
linetype="dashed",
color = viridis(11)[11], size  = 0.75)
secondplot
neutline <- stochline %>% filter(class == 0)
thirdplot <- secondplot +
geom_line(data = neutline,
aes(group = as.factor(lineID)),
alpha = 0.6,
linewidth = 0.5,
color = viridis(11)[1])
thirdplot
pertline <- stochline %>% filter(class == 200)
thirdplot + geom_line(data = pertline,
aes(group = as.factor(lineID)),
alpha = 0.6,
linewidth = 0.5,
color = viridis(11)[6])
##################################
#############
#set parameters
dt = .001
n = 1000
t = cumsum(rep(dt,n))
#Brownian motion
B = cumsum(rnorm(n,0,sqrt(dt)))
plot(t,B,type="l")
# master <- data.frame("class","rep", "X", "t")
for(rep in 1:10){
#neutral Wright-Fisher
Edx = function(x,t){0}
Vdx = function(x,t){x*(1-x)}
X = numeric(n)
X[1] = .3
for (i in 2:n) {
X[i] = X[i-1] + Edx(X[i-1],t[i-1])*dt + sqrt(Vdx(X[i-1],t[i-1]))*rnorm(1,0,sqrt(dt))
X[i] = max(0,X[i])
X[i] = min(1,X[i])
}
# plot(t,X,type="l",ylim = c(0,1))
if(rep == 1){
master <- data.frame(class = 0,rep = rep, X = X,t = t)
}else{
master <- dplyr::bind_rows(master,
data.frame(class = 0,
rep = rep,
X = X,
t = t))
}
for(Numinteractions in c(10,100,200,500)){
interactions = sample(2:n,Numinteractions) %>% sort()
Edx = function(x,t){5*x*(1-x)}
Vdx = function(x,t){x*(1-x)}
X = numeric(n)
X[1] = .3
for (i in 2:n) {
if(i %in% interactions){
X[i] = X[i-1] + Edx(X[i-1],t[i-1])*dt
X[i] = max(0,X[i])
X[i] = min(1,X[i])
} else{
X[i] = X[i-1] + sqrt(Vdx(X[i-1],t[i-1]))*rnorm(1,0,sqrt(dt))
X[i] = max(0,X[i])
X[i] = min(1,X[i])
}
}
master <- dplyr::bind_rows(master,
data.frame(class = Numinteractions,
rep = rep,
X = X,
t = t))
}
}
Edx = function(x,t){5*x*(1-x)}
Vdx = function(x,t){x*(1-x)}
X = numeric(n)
X[1] = .3
for (i in 2:n) {
X[i] = X[i-1] + Edx(X[i-1],t[i-1])*dt
X[i] = max(0,X[i])
X[i] = min(1,X[i])
}
master <- dplyr::bind_rows(master,
data.frame(class = 1000,
rep = 1,
X = X,
t = t))
# ggplot(master, aes(x = t, y = X)) +
#   geom_line(aes(color = as.factor(class),
#                 alpha = as.factor(rep)))
tmp <- master %>% # filter(class %in% c(0,500,1000)) %>%
filter(rep <= 3) %>%
group_by(class,rep) %>%
mutate(lineID = cur_group_id()) %>%
ungroup() %>%
mutate(deterministic = (class == 1000))
detline <- tmp %>% filter(deterministic)
stochline <- tmp %>% filter(!deterministic)
# #genic selection Wright-Fisher
for(rep in 1:10){
#neutral Wright-Fisher
Edx = function(x,t){0}
Vdx = function(x,t){x*(1-x)}
X = numeric(n)
X[1] = .3
for (i in 2:n) {
X[i] = X[i-1] + Edx(X[i-1],t[i-1])*dt + sqrt(Vdx(X[i-1],t[i-1]))*rnorm(1,0,sqrt(dt))
X[i] = max(0,X[i])
X[i] = min(1,X[i])
}
# plot(t,X,type="l",ylim = c(0,1))
if(rep == 1){
masterdiff <- data.frame(class = 0,rep = rep, X = X,t = t)
}else{
masterdiff <- dplyr::bind_rows(masterdiff,
data.frame(class = 0,
rep = rep,
X = X,
t = t))
}
}
diffline <- masterdiff %>% filter(rep <= 3)
# Edx = function(x,t){5*x*(1-x)}
# Vdx = function(x,t){x*(1-x)}
# X = numeric(n)
# X[1] = .3
# for (i in 2:n) {
#   X[i] = X[i-1] + Edx(X[i-1],t[i-1])*dt + sqrt(Vdx(X[i-1],t[i-1]))*rnorm(1,0,sqrt(dt))
#   X[i] = max(0,X[i])
#   X[i] = min(1,X[i])
# }
#
# ggplot(stochline, aes(x = t, y = X)) +
#   geom_line(aes(color = class,
#                 group = as.factor(lineID)),
#                 alpha = 0.6,
#                 linewidth = 0.5) +
#   theme_bw() +
#   guides(color=guide_legend(title = "Number of\n interactions",
#                             override.aes = list(alpha=1))) +
#   # scale_x_break(c(1,2), scales = 0.9)
#   scale_x_continuous("time (genomic units)") +
#   scale_y_continuous("Allele Frequency") +
#   theme(panel.grid.minor.y = element_blank(),
#         panel.grid.minor.x = element_blank()) +
#   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
#   scale_color_viridis(end = 0.8) +
#   geom_line(data = detline,
#             aes(x = t, y = X),
#             color = viridis(11)[11],
#             size = 1.5) +
#   geom_line(data = diffline,
#             aes(x = t, y = X,
#                 group = rep),
#             linetype="dashed",
#             color = viridis(11)[11], size  = 0.75)
#
# firstplot <- ggplot(detline,aes(x = t, y = X)) +
#   theme_bw() +
#   guides(color=element_blank()) +
#   # scale_x_break(c(1,2), scales = 0.9)
#   scale_x_continuous("time (genomic units)") +
#   scale_y_continuous("Allele Frequency",
#                      limits = c(0,1)) +
#   theme(panel.grid.minor.y = element_blank(),
#         panel.grid.minor.x = element_blank()) +
#   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
#   geom_line(color = viridis(11)[11],
#             size = 1.5)
firstplot
secondplot <- firstplot +
geom_line(data = diffline,
aes(x = t, y = X,
group = rep),
linetype="dashed",
color = viridis(11)[11], size  = 0.75)
secondplot
neutline <- stochline %>% filter(class == 0)
thirdplot <- secondplot +
geom_line(data = neutline,
aes(group = as.factor(lineID)),
alpha = 0.6,
linewidth = 0.5,
color = viridis(11)[1])
thirdplot
pertline <- stochline %>% filter(class == 200)
thirdplot + geom_line(data = pertline,
aes(group = as.factor(lineID)),
alpha = 0.6,
linewidth = 0.5,
color = viridis(11)[6])
##################################
pertline <- stochline %>% filter(class == 500)
thirdplot + geom_line(data = pertline,
aes(group = as.factor(lineID)),
alpha = 0.6,
linewidth = 0.5,
color = viridis(11)[6])
unique(master(class()))
unique(master$class)
tmp <- master %>% # filter(class %in% c(0,500,1000)) %>%
filter(rep %in% sample(1:10,3)) %>%
group_by(class,rep) %>%
mutate(lineID = cur_group_id()) %>%
ungroup() %>%
mutate(deterministic = (class == 1000))
pertline <- tmp %>% filter(!deterministic,
class == 200)
thirdplot + geom_line(data = pertline,
aes(group = as.factor(lineID)),
alpha = 0.6,
linewidth = 0.5,
color = viridis(11)[6])
firstplot
secondplot <- firstplot +
geom_line(data = diffline,
aes(x = t, y = X,
group = rep),
linetype="dashed",
color = viridis(11)[11], size  = 0.75)
secondplot
thirdplot <- secondplot +
geom_line(data = neutline,
aes(group = as.factor(lineID)),
alpha = 0.6,
linewidth = 0.5,
color = viridis(11)[1])
thirdplot
thirdplot + geom_line(data = pertline,
aes(group = as.factor(lineID)),
alpha = 0.6,
linewidth = 0.5,
color = viridis(11)[6])
setwd("~/Documents/GitHub/path_integral")
library(ggraptR)
library(poolSeq)
library(patchwork)
library(dplyr)
library(ggridges)
library(tidyr)
library(viridis)
library(colorspace)
library(gganimate)
library(gifski)
library(av)
library(png)
library(magick)
library(scico)
library(plotrix)
library(ggdensity)
library(ggplot2) # needs to be version ≥ 2.1.0
library(scales)
library(devtools)
library(network)
library(sna)
library(GGally)
library(geomnet)
library(ggnetwork)
library(igraph)
library(ggraph)
library(tidygraph)
library(vcfR)
library(ggplotify)
library(pheatmap)
library(ggbreak)
library(ggimage)
dev.off()
