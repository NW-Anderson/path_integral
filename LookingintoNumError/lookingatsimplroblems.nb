(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    911238,      17790]
NotebookOptionsPosition[    901927,      17650]
NotebookOutlinePosition[    902336,      17666]
CellTagsIndexPosition[    902293,      17663]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<path-integrals.m\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Kimura", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_", ",", "n_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "m", "}"}], ",", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"4", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "m"}], "+", "1"}], ")"}], "*", "x", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"m", "+", "1"}], ")"}]}], ")"}]}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "x"}]}]}], "]"}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "y"}]}]}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], "*", "m", "*", 
         RowBox[{"(", 
          RowBox[{"m", "+", "1"}], ")"}], "*", "t"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"haywardVGMinus2", "[", "0", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{"Kimura", "[", 
      RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"k", " ", "\[LessEqual]", "2"}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"haywardVGMinus2", "[", "k", "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{
  3.9104404293424273`*^9, {3.9104439402454634`*^9, 3.9104439475819626`*^9}, {
   3.9104655855190573`*^9, 3.910465585581976*^9}, {3.9104672640834656`*^9, 
   3.910467282535739*^9}, {3.9104673280615807`*^9, 3.9104673301211534`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"29e19224-63bf-46b3-898f-c964c55548fe"],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"k", " ", "\[LessEqual]", "2"}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"minus2", "[", "k", "]"}], "  ", "=", " ", 
     RowBox[{
      RowBox[{"pints", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9104673353913183`*^9, 3.9104673638068013`*^9}, {
  3.910467442105157*^9, 3.9104674440629835`*^9}, {3.910467704845187*^9, 
  3.9104677056296268`*^9}, {3.9104799141238093`*^9, 3.910479935635927*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"47daf7f6-884c-44ff-8bfc-b7974af13747"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minus2", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.910479954103835*^9, 3.9104799623871083`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"f97aad94-4119-435e-bf65-e1fcffb1a067"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
       RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
       RowBox[{"(", 
         RowBox[{
           RowBox[{
             FractionBox["3", "500"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "10"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{
             FractionBox["1", "200"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "12"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}]}], "+", 
           TemplateBox[{"440"}, "OutputSizeLimit`Skeleton"], "+", 
           RowBox[{
             FractionBox["1", "63"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "27"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["15", "2"]}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "+", 
                 RowBox[{
                   FractionBox["35", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "y"}]}], ")"}], " ", "\[Alpha]", " ", 
             "\[CapitalLambda]"}], "-", 
           RowBox[{
             FractionBox["3", "14"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "20"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "y"}]}], ")"}], " ", "\[Alpha]", " ", 
             "\[CapitalLambda]"}]}], ")"}]}], Short[#, 8]& ], "line" -> 6, 
   "sessionID" -> 28767185355271952076, "byteCount" -> 2835072, "size" -> 8, 
   "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{
  3.910479922403184*^9, {3.91047995855385*^9, 3.9104799626249857`*^9}, {
   3.9104826647039537`*^9, 3.91048267843777*^9}, 3.9105463936281424`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"401e3363-558b-4fde-8712-d294be7968ac"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "pints", "]"}]], "Input",
 CellChangeTimes->{{3.9104673353913183`*^9, 3.9104673638068013`*^9}, {
  3.910467442105157*^9, 3.9104674440629835`*^9}, {3.910467704845187*^9, 
  3.9104677056296268`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"971b5410-e78b-4219-a500-e30e00871f9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", "\"\<path-integrals-simulations.m\>\"", "]"}], 
  ";"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"2a34f0cd-b329-474c-9d7e-7c42a3aac229"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HaywardScenario2", "[", "0", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{"Kimura", "[", 
      RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9104404829333925`*^9, 3.9104405042545815`*^9}, {
  3.910467772658696*^9, 3.910467776462972*^9}, {3.9104794527154713`*^9, 
  3.910479463459803*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"eb0b9733-2f16-4305-b362-be402cbe9214"],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"k", " ", "\[LessEqual]", "2"}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HaywardScenario2", "[", "k", "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.910440522666698*^9, 3.9104405229344015`*^9}, {
  3.9104405556156855`*^9, 3.9104405889812126`*^9}, {3.910465577096178*^9, 
  3.9104655771830187`*^9}, {3.910467782043479*^9, 3.9104677885023327`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"6ab06e22-7ec7-44bb-92f9-0a4741e08ed1"],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"k", " ", "\[LessEqual]", "2"}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"scen2", "[", "k", "]"}], "  ", "=", " ", 
     RowBox[{
      RowBox[{"pints", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9104674171030755`*^9, 3.910467417159497*^9}, {
  3.9104674485829477`*^9, 3.910467449998295*^9}, {3.910479976763101*^9, 
  3.9104799829548407`*^9}, {3.9104857371638527`*^9, 3.9104857393076982`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"994830d3-14bb-4413-a139-72cab4dba8ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scen2", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.9104674171030755`*^9, 3.910467417159497*^9}, {
  3.9104674485829477`*^9, 3.910467449998295*^9}, {3.910479976763101*^9, 
  3.9104799829548407`*^9}, {3.9104857371638527`*^9, 3.9104857393076982`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b5c017cd-da54-4b42-b0c2-e5d2a480daf6"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
       RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
       RowBox[{"(", 
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"3.389775042894779`*^-11", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.050979`"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{"2.366000001403212`*^-11", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "5.050979`"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{"7.926668185648112`*^-12", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "10.050979`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", 
                   FractionBox["3", "2"]}], "+", 
                 RowBox[{
                   FractionBox["15", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "2"]}]}], ")"}]}], "-", 
           RowBox[{"1.3182458500146363`*^-11", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.050979`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", 
                   FractionBox["3", "2"]}], "+", 
                 RowBox[{
                   FractionBox["15", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "2"]}]}], ")"}]}], "-", 
           RowBox[{"4.352197304205049`*^-12", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "3.050979`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", 
                   FractionBox["3", "2"]}], "+", 
                 RowBox[{
                   FractionBox["15", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "2"]}]}], ")"}]}], "+", 
           TemplateBox[{"24634"}, "OutputSizeLimit`Skeleton"], "+", 
           RowBox[{"1.0327029334609812`*^-6", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "33.101957999999996`"}], " ", "t"}]]}], 
               ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   FractionBox["3465", "128"], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "-", 
                 RowBox[{
                   FractionBox["15015", "32"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}], "+", 
                 RowBox[{
                   FractionBox["135135", "64"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "5"]}], "-", 
                 RowBox[{
                   FractionBox["109395", "32"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "7"]}], "+", 
                 RowBox[{
                   FractionBox["230945", "128"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "9"]}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "y"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "+", 
           RowBox[{"5.796749464474984`*^-7", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "14.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   FractionBox["3465", "128"], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "-", 
                 RowBox[{
                   FractionBox["15015", "32"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}], "+", 
                 RowBox[{
                   FractionBox["135135", "64"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "5"]}], "-", 
                 RowBox[{
                   FractionBox["109395", "32"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "7"]}], "+", 
                 RowBox[{
                   FractionBox["230945", "128"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "9"]}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "y"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "-", 
           RowBox[{"9.967159968359068`*^-8", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "37.101957999999996`"}], " ", "t"}]]}], 
               ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["9009", "256"]}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "+", 
                 RowBox[{
                   FractionBox["225225", "256"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}], "-", 
                 RowBox[{
                   FractionBox["765765", "128"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "5"]}], "+", 
                 RowBox[{
                   FractionBox["2078505", "128"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "7"]}], "-", 
                 RowBox[{
                   FractionBox["4849845", "256"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "9"]}], "+", 
                 RowBox[{
                   FractionBox["2028117", "256"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "11"]}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "y"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "+", 
           RowBox[{"0.0002530046331663911`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "14.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "y"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "+", 
           RowBox[{"0.00020095082008189023`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "y"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}]}], ")"}]}], 
     Short[#, 8]& ], "line" -> 12, "sessionID" -> 28767185355271952076, 
   "byteCount" -> 161732368, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.9104799832455773`*^9, 3.9104856687906804`*^9, 
  3.910485746510939*^9, 3.9105494117069855`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"b21dc3af-8d2b-410f-8eb4-fb9156eef4f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minus2", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.910485714360303*^9, 3.91048571652888*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"ea1448e1-f4ca-4a09-b121-402807e48ff7"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
       RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
       RowBox[{"(", 
         RowBox[{
           RowBox[{
             FractionBox["3", "500"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "10"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{
             FractionBox["1", "200"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "12"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}]}], "+", 
           TemplateBox[{"440"}, "OutputSizeLimit`Skeleton"], "+", 
           RowBox[{
             FractionBox["1", "63"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "27"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["15", "2"]}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "+", 
                 RowBox[{
                   FractionBox["35", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "y"}]}], ")"}], " ", "\[Alpha]", " ", 
             "\[CapitalLambda]"}], "-", 
           RowBox[{
             FractionBox["3", "14"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "20"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "y"}]}], ")"}], " ", "\[Alpha]", " ", 
             "\[CapitalLambda]"}]}], ")"}]}], Short[#, 8]& ], "line" -> 13, 
   "sessionID" -> 28767185355271952076, "byteCount" -> 2835072, "size" -> 8, 
   "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.91048571784406*^9, 3.91048574669273*^9}, 
   3.9105494122159863`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"cdddc191-33ed-4a69-aa7a-157c5ebcf119"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "pints", "]"}]], "Input",
 CellChangeTimes->{{3.9104674228977623`*^9, 3.9104674250308456`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"8738b2bd-530c-4240-b6d5-1cf509336971"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<new1through5Sequential_50Kimura.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", " ", "=", " ", "0"}], ",", " ", 
   RowBox[{"k", " ", "\[LessEqual]", "2"}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SimplifiedHayward50", "[", "k", "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", "*", " ", 
         RowBox[{"new", "[", "j", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "0", ",", " ", "k"}], "}"}]}], "]"}]}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.910441098479672*^9, 3.9104411460445724`*^9}, {
  3.9104655620267887`*^9, 3.9104655727661486`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"735cf53c-afe1-4756-9381-ce7fa2626a01"],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"k", " ", "\[LessEqual]", "2"}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"old", "[", "k", "]"}], "  ", "=", " ", 
     RowBox[{"new", "[", "k", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9104674360226173`*^9, 3.9104674613282166`*^9}, {
  3.910478834299822*^9, 3.910478834448344*^9}, {3.9104864013065357`*^9, 
  3.910486405625805*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"bb357ef9-3d93-46a3-84bc-841268265728"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"old", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.9104799866342373`*^9, 3.9104799874124737`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"0cf82375-5cda-4422-8163-9c1981f67cbd"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
       RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
       RowBox[{"(", 
         RowBox[{
           FractionBox[
            RowBox[{"3", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "t"}]], " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "Ne", " ", "t", " ", "VG"}], "W"]}]]}], 
                ")"}], " ", "W"}], "Ne"], "-", 
           FractionBox[
            RowBox[{"12", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "t"}]], " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "t", " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    FractionBox[
                    RowBox[{"4", " ", "Ne", " ", "VG"}], "W"]}], ")"}]}]]}], 
                ")"}], " ", "VG", " ", "W", " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", 
                  RowBox[{"2", " ", "x"}]}], ")"}]}], 
            RowBox[{
              RowBox[{"4", " ", "Ne", " ", "VG"}], "+", 
              RowBox[{"4", " ", "W"}]}]], "+", 
           TemplateBox[{"440"}, "OutputSizeLimit`Skeleton"], "+", 
           FractionBox[
            RowBox[{"6", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"-", "3"}], " ", "t"}]], " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "t", " ", 
                    RowBox[{"(", 
                    RowBox[{"14", "+", 
                    FractionBox[
                    RowBox[{"8", " ", "Ne", " ", "VG"}], "W"]}], ")"}]}]]}], 
                ")"}], " ", "W", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    RowBox[{"-", 
                    FractionBox["15", "2"]}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "+", 
                  RowBox[{
                    FractionBox["35", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}]}], ")"}], " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", 
                  RowBox[{"2", " ", "y"}]}], ")"}], " ", "\[Alpha]", " ", 
              "\[CapitalLambda]"}], 
            RowBox[{"7", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"8", " ", "Ne", " ", "VG"}], "+", 
                  RowBox[{"14", " ", "W"}]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"15", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"-", "3"}], " ", "t"}]], " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{"4", " ", "Ne", " ", "t", " ", "VG"}], "W"]}]]}], 
                ")"}], " ", "W", " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", 
                  RowBox[{"2", " ", "x"}]}], ")"}], " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", 
                  RowBox[{"2", " ", "y"}]}], ")"}], " ", "\[Alpha]", " ", 
              "\[CapitalLambda]"}], 
            RowBox[{"14", " ", "Ne", " ", "VG"}]]}], ")"}]}], Short[#, 8]& ], 
   "line" -> 18, "sessionID" -> 28767185355271952076, "byteCount" -> 2977728, 
   "size" -> 8, "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{
  3.9104799877392387`*^9, 3.9104863793642483`*^9, {3.9104864162209463`*^9, 
   3.910486430686007*^9}, 3.910550089987005*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"aedea820-53fd-41e4-a297-1120ad3b095c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "new", "]"}]], "Input",
 CellChangeTimes->{{3.9104672228660097`*^9, 3.9104672251845064`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"f8bb49f4-eaab-49db-8532-3045efb6f3d5"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
             "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
     "**"}], "**"}], "*******)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.910480471917904*^9, 3.9104804808100014`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"08af805f-04bf-4a82-9e15-b1cc12743de6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "fitVar", ",", " ", "selectedNe", ",", " ", "jumpSize", ",", " ", 
    "selCoef", ",", " ", "genVar", ",", " ", "start", ",", "time", ",", " ", 
    "soln"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitVar", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectedNe", " ", "=", " ", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jumpSize", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", " ", "=", " ", "0.05"}], ";"}]}], "Input",
 CellChangeTimes->{{3.910440697865986*^9, 3.9104406988182306`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"e669f754-fb39-4a44-bec1-039e413fd17d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"selCoef", ",", " ", "genVar", ",", " ", "soln"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genVar", " ", "=", " ", "0.01"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9104409339464197`*^9, 3.910440934322338*^9}, 
   3.9104414376885943`*^9, {3.910468296420635*^9, 3.910468297175737*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9a77c101-05f4-4a9e-89a8-87eeb75a3d77"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"haywardVGMinus2", "[", "k", "]"}], "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "\[Rule]", "start"}], ",", 
           RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
           RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",",
            " ", 
           RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
           RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
           RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
           RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", " ", "2"}], "}"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"9f9552d7-7c12-4355-bddf-136a5b1647f8"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 128, 34, 28766774182623955770, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9104782673720818`*^9, 3.9104864409365664`*^9, 
  3.910487139114995*^9},
 CellLabel->
  "During evaluation of \
In[128]:=",ExpressionUUID->"effe38d6-8b5c-4432-a336-082d235cf7bc"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 128, 35, 28766774182623955770, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9104782673720818`*^9, 3.9104864409365664`*^9, 
  3.910487139159442*^9},
 CellLabel->
  "During evaluation of \
In[128]:=",ExpressionUUID->"53e47015-f9bf-4ce8-8f74-126c454ce874"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
+H9YTAjK
         "]]}, Annotation[#, "Charting`Private`Tag$24341#1"]& ], 
      TagBox[{
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
uIjwaQWXOVaTR/8DCQOKQw==
         "]]}, Annotation[#, "Charting`Private`Tag$24341#1"]& ], 
      TagBox[{
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwUVnc8Vu8bthNlvVJJMqqvnRBF59yvEYlCNOyZJgohkZ29R4hsIoRsvfbe
e+/NO1AokX7v76/zuT7nPM9z3dd13fd5eM1s7j6ioqCgcKKhoPj/89aj1b7a
tXvovL7PkH7eJtAocr6cOS0FL8KvnNrZ2gTJpNiEb6eVwE7ByrFEegvUukaK
Ek/rgJec4mJW7RY8sPiFizhtARQcYYfXhn/A1CVfxeDT9sCxZnRE9cgOJJ/Q
eB9w2hu0LhzbnHLeAw/6b//5n44Cvy/PUmSuU2KFVML9il5GgUvjlgSlOSW2
38dmbaIlClqt/2nU+1Niz1OLfBFziIaBnSOagiOU2Oa/6WKD/TFAm3HN2/UV
FfbYz5gr54LiQE5JeHAsjRobO+WsWHL4CSouPv9ndECLlefSTZ++lwRs4vt/
gJcOu64nQ0uflwQ6be4EBmU6LDfhjXmeaDKkRX0UMwylw9o8lb5AMZkMFStf
G1d5jmDZLL5+zriaCvxPdnTUgB77UDfl6+ZWOmywUclMWzJgNyZ0GFI5M+Ca
wQbK+Z4B+96I/pG2YgZ8vErfei2DAfvN3IazNCoD6oqbXvItMGCZrBGftzKZ
8GtkuC7SkBHb5DmmR+eaBcQbYjZN6sewErmsdFz0OWCGXL63z8aEbRNrMukS
z4FyC2M/EGPCmhQ6Vb3TzYH1J8Z4E1UmbHDpzMu5nBzIu/AqQdaNCbtamzeR
efsLRN3lUbuxxoT9NKRaeDkyF3j+TOXElDJjGf95GKhwf4VukQtXP8WzYGOf
PjASUf4K/SXh+2UZLNjzgyImrNZfIdbNmrGmgAWLZo+YT+C+Qs1pZCGqmQVb
kR1TUiZWAD8uVCgabbFgidqE72rdBfBPmpnFWJEVK3V0BEHnC4BxT7zt5m1W
rHN1XbX4bgGktTRJnXvAij0i+KH2BHch3N1poIl4xorlPZRvnLEqhLzrS9Uh
YazYe58/dNgdL4I7rYUMM6Os2ARDT3VL3iIQEBHqDJtjxc6zWXU9vFIEDm+f
zIits2JtXBV6EMMiMFMIWL+0z4r1v0vsP5JXBFcE7gjd4GLD4g4Uxj+qf4My
a8VvFXpsWJoiUf0Qk2/Q4Nd39JIZG/bW41OT7vbfgN+F3zfsKRt2pI849Sjh
GzzHq/446cSG3cqMnbtE+AbL4ivOV6PYsBe0SKsNgcVAS2nnUNvKhuV0U5F9
nFIMplw9wu962LAsecmBDGXFsOQkHnJ+mA37h15bTGu+GIYOHS2EF9iwvbVl
dtNXS4DFmZTHe8CGbSKxNHncKYF/OkE8F6gw2EquZxwXLEqgzdxUn5Ueg81w
4qp4HloCotGdcukYDNZZ3OPw91IJNNjrSBYLYrA2RuMaCfsloHdY9OpQDIO1
CJJMAdZSeNlml3pZCoPVWF1SfH+9FCpKHbbvohjs+eRb/pjIUmiqkTjlqYXB
nu5OGy/9XAofKxsz2O9jsEwHB8J61aXw6cNxozA9DHbvwdfu5LVSWNbZsVY0
x2C7mdnZxbBlsPxz5zDWDoNtQKwe9d0rgw/+SV2vHTHY8ufNpfbPyyCJPe/Y
9bcYbFqLk25VTBk06UZS+XhisE5uU59uEsuAK/Xr8tEwDNYqT3oTT1UOe+qy
mpKRGKzZRKh86KlykI43cFGOwWBvyygsDimWg/aTY6pCCRgs30amoHl8OZzT
yNpdzcRgT56leEtXUA7pqxKlptkY7DE13c7spnLQy0VjGr9gsL8yGW02N8vB
QOPk+s0CDJYwaFEbSVcBr3/ZOD4rwmDnqapZZbgqICDQ+KFDMQbbafSy2FWl
AmJE8Kq3yzHY+qA2Wl7DCmh1N3t9qhKDLavke9BoS17vflGouwqDTeUY2mP4
VAG2T48+3qvGYD8oianlf6uAYCFlRptaDDbI1jdBq60Ctp0YXvXUYbCO3dcg
drsC/DFsVZqNZL3FSpba6CtBVnid07gJg00PFg/a56qEkyn/ieg3Y7CyxC8S
opcrwbj38I9SCwbbp/7fmNGNSgjcq4nkasVgn+SmuoXpVoLon2GqeTI+ZOS+
WG9VCYy0HTrRbRhs1PO4zp8elfBaD42RbsdghTvY7S7EVEIlBWmgiYzrhcJO
P8iphHyXQk7FDgz2YQBjrV91JcgHODvmkzFp7b1lZX8lOA7p/DrSicH6qFId
JyxXgsa3R1kaZMyV7frt7H4l1Izjo3zIuIh+T1eDuQqucENXNhnffGJP4cFf
BQXnew2/k/FMy0ZmkUwVRPAL6ODI2OG/57cX1argTOwqLpeMj/ku/zxhUgVG
lB2fA8g4ddk0XsW+CuTjk/kekPE15SnsG78qSMbcvcZGxr0ZD1dyEqrg252Z
P1Vkvpa0g8GTBVVgcdL4tQ4ZH1hoSDE1VcHVmcPSCXK9kY3t4zBWBfuOVN1a
ZCx0XtnjFZG8vruhtZSsV61X3X9plN9hOrOohIGM7y9c7x488R1W7+mk3Sbr
S1Qot6cT+g7v3ykmu5H98E6VPHMV/Q4unZeqksl+cVJ9rXt69zuEFUxRFZL9
VKnLYOpy/g6WsKud1IDBTvPwlhyGfAdWBY23rvUYrL17gr542nfIpFZmVCPn
IwUiP0d2fIcRpC6lmJynq0lMGk0z30E4u6dZE0fuv0P/nd2f3wEnGRo+Sc7f
Ps5dQY8LB3oTlPcbyHmNOHuwGiiOA1/xfmvuMgxWwNUxFKeEg7Tw4OdPSzDY
e9etJ3mscHB8plajpxCD/Vqp77CCI+PLOW6T5P5R5hzhOt2Pg99HVu3KszDY
yTd3G24t4yCwrrTDOwODPXpNlSWfqRpMVo+skJIxWPMy6Rx742rga6mNYfiA
wf7hKNLMtKsGYTmTV8+jMNgwB9FfI77VYN10XBIXjsHirpxXkiuoBi15vXzJ
IHL/FrNOU1LWgN/FQz1rdwzWIGhfZ5GjBhS/xNufcCX7b7HU0SxSA/nOTHZf
3mCwIicqKgIf1sA5IYfX6bYYrIKDSfSJghp4Z/liu5M8n6QTHmRGXaoFAbyE
EKMiBqvr1znnI1sLr6PEZnPI88/FXv6s441aSG4UnZKVxWDr1IWjdPVroafc
kk7kMgar/vfQg9u3FkKnpEPvcWOwpkaZhp+na8FkpMRsbIcN633rTFzcWi0M
xEqK+m2yYTOlwwYDtmvBnerhFwE8G5bA5KxmxVAHd3995YZZNqxDze1rEtJ1
cJHn+ePGNjZsEM8O+/fgOsgOsP2uFM+GLZ1X7Oy5Xg89E6EN1ZfZsMM3PbaC
Veqh+3fZ7S0hNuxufjWH+t162IsbHzt1ng0r8/aaaevjelCfi9NQ4WDDlmMu
7dZG1MPaHaYT5/+wYiuUOHmKVutBKZn2zGYNK/Z75qZdVFQDGNaxf3iqxIqt
f5Z4RpfQCCT+LTufKyzYnYsIc55VC5Qe1w87xXAMS7X3heXMhXZw+uJ73OXk
Eaz0P5NS7fxOaBO5j85/psJ2ekt1Nwv1wJ1/GnZutn9BlrmDKvxKD1zmu90U
dPcvfI4zldHH9oDnK5JyvsRf8MoPSd641wPacrwMYj8PQHZ01faURw8wjcAE
7+sD+CycePLZSA8wBBPVF132QWHNs4BOoRdc/O8UcyTswbkw/F42qReoWF+k
J3PuQrWpW3bRz14QfcveUUe5C0aSGN2q371At350fGd1BxKGZcs7qfpA6IZK
UUzZDpw6G+CwwdEHd9ejNKru7QBbjsBPKeiDZCRrPzR6G2gbHxFqQvvAgDrY
wpj/J6RH731sjeoDOqywxOSxn6D0OFitL64PNt8OVT/f/QGeDCU582l98P6l
1dGGth9wqEnzlLa8DySSzRjvvvoBv6dSl27N9kH7j7piUsMW4H/NTA+J90OM
pHURreMmlD4Orb8l3Q+eU1UZvKab4D6CZtbI9cNiw+vDu2qbwFGWaJWt3A83
Rz817JzbBAUH/QMXg36wEWv49DpqA+K3h0+f9+uH6/zr5k43SHBzq0vHdqYf
9qP85Rua8YAxdb26stgPPmVeJleS8TDdK8JlsN4PaTbiQr1v8GBfELhwY6cf
6DjWrd1E8ZBko2p7mnEATpxgD62PWYddYmNorfQACBl0Kba9XIP09ap2ppAB
iP7T2a2gsALWHzT4n0UOgKgCVSfKuwIySgtvm2IH4LNPr6kxxQq0JzKIuqQN
QKFM6+HxmmXY0tQNXSsfgAxdmxBudBnQsl3txoUBCC3KUdpTWIIxr8tTb64N
grnDgeZPywVIFW+6MoQOQkj3Ks/9WwvwYuphiLjSIEQtUaeNiy4AhYw7rNwZ
hNdHGQxv7szDxfXuFB2LQUg3yaco9pkHe80XlpdCB2Hb2TSzNHcOmM5mbSwu
DsKeyp+Y72yzgL3vNbWwNggXZxey43/NgG2occc8aRB+J7FZbrXNwDDlqazZ
34Owe/XUAWIzA5+W/Ywmjw3BazVaAY3v0yBW8KxrQGoIqNqLqkRNpuC2otiX
eu8hEFv1lsN1jcM7F4a4Ov8hiPpd6yWTOQ4FJcvva0OGoJd+kzT3bhzYBZLM
qmOHQOdkTkCz+DhMHmPhrMwdAunjFCbtMWPwYnjLr3BwCDwmjYZin49C0NMS
y+Tzw9Ao3dghJTMM69g8P0ahYXjR33UrgG0YVE5l5DhcGga6WfNXbCQyr5Yo
krrsMFy1M16ryBiCN+ftHfY0hqHc5MyO8ckhsJyReH/37TDc4Ha6Mkk9CPL3
CjJo+oeB9YvbmDRFP3wS+dxiMzIM1c6XBtzm+uCAOnltfHIYPsWNyuzU90F5
Uaho4Qr5XLUlN4v3fSDGYlNi+HcYQsszazWY+4CrQ7SpVGAEDPTlKS8J9sIu
9sviE7cR4HRzYwr81Qnf0/EfHb1HIHf9vfNCSyd40otov/cfAaFmPxa32E5g
6s2tS4scgbvGuZHvZDvhonH+p+msEdD4rrgZ49EB910LH+r0jkCEzCNT4pl2
KKko6wTeUTB7LKyFuLWA89nfXncujsJKcI2jzYMWwHpclTMUHgWKawYrE5da
oPNmRbbzlVEIoy4LN5trhsWRyvclqqPAS5mRd06lGdh3cVhh21HwaZV24D7b
BPYSjcUcDaMgfTtl1XyrHiyleJLDW0fhuvl/M5+66uGhtEvgse5R+HdVtpA9
px7kZKXMqMZG4dhjs7yv5vVApZDOTCKNQmKHoXP8WB2Eank/a+Icg3O6Zzb+
9dRCzkslHnvbMeAJAre9Nhwk2CYzbjiOAZ/z68p/oTgItj/Yfeo6BoK3Fhie
3sfBS6fiLmO/MUi541NltvgdZNzPv1X7NAYfLh4XXqD5Do2hNMN87WNAeyHC
M/lBJczkNwb28ZJzqcGp+Zx8b+8l0hAk/huHg9u/vmWxlUGtyA31KJFxMClN
qJJcKoXknKZjD2TGYR0junQ1sBTMMpuDJ9XHwcFIlBY/XgLLia2hK47jkEGz
IxboVwzEoM7Iv+Tcf3rlzFV5ugimO45tGw2MA+2w6yDbTiF0M9zWqR0dh6ks
y4i83kLI9+ti91oYh2i57sAsv0J46d0dTb83Dr8FmTxT9wtg+23vB8z5CWCk
Muz4Pv4V9p8NfhR0noCiTzeZcv58AR1pw3AxtwlQas2jU2/8ArmUy+8lvScg
69vzN+ohX8Ao9tcrJGQCpk7QxFvyf4G6Js6bWqkTwJx/131TKwd8eUy3ndon
AGPSXztf8xkww0T1Vs5JuLyqcC5lIgNepDgodJ2bBNNGfdnjBRnQ+OKfTP/5
SfA8+sO8xTsDHKhZ+SfFJuHtL45D/ksZMCYutbehMAmZad2XXvmmQ1Kgc8bJ
55Ow03vGfftGGgjLHzm0rJoE6QmrFO9fyVCQ8+W/0dpJiORj6lrrSwYpdk0t
1WbyfiafROJzk+H6Smy6cN8kFL/Wch43S4Y7wUJqm8uTgDfvuBqTkQS2Y7dj
37BNgfx7nOsft0TYVfhRt35yCj6VVMl+QxLhbW4MXv/sFHheuJ/4Yz8BvN1m
UFRgCqRcdKMonRMg5sKrJSp0CkRXwwyVXT5CxasoiaCnU8AaHWmbHBsH6MRV
g7/WU/CP0WnvnlEc1CtN+VjbT0G8m3iL1/k4aD95cUzTbQrMpca6lIpiYRJX
5nYiegrobXQ3lAY+AAXDROen2inQVbZZ8xaKAZVU3seFJ6fhhN/egptAJEjF
Ml1s5pqG8Z2PbBmHEcATsr84zjsNZkbrT88ORcCfN0NmNCLTEKGoqkrrFQF5
Wv5GD7DTcGW6Zy9lPhwwlFv3/j6Zhuwp7QeRBWFA8WuKnc16Gl60KVz9HBgG
BEL7wEW7aZAdKXQ98jgMmkfTtTRdp0EjJoQ3jTsM3hQ8vJ0WPg0LR7cH3PlC
Yca4Vkm1chpUi9EFpSPB0Hkvj9qoZhpiRu6kyTcHQblafL1t4zT8dPG63uAT
RJ479tiE7mlg1LeS1KILghvMAtc35qdBu+Mn+7vjgfClOlQymnEGmpkUbTUk
/cHxrDHfnMEMkNZqPpQP+4CZpvj9SdMZKOjfoonI8IE7XpQBI5YzcMOxLLfX
3gcurqVtdb2cAT61nDpndh8YLF6trfSegVecTWNWD71BXN3WOCp3BhTFFG9I
/PAELjfFyNDCGZiL9VJiaPGEI0XsLQGlM3D65MLD6wmeMH2yTMyjdgZul+hz
56p4QtDC/l+rwRmY/ReylJXqAavOPgkqBzPw5mQqn+cTd1i/L/wkhWIWlk3n
IvMV3MFkE0N1jnoWLp2QOSp81h3U+JeucNLPkn08DfyZbsDn75vIQv6vSjg7
n2HweQe9Op0v/l6YBaGoN4+OGruACOEe48jtWXAZZQsTcXGCch31mgDNWZiM
6Wl1RpxAEadgh2rPgmPl/FeDf46gF3JpIuPhLHj+uJEy7O0I/uJHv9ibz8J5
UWdZjxgHWLb/fovtzSw8ejSMzx6wB9uposOmt7PAeeGNf3qiPfy9kV305t0s
3A6UvMbzxB7YT8ZwznmR19+wt4s5tAPFCpv1ryGzoBKWo2xy2Q6S//IF3E6f
BW6dhS9uea9AxPI0Spk1CwVG4+vH3F5BWTfzj+LsWXCYMyln0HoF3UkHulxf
Z+GNTzyfzu5L+Cs/LIivmAVtu9UoauWXoPfev82vZxbM91v2GH9YAYZ5k77x
zyxoQjvs33kK/bgAX9W/s/B+/5ygKvNTiHhxga7nH7meNFZ54d4nwNauRz1O
Mwfzb2c4srTJ2Kfp7wbTHFi4BYTrmz4Glv34H2f450CazWOhIOYR9GZfeZVy
YQ7YMz++/mb8CMIe9m5cFJgDnuIzaTKCj4C5lJZ4WXQOwv3sHGtxFsD06uWK
iswc6K+MM5YSzOHYyo1JO7U5aFr6Va9iagad0bN6e7fnQPWp89TSZTMIUno7
9k5zDroMaM/sUJkBY2rBsP+9ObDJ/njBPNMUGAzP9CUZz0HQ1AOS2Q8ToB/Y
bOqwm4Mejn97N64bA03Nx6/8CXOQYuWfetZVD8avK92c+TQHenHVUfcv68HX
SsJsfMocyGqxFT9c1gW9UoSNLWsOthYkRwvu6kJh3ow9RdEceJ7qvOwi9RCM
Evhlp1rm4KCmUnuV8z5IcXb2x7bPQXX7+fCR8XtwNNb+uU7XHDxqenLT7uM9
KI5sSujon4OISHO3bO57wBj4+F/F1Bz8mHXRXRDRgfI3Xxpjfs7Bjcs1Y0KP
70LIL23Du7tzwHHu8TDv5btg/vpg5/jeHDSXCz3I3dci63f7P5/DOZALyDrn
EKEFj55s+NsdnQf04ZmzJc2awPZAUkPz3DxkvJe30Q+/A8+lqsaOqs3DkyZH
+nPaqlDbO5RbfnsefKrUQ8ToVeGE1abbY815YLf7k3is+ibUZFy42HRvHmSr
dERFRG4C5mSYrbvJPBSYBAzUsqpA1Z4F46/X8yA/yvg6mOIGsMS4TWc4zcMp
Pc6muDoleCQRX6jzdh4kp1d+3fNSAubnPQ+K3OfBwFt9e5heCcwnr6VbBc6D
ukpOcfsZRWCsYUIWk+fhwiXNGUoTeTDRF2SJTJsHIb0fOVhheSj5pbggnzkP
Nlp28+y/sGAs/sY/6cs81NZTuTqGYeFbysKQXuk8CFKepPkVCaDvXW7d1zEP
KTXGtQ5516GAZ0DevXsemGk+DCrcuw60OCL7pb556L5xRvjYoRx83eGrChqe
h7DtHP6gu3JA/Tj4yM25eXil6qi0RycLX1TNkqt356H4E52DwUcZkBLhRWFv
HiaGBE9W3ZeBaqbZiZr9eRiMSeAaZJOB3gHDk3UUC/DmPz06sWBp2DbUDWlg
WIC/SXe5NAKuAGqr6dLKvQC4qOOzdemS0KLDzKnKuwAqwl4nt59JgqZMd1kb
/wKw6/NoNl2WBLMDtZ/tAgvw7ny4HVonAb7vVZ51SSzA9Xr/kyYrl6E3Hn3Y
r7wA7SaXBFk1xEHX9e/OXdUFEBso1nflFod54++RA2oLoDn1t2Nu8hJsn5ft
GdRcAGGD71x95y7B6a9XlEf0FqBk66PtWqEomDWISE1aL8Ax2VyuahphwGfg
+wxeLYAPbf0zlW9CYO+XYzNltwAVCpSJpWZC4Htb4Mu00wIc1zu4hTQKQu4I
P9+c5wI8zFe++yVcAHbwnCzLMQtgbfzk7CmdixCVuNKSEEfeb9R3/yrDRZDU
KHbTTlgAd6cf1WjdBXhVdHujNmUB9P2WCkiXLwDRyb37Y+4CiNDfGos7ex6W
aJeDtOrJ+lkzvf53hg+8y4qU6JsW4OzTA+TmDC/wP3U7qG5ZABmLpQ6NNF4w
7Tz1QqRrAXJML/pGiPLCVISa2pHRBRgTUP+Zc4sHhs4VHsURF6ASE5xZdess
2Pe51tltLkCMJpeA1AoXYLxuvRH6uQD1NYKta95coLW8sPrh9wLYvB3//rfh
DHTlcrTaUi9C1A+EzUKTE5quubwXOL0IGQwKIxeTToIF/iY6c2YReHKD6rpu
nwTqxBO70dyL4HLygffbvxwgT/H1EfX5Rcg/jcHOGHMArnlOaVpsEbiX5fnt
xE9AibYKdZTSIhAPjcWVDtnAT63ch0tlETrtdnn1atnAQFGQPkN1ETaDRfxF
vdiASpLxeOmdRTCkd1GnYWSDO2w9HKMPFyE36/yqDD8rrPbeF+KyWoTKh3iG
3RUmqGptyU23WYQnFT6pRA8mCKm9eknUlvy9w1IM71kmkCrglEIdyec1XNIR
f3AcPEKnEROPRdh+LWrhO8YInHcstdKjF2HOU5dFhP0oEG+MDIjELsJYvveE
Zi091CI375fELwJN1dezrlb0YCkqpN+ctAh99dMHM+1H4NsxksVq9iLIJOpm
uITTgXrHayeR6kVgePDL+IMaDZxrWP5TXLsI3zcyesbpaOBH5QNXpIGsRyT3
qb16aojLueZ5p5W8/4Am83eEGpb9/wa+7F8Eqvej5zgQKnC76ZNUvLwIP8e9
WWlNKaDf6ImB+NoivO65aEEUpIDzr9VO5+IXwTLs/MGRlX9oewprZNrmIpzk
6aR8wvoPZd9PfB/xZxGG1PLce1//RT/nlVq9ZFoCm7+1Gztv/qB/GuKECCxL
oMKpP91w7g96e9xl5TFmCSbOqSwVNe+hP+gUTY1PLQGVZuv35ZN76HWTHp07
fEtQc0vklGrLL7SXbVVORHoJXF8c6kg82EH5BDt+Z11dgjfTz6NDj++gryG/
hF9uCcq2Vf5ONG6jnC/sL53BLkF1UfmmtPQ2atFEwc9wawl8fqxOZ/H/RH87
nmZYNVwCh7XhVr7/ttBbIQfN5iZLwCEq0SeG30QT02e8ZsyWICbwpRBFwSaq
0Jfxd/jxEhj+d+nBmtwmGiQksdX0agkwCbIBghUklHfq1miazxKw2qncwL3D
owH1cl/v+S3BLVbSI4ETePRHlsj7I4FLkH3thSNr3jpab8sk9TxsCfDRJ5RU
59ZQC/r+UImPS8CtljLSpLeKfpbUVakrWAK7iy3GI8FLKMvpW9x235bgIVr1
bvHaEvrmUHbnfCm5/stNtRdWFtFbbVxpflVL8KnWRkTqxiKKN5o91GhegrsT
0QRm5gVULOBx6fTEEgTfYB+yHJ5FY2weBodNL4E9f5bsXOQs+k9H1UJhbgmM
Fwotte/Oor3nhNkyl5fAyeCONH/6DPqqhGRltbUEKXmmBImKKXQ8fkbp3PYS
+J2GOLzCFKrg3numb3cJ6nZ1Tpl0T6JsakVtUgdL0KB4QcZifQItnn194YBu
GXg/+v2TkB5HuZotD/KOLoOGsFMhf9cY6vPlwYDxsWUQocz2S3k0ht53uObR
wLoMQRohJWIfR9FfjH8nA7iWwW+jx2rv5AgqK+MddVpiGaTuFXFOag+iw2an
pROllkGL93trAd0gaheSP8Ijswx6t5LH4yoH0NylUU6B68tw4kxISvyFAZQ7
SjRFWnkZGGc5dn4e6UeptobztPWWYXvHkPfCbg/6ieuFxojBMsg3ov78b3tQ
uZuUW3rGy1Dgzpc7S9mD2icJS5lZLMP9d4r2buzd6PJt98qX1stgQXFmP/d2
J9qRI9gS7LkMAo/b//1gaEOfDFc/YfVZhusJBBa57FaUhkqHIdp3GarPu7Pi
b7aiqO672wlBy3DlX7OHTVALWnBkYCAnZhnOfBUr9OFvRqMsXGZbcpahXYlV
fie4ARUPY/VUy1uGaIxxUTS2Ae2qyuTv+boMzqfqZB5s16N0mD7L4eJlYJ+l
yRc1rked6i4QF6uXgdtX1f27fB1qwN2zRzmwDIX6eL4H1tUo02nbkqqhZeCf
zUQY13FoHebEq9ejy4AINaZOP8ahF4/qr65OLYN4hHBg/dPv6MbP5eGe1WVA
T1MMJ/tUoqkk/wh//DIcZZ5kfslaieqsidxRJC2D3KikOE9SBVo+bdtU+nMZ
qI8FztPWlqOebYffEg+X4bdcGx3vyTJUqjHF5gHlCrz4hLkjXliKrlQrCbPS
rIDVbl/fqnopql4ckOp9dAUKFkS85fxL0BNJHOHP2Vfg6Js2tjL2YvSzvZj1
NaEViIiXmO54VYjq2fQJ/hRZAV5OhukI/kL0+DP7pdxLKxBzSdogY7gAtTWu
NOC5sgK4AUMkFluAyt1SVjuCXYFgDH2RtnI+SlJao6tTWIFunFa9Oy4PTYag
eucbK+DG+fvRrnQeSnOl/xrp1gpIUQVbxYjnot3njASG7q0ASeCecyGSg7pz
Ui6GPFyBiyvlJIHmbFTyRHrSTf0V+FI6gknTzEZjGdY5vpusgG0qzwm3559R
s53XtGnPV0BMPtdmrywT3WkPnn/psQL9qLLrq4w0dJJx6MmBF1mPGo9MF800
tF6da8P3/Qq0/Bi7vnCQioZ15+x/ClyBTTXmyDzdVFSov4W9K3oF3tnmxWXz
paAsGOaPD2NXYNHJ5wXlaDL6S/s+72I8md8v1dqgkGS0cWhRdD9pBWQuHLo/
OExCjcYoVQRzyH48f1x6cjIRVeJU7SrOXQF9B+1BKt1EVFg/TBv7dQWwN35c
ZhpNQH9Pcps8KF4BHn1hXYvJj2jErNwbn+oVeG7jOyzyNw5tXnn9Za5/Baq0
ztZ6xcaguQK4y1ZDKzDnNn63UzIGjXxKU/57ZAVWHdgjcb3RqAk+opF5agVq
VDfK3Zij0T+kr1PIygp81e+c70mKRGcv/TJvW1uBY7evXslRiURbXqLrOoQV
GOry5t7fjECjfnTuPt9agfwPUzZrKhHopd015vj9FWg/fUH1IV04yiFzOebC
4Qps+Wx9V6kIQw8cnbgKKVYh72GliIdVGNq+RyfYSrsKajaltG+/haIWf/kV
dpnJ+CFWLtEjGI2lMbK/e34VfI0On2kF+KOH5iev9F1chYjaUiHhk/6oRUPv
jobgKhyrFz23meGHinsqOt4WW4V7+r16Z9t80dZ/As43r66C8n/afhIX3qNi
xvOyLbKrkFlzyjKq1geNqv64fwNZBeQRGy7T0Ac1cWVyVVRYBdwap2x9gjf6
689PN1R9Ff5GdxedFvNCDfTysLg7q2DJykGhPOyJ1ldYUl7XWoUuw7fXN9w8
0RCnMc9r91dhW7zg26cRD/TibrWPlMkqYOQffez54I7e3/IPFLIn76f3n6dc
ngv6XVNRPduBXO+na4HD/7mgfAUHxwTerMLAqcZMXPpblGRtE3Lh3SpYlHyI
Uc5wRn0IOuE8fqsQGLZspFzrhK6rMd1NCliFSU6OxWvqTqjmlxY27uBV4KFW
PHtp3BHleiYbdSZiFbixsjRUBw5o8cq5DxwJq3ArtnDN/P5rlFNl7EH0p1UY
7x2zDdiyR90zI06xp6yCQmv0gl2IPar+iDaeNXMVIoeZK+267NDF+fWEYwWr
sLGN7j80tkUx0yWpVI2r4K9EH5YaZ4OGHHN1LWtehccBch/O7FijDHJKD1+0
rQKDsxypXtsapYrtPz7cvQqPjhF+3uW0Qn9obThlj62C2/HZqMP2Z6i1e6m2
0eQqmJsInlJAn6Hr+a5imJlVaBHGvlcoforOMR5bdFlcBYnT16TkPz9Be5sE
NDQ3VqHnS/fiSr4lqr69IUj7YxV+Vs1KFEpboq18ZTSV26uQKn4ysr/2EVrj
dqOS/88q8BaUWv2bsEDzr5ld+EWzBtg+V7MaEXM0KO/jfiLnGhAtOwo4L5mg
9JNmw3fPrsGa/F6zz1dj1JtBqPAIzxowZ+xXatMYo28fl1u+urAGHiTvOb5y
Q/QZ71CfkvgaLHJHjDUp66PLGgm5exJr8K0Wk3ytSA81e2fum39lDYSGvAZS
efRQ3Ymt66fk1oDGotUZS6eL3oxm+oy/sQafHAxaf/64jzY2DHkm31yDGrOg
m73291HsjwTDe2prcAZLx3B17x4qoyGMqdEk87s/0+1/9B75/3HzXYT+GjR8
+GM5pKyN0rp66Fx7tQa8zEXB6kKaaPEWYa/Gbg2uh9ZKvfyigVpYPkxSdliD
jVLbj2G0GmijxqV17bdrMPj1b6p1w23Um2/KzdpnDQposbUz5mqo1IebF3Z8
18D7ka38jYFb6CJjcfvbgDWoFLMWiLxxC1XaCTjhH7oG1IVeERoSqihN69Uv
aXFrUNwVl20nrIIWX0/XFEpYgyEPx3+MBcqoRSHzbsGnNbjMKdB8QkYZbYxf
xlanrUEbqWfqpvoN1Msqang0bw2q5b+XLYQrolSYTUqm+jUQO+ixG3fHokW+
+llRjWugOyNiaPIfFjU7aFY/07IGeJ4fDIpJgNYvJX4Q6FwDqusFlmS6qGe5
mqji8BrgFAgHBu1yqIRoWX/b6Brcof15UUlCDp1P4XPSnCDrP2d0RiRRFlUI
3Ks3nF2DB9W/G8+6XEMpjbIeOq2vgcSQ1xFjAxm0oJ/t8JCwBlfGmI10J6RR
E5V3aT4ba2AseMx82EAarRW/R4rYJvOdP64a/vgK6k5N7Z13uAbx7P4veuMl
UYpso6/zbOtwlld2NvuFONpMGLFOOrEOVc4i4g/oxdEgcS0xg1ProH/Dpk3i
9iX0ZLli3tDZdcixSy1K6BdFxVoEvrQKrIP2786vWczC6DZD6jMf4XWYf0KS
vfJUCK28c0ZIQWwd4m4z0Ko1C6I3ho9nV0muw9vpknPhgQKowdKPzHx0HVZo
6Xja4SL5vv/C8rn8OmhEOzPqlFxAV18sXRBQWodHv8U0NkQvoHbbI+kpquvw
9CWXpanAeTSAGpcapUM+T049OxrLh2qqSJtpPViHZmzmyloXL8oR+JWXSW8d
7LP8hLwNedFUttRkX+N12F7nF+zy5kEreH0/OT9bhxeUnrQC82fRd48ojGSs
1uE0/3yc+fmzqFL2m7PbNutwZVQi9vdTLrRX/EWC1et1EG4Er8/UZ9BV0Io3
cV8H90DuKIknp9B8r3bds17rwEzKXjlsP4natyieHvdZB/Te1wxmiZPovzvS
sdqB67D6rs4dx8CBchidiVGOWYe2rvPqbQsYdDIl6h513DoM/tfUoW+KQVOX
jp+o/bgOLPyHG8KLbKioFUXUtZR16OT46Li/wYoquSyFi+Suw/6d0S/HhVlQ
hlojrbX8dUggIhkDHsxoL/UoS2bhOugm+qenFDKh+oHtoefK1uHmpe0A/3PH
Udv4r8Fs9etgU6/9YlCGAS07iPetb1yHc/3pLj7BR9EDo/ceti3r4FEQei5x
iR715Td83d+5DrfK/O4rph5BE3IZDCNG1sGs9J2w3S1adI5p977C+DrYvrn+
NQRHg158Naf5Y3IdGlkkHvdL0qAFV8qV7s6vQ69sZrGxEDXaVP1IhI24DsYM
5YtcQIky8GpdrN9Yhwc8yxKP2ylQTa/rPLY/1qFUtNzA3oACHVfBsPf/WofM
liKjHcp/CKm3dj+cCg+Mf9VSRGf2EUnJ3B15WjzMsf4wEubdR5yiP2xsHcHD
ckx4z47lH4Raz3pB6zgepL46H2Gl3UNOLZzpYD2Fh7q3iTe17XYRwxtHmuo4
8UCq+C26M7iDpGb9qH51Fg9aYowVyTd2EJEXbUV9fHgItLto3ca9jcjvOMSH
i+LhrFieoTbtD+T9A7MoeXE81Gye1KT220I6K26HbEngIX3hC+Uz5i3k/rvz
nlpX8fCf7CFfBf8m8uxI/1NWRTy8HWdtzJ4lIF+f4szrbuBhda8hNYWdgGx3
fDZ8dRMP6xq//Sy18YhbmJtW3208FHOX5AR0ryFRp0WvhT/EQ97Ut4KM4yvI
2NtTkvL6ePirvvV79Okywj1NLbplSK7/Qja8bl1CPqeO82iZ4yHjn964W+Ii
ghP2o2e1xgP2W+nhpsk8Ij14siviJR4eTPS2147NIQUuWeHsduT3y1w0qNkc
ktrVzHnKiVw/dkAnwmMW8bOhFT3niQf1ANz1lMgphPJU9FayNx5SFluLIpon
Eefa86V8vnjQsDqjy8wyiVixKsHFIDy0PyqXOhE5jtz95qklGoOHVDrkF6Z1
BOnQZ+P4GouHM9O4eoXzI4gSTeq4+Ec8YPyuJ3QHDyPVuZeTihLxEENBu+L/
cwiRuVdnLpWMB58vCcqXZIaQgr+aAqWpeFDya8cc5A4iQpmzBJkMst6uc7uK
lwYRrl//XsvlkM+/y5qazDKAxCSFyuJy8bCoHsa46daPMN889w/9iodDQ1mK
0j99iN9mfkNtIR6yFK3GSqP6EKo41E+hmJwXOk6D/DN9yIqsa7xqNR5wXRm8
QlHdiMnCMeOOWjy8+tO5/OFZFzIemMB/uwEPmaQYxcLhTkRbSmS1uwkPru17
JsuLHUjnZFWuZis5r4Zsrd+4OxBlH7VX/e14cO+RT8lybUdqRCeu6HThgaeP
hZI1rw25Ovzsz1APmY91OK8uvhUpeven+kE/HgrFWX6xIq2I8H8BXmODeHhu
69TM59OCpPecvqk/godfE1/0fBhbEG6n7GNTY3hIcrKzP6rZjHzgudZnNIkH
X/XjnInxTQhLW2v07DQeOuKfO7szNyEBrx7qmc3hQWzDWdJAqRGh5lzlXlzA
wzsmtRZ12kbEpd5x4dEyHnatM+O0pBqQnWdHPq+skvPoED12d78escZ8ePEU
j4cn0fS6r6XqEVOL0p0Xm3j4ISddbKNZhyjT7Ryx/4OH2dzv/Uu11Uhtvnfn
zgEeeu0KP/91wiHXHrCHO/7Dw4W02pcKQjik6F/avT1KAsSJffz8X1UVIvJZ
kvMtDQFu3cJkVJRUIRmaDdMHdAQ4fTLVtu9pJcK9dzft3VEChPYohSySKpDY
lPnHFMcIkPP3Pfb6uQqE9ZatiCcTARLSMzLprpcjyXXMjLKsBOis6U6bf1iG
iF/LW9vCEKDfxlbxd38pUlNwqzWbgwAdxd9OvmIoRe4IrGaanibAlSPcwYoa
JchUko/PaS4CoEeSbBh/FCMvTvJb9HETwE/G6XsrQzGyH1Kr4M9LAG5MhY48
qQgJoDPilT9PgPxHYgpSl78hp9/t//t9kQAx198OjRIKkc87sdMFggRwXFrQ
nf1TiFy1ksY9ESEAqezf21tBhUjL4sBHnksEEKI9WlsZU4DcN3jlPHqZALsR
lLV1wgXI8gCTbpgUAfYP+cf+28lDXqvlytyUIUBGcafVhlY+QtOgykEhS/7e
ZTdx/XseEim7sl12nQDPrIqTBR/lInxF3gM2QIBzxmUbuw5fkEJBvqL/FAgQ
fJ3pydW1HASbUhM2o0SAr9pj8QYp2UjPKUObDyoECHAwqJINz0aMwv7c1rhF
ALrM3coFwc8I6UisyJHbBEhzNWUyCM1CXN2uMNZoEOBdJtWpNd9M5Niv/jWH
uwTIRplweg8zkQTrl61i9wiweEUn7b5SOiK8fDxr+QEBTLyQKZxfGlJp+MXn
kx4BFO75np1mzEBUh25a3Dck889fbHualI6Mqi8rMJkQQOrRxSe4tVTkcaMX
b7MZAfg0lUePF6cgu3K8FO8eESA5POy9eF8K4vOtevrKEwKIWqt8UC1KQdiF
DXDEZwQo8yi1mx1PQtJT9z5mWBGg3OKo9FPrZESS84Oz4UsCtAu/FXLCJSP1
4VK6J+wIwHjV+eRW6yfk7tF+ma7XBCiV1nk/rpiIzLnbcPg4EWDt/XEdzvRE
5OXvYzvX3xLg/WT6T1azROSfTc7AtisBbnzmUNi8HYeErKgU5boT4CyymWhp
E4ecNV4Ks/AigFj0+PPGhngkd9jThus9AfT9um5daIlD5O7w3Bn0I8D55LMn
7zvGIu1NOJGgQHL+QcftAhKH6CH6jEoh5HqP0zPHhcUia8W/1/bDCOA0okDd
FBuDOInEtH6LJMDdjbYcLcsYhD5dMut5DAGITVGXNlNikQ9n+nz44whwfaj4
AU1WDHIx0tpi4iMBDnxDTS2MY5AShmOKkZ8IUMt9jar24gdEyTObVy2F7Add
cFlAdBQysKdMQZ1O9mtQZVmfJgYxe7U4XZlJgEwxX+oGJBrZWvXA2WaT86Be
eUBREYm4m5xLEMolwD+BAAb+wgiEZfS783w+WV9lH/HUO5FIkoaebnwhAeo+
vRza9wtDxFp+ydwtJoAcz0M71YxQpBqN5mAoI0A0Md+nZzQcuV0qsVNXQYBH
wjGVfKnhyKRo78Cb7wR4+xr3eTI6DEnCs7pS1xCg8Bz9LYNP4YhZtvbF4DoC
iGs+cZVqC0EuPo7u4WgkgIZQfddkXhiydn7EKbmZAKwmbs+Zp/yR3PlTfEJt
BHjK3c1ywjYYeZms1/GtgwB7i+r2nPeCEUmjBHukmwDLeV5HSUzhyO6Z6bMt
vWT/tQIcB3tCkcqxcy2aAwSYqbWe+vk7EHH9YPpyfIgAEew+jWHYUAR7L+20
xSgBzlB1elUSgxAazFI9cZys98f1J/m7YUhL78UXjlPk/UIY7iQcDUYCQp6c
oJwl851So59NCUHuqOdUB8wTIGXGiiPfOhBhZSA8Zl8iz6P2P3fqHwQhgy2i
rJ9WyHkuCst4/CgIifWxqfxvnQBWNHcetxZ4I/qKheaFBAJ40Wl8/MsdiHBT
/jwmt0Hu93AXVC3RH5mvlipt3CLAvCKr0e63ACTDxcH4zjYBKluTo/f+C0Oe
yJbTj+4SQFOxBOVx80VEfu8Vmu6R5+MfHnG/76HIRomcPn6fAMhxx7KLpe+R
IjtXmteHBBg9NJEvzwpEHC7X5B1SEMHklPp2JN4HubZB8cCPmgjP3mQ6LtqG
Ige5ChRsdET4kzDrInfVFal95p39kZ4ISM3Veoj0QrwEmu9eYCTCNs6KepTD
H1FePnKQf5wI2pJll46+DESOpqtmXGUhQlH47MQX7RCk0zTwTj0bEZ44WHsS
6SOQsHNdv9ROECFAst+z7kQIoj3FlDJ0kgiia+tm79r9EI6PmreMOYnwyngW
OXHZGxl/GPFzlYsIE/9drSF9DUUSOQYTbM8RYee23rWfA/6IyeAJ5QNeIvTQ
fuR5Nh6InI94sOFznggt1+p3hd57IysacbHM/xHBo4jCzpQpEMk5PiEfJ0iE
rsDnvFIyfoh1BxeeT4QImgvXbnDGhSCX/Y2icsWIoMBiR8l5PQzZVk5GpC8T
od59vnr3wB8pp5lfrpEkgmJev7KMVijytp4/TFWaCPlHOrrUg4MR1P3RtYGr
RFj7wnpuGwlGqNCseQM5IqzSJGJ9U/2Rpv3VwGWECFb3Ba/9FvVG/CqErrzE
EsHoOd3Sm/MhiLrji+k9BSJ8eNZX3LDrjzBfyff1ukEEX09eviHUF+n/sSF+
/CYRxguG5os5fZGYgsvjMbeIcKzQ801ITgCia23nxXObjE0FrXwu+iBcIiUi
ORpEsHzaLvL+ZRAyu7Y7JHmXCPc+bBBGQgORtKyrbjgdIhiEmwFLkS9i+chZ
QOUBEeaTAv1GOQMRIf7vfb26RHhUFjyWrPsaIc7+ddYzIELVn7dOVg2eSMEn
OL9oRITzHoc/bXv9kJ/OP4+YmhIhA5Oo3FwUgkg/yMJPmRNBbIi55L64N+Ik
qd+jZ0mEZPrHySck/JAqZuZvI0+IwE/VIC+3GIAc4utjdJ4ToTBLOGAY74Vg
Wx2c+6yIIJuVdNrb2QfxShcyuvOSnEd+v81UbX+k2X1avsOWCB9XdjWa7MMR
esOICzdfEyHsG3VUoIUHonZN+WiTIxH++87Ekv0iAAk58Ycg70wEdbot9om/
nkjvVl5vtQsReJKfMQ8M+iKYbtNiOTciSGns0y7yeSD3c07ElnsQwc7lNizw
eiKx79veXvEmQuyPC5IdXe+RCTNX46L3RAh0Ue28OqePcMNlxUv+RAgpyWOb
Nw9DTM4sXcwNJMIWUUz/yY4PkvYrlkEwhOwvIjOuGuROvl+okzLCiGAh2qdw
vigQESig6OeLJAKn+5vDsU9OyPOg4pKkaCLQhBYXzQ65I/lPnsRxxZLzHxJU
ty4ZgmwqcbnGxRMhqThHOP+ZDyLJ22vCkUiEF+c8LcWyfBCHv15KkUlkfbhP
8Fmrv0bKx2QEWFKJcCLPQFA4yALZL8EzBqcTgZmGVZH2vTOCRiRtHM0ignF/
blKcYSDibq098D6bCLOyh0sik95Iw60jZdS55H7594tVYcUcofuvKt49nwhx
pt+aGyucEFVqm3d/C8j8Ek+o0zc7IEEzfGbO34iwsW25yfrpDdJdNXzjVwl5
/tg79XUoPUdYYwME7cuJUPp7jKLJ6SWiY48e36okQoUO5WVDghcSo/lj0wpH
BNUDV2/n58+RMZHMwfUaImwSrUBR2APhOqpX/rieCMX3R2MOCW8R46XjCYuN
RIjS91n6o/4eSa2rczNtIQLRsEvl6ccAZDHxtfl0Gzk/rqmDWnX2yH/Ogir6
nURIp6V3cjmwRp7dnxIa7SaCdMySlkXYKyRXIpzpXh+5vlPItmTGC2SD6caP
vgGyvkOuyzpGjogE/vfQnWEipPUG7lTZeyCvW3IrOkaJgEt985/RgTdSnmaS
eHOCCCwbXB7XzJyRP27sHk1TRLjb95KBasAchxi0WijMEmFMgu7if2/1EPer
Ljdr5onwmIPSgfapKa6eXVzk+hK5f9efKvBuaONotxaYK1bI8+DxS+aijjfI
za4PP6+sE6Hcqlf0Xr0jLiBbbaSIQIS5gvGMCA8fpMvnX+WlDXI/Ln48km+l
grCYffuUu0UEQtU6JzeNDe4u+thTcJsITlt7wsYmL3HRnGcsM3eJoMyOFhUi
usjobrcq/x4RhrpKKHETJjjOAU/R5H0iLEazJbZpvMIZfpVmPXtI9uOTJTXF
HQukVO83Uy8FCajNc2tM3cxxTHSVx7yoSXCVLuTpCzFh3OPCtwzSdCRwZ8nc
lrdSQmoNEPo1ehKIjDxJMBCxRE7R/6NNYCTBgfotwVdZ5sirb7XUGkwk6HfG
P8Sfe4VrN/KkpGIlwclEm7G7NLY4Pgalf8UYEuQlnB94HuSOcy6h/fuYgwRv
7wSfeTGiixswafnDeZoEE+eWUD5tZ0TkmP/vrjMkYGFpDavQdcR5l93adecm
gcCXGsyLfHfcpNmxbUleEpjyFcSbRr7HXWHq3lrmJ8Gb9A9X/t7wxYVUhG7E
XSTBTQ6pzHKeMNyyhRZRXZAE9+kxn0U1vHEoCwb/T5gEtAwSLU8EPXEfqgZX
i8RIcJb2cbddyEPcpmXM8qPLJFhI0k2VlLbH3WR7uHhKigRXfm1/UCi0xyXj
Ts93SJPAZXDXvFzOBbf3ZGLm3TUSfKzUYrh5KRB3lz1x6vJ1Ejwz/3q/4l04
LqfGaGIRJcHorD7y0jIER/WcZ+yDPAkixjz5GnlscPoc88O3lEjwvXFcnVnZ
G1dclzb4V5kE3EKNcrwckbhjVo/6C1RJ4Fs1lBkhH4OzOPVfr7k6CUSzAvl/
E9/hcA2rXRwaJJAMe0mVyhSG47DJ6WjTIuv/yFqC5fEDxJrzRZuLDgnu6JZ9
4eBIxDU3ibZcekAC1/2LojeU3HHnXm00zuuS/b7gHNU4Z4Vz4iqsjzYgAbu7
c3BqXASut8W29qYxCcx/Lz96OBWBE7CTqt43JUEww3jNiGcYzoN7tyrfggQh
344qpRtF4MbbyipMH5Og9OUZ37/ZkTiJ12/K2J+R63k9p90x4IsL4JEraXlB
AgO2gqARt0TcQsdBkbMNCbIesw8+D4/HXXesLhC1JcF54Z6rkQyuuCg+9/xZ
exIcWTo9anAtGUfsks+NdCTBi8koUnlgGE75DXWOsjMJ/m3X8jlRR+I+nW/K
2nMhQQKfA6PQaDLuV8/7jFw3EjDsDTMvrvrhNN/eTDP2JIH25/1X2R/icZ8v
MqSw+ZCA9cEzzstyETjK/o5PTb4kUDUUNBDO/4TTcw1OcAogwXbxmtj87VRc
kYBGvHAwCV7ejGalUQ7FMQ6yxE6HkvNTzpJEsxqOs3Drjw6PIIGhM6b1yuco
3HehqEilaBJU6u9flXOIwrEP3wv/9YEEtp7PXlCvpeGsPE6G5sST9c20zP7o
kYxrFhkLMkwkQXggV2/Yxxgc92h8AEsyCZ5eoEnw+5qOc/Ay8GtIJUGOBc/P
oOREXI8Y93uHDBJk0IyX25hl4gTGZ7wEP5PrzXJdMb8UinP3SfGYzCHnx/Zs
2u3mTNxxxyO3TPPI/RJfXV9gkIqLf2LFtvyVBBzn2T7zKqXjLuoNjD8rIvuj
cz3xF2Uq7pvatbSNYhJQ+LL82QzKwmGRpOf2ZSR41SE11H0tHNcpRiu1V0GC
zbS4vkPGRJwuz/MD1+9k/+v4KoVSUnHLrH2NVDUkGPnNJd+/H4ezpZYJ9q0j
+yfFtTvTHIX7t51w71gjCbIJ7gOzQT64oGUq7vBmEuhkGgo4P43FnRp9snyi
jTwPKHK4HIMzcRlt3fnxHSQ44RgfeicoAydRJeV4rpsEejSyouFln3DVufGQ
3kvm8++1hH1uCk7tEwW94AC53sOzjSOfM3GjoZa9eUMk2LDjjYxSyMJZeHTG
SoySwOuMt1K/TiJuy1bCtGycBA3aKmy1xsm4dxaxgtenSOB8WlJSezgVx3D/
cKt2hpzPb03+E4dJuA8qFpU35kmQdDnPLrEtGnf+Wrtn+yIJmMWu/a/BMg2n
Ao/CuLE8qDBJ1HRD9qSSpZL+HYRsiYZIFKIMEWMy3ULFVFcMkiVpka1Slq5r
v39cS9aeapJCNKNmVLjnqiRcmvv9fHjPc37nfV+f4pkcWq5v6LhnlA+BewJm
6ph5lDAyl/V+EPFnGS0zYJxPu+SEg57jfHCMrjCLmr1K9333Kxji84HzquzH
bGYBfStoP+Y/yYcesw23FksV0vCR9aajn/nw7KG8TJRPLhU+vzIf8lXEH7v8
nVdRKk1om2kTfOPDruXbhteG5FPl6kPJJ+b40Kl9Jbi+4SbNv9u2b3aeD67W
SXa3jsZRw2vr1M6IIWycnvfw0cil3MTLoxISCMpGjO7FXTepfcx0GUsKIarR
ykC5O572hfmclJNBWDaV8MbqdTr1922xSFuEUJM9pS3RxqLoulZWRQ6hV7Ne
gdF3mUbvTHmWo4DwsXneih15msqaTmWrK4rmDYbbXwviaKbOAf9CJYRBLYM4
e/kMqrGCp6+vgqASI1e7UzKVlsnqfi5diSDRqrgyck8K3T6XVG/MQNC/d362
cMlV2jH+Kb5GFcHXaVXYkdDj1H3Y04msQZBxM5GVfXqajjxpUGrWRDiXe6Bn
V2wYOc7TGrLVQdiR+oNa8XwGFbIvFXbrIUxpKn+ssv+TsgoEoS7rEB49nosN
WJNFlmfu2/xiPcLZUybG23/JoXkXuQv7DRFUvbXFJ8aSyAamRvuwEYLPVj/m
F6GoLwezUg6bIrDX/Q3dPpeonTff4/0WBNbF7KVt+2NI72439dBtIn33xH1Y
zFjiB3XvJ7cjvBCOpCUGXSZ8Q/WHUSDSp9l12z8znpzSuMCcs0QYkmDI+Zm4
Emmlccuz1gimxkMvC5ZfIOlSexdJ7ULY+fPJ7loJFlGfrv4rwR5hIvg6K7Q0
m5S8X50j74Sw/f5Sm3Kj24R147zvsDNCXcRFsSCLPBKwd0K71BWBs7/c0X4+
n1hIu4/FuCEUHg4L+xR2gzC43PLdHgh3zOpqGWlp5Fu4VtRqL4R8p8YW1ZZc
8lw7yXzCG0HT+mt99kAeKR34LEYPIZg3XWrUPH2fXEo58CjJH+HpeuvSDlpC
jli3JHoHIoRoeC32GuUQqxl9V4MgFOVptEfYFjZRLU1TFgYjFFlKo65tKZnx
nx3sDkXQUU0pK75SQXpV/G/nhCNs8LXcpihWQ8p7Oo+ERCLkmamsTHdik6Rz
mwzMoxDK+7dpx0rVkaDN2ZOLmAh2K/o2DatWEesxseqB0whLHeK9lyRUErXc
oOjiWASYav7WYsIms25PLU+dQ+iY9T2RXF1F+mS3Sjv8gXDd6cdRUzs2YTfc
6ll5EaH9tzHnyU4uSY6UTvuQgIC5Ao2epAYSrHfcozYJ4czAtJSwmxKboT5G
QgqC9JHqMWe7RqKetmPEMw3BoVnjoJ/uQyK0Lbqjl4FgNp741U+XR17NyYV+
y0IIanNy9D/JJZzyE0Yd1xB0Bw93uT7gktTAoemsG6L/Uo3tjzvIIyE/2dCj
uQiXJRjywuQmYvvkQdyWfAR3W967zfKNROMPJTvpIoTEOG+tdS+5ZGFrtNzL
uwglr6eajkk/Iv0Tb/8qui+6T5kx06iJRzh5jlejShE8d1UKrqm2kVSPCh/b
hyJeagOiV9xpJceWrNJU5iAo+P3nGjHaTOx4ce//rUKwHWm1mD7bTLSiPpZU
1iIU7xezjpTlke/6eyPPcxFSJ50zvkAzGXhTu9W9EaHfrg8+u3SQqvQ1C1rN
CG7pS+c2qraSNPuEli+tCLxZgYtZQQsJWxCwWtsRmJ2POwLFm4hDhadzehfC
vY7dERMZPKId1LQs4DHCKhKzykymmYit1us3forQoHjgKtemlbx+lnJT4rnI
3zh+7xwOUlJzYfrw8xcIcQreVlaeLSTd/NDa/FcIzgz/RTPSjSRc8Ij/6yCC
yW9H3Z5MtBHHwg0cq2HRPjMxksX/PiA6XplMxX8QTvzj7Of+qYqIKyzsGHkr
4kNttW6tUhMZbgmUZP+H4HJ+30j9GQ6pO/m489wHhF+sQsxq5OtI5nrTFNdx
hPi7GTZl9SUkYuS62xpE2KzTWMG4kUmcsiR/mpxEkLc0+30H50+i53TsTdMX
hHdrn2BX/zUi+UNvQeo0QvUbcd++FxH070rzYN9ZBO+a6QebaArlBudvNJxH
SLaQGbZ0yaJZaounvn9HCLfcIl8mVkn/BzUwGJ4=
         "]]}, Annotation[#, "Charting`Private`Tag$24341#1"]& ], 
      TagBox[{
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVl3c8Vf8fx4lKknVRJGWGCFGSe877ZmVmJ2Qk9E1KVinJiszIzoisJCt7
71FG2Xuvey/32pRIv/v76zyej3M+7/F6vz/n8/7wWjno2RyioqLKp6Gi+v9T
3YbQU080RNE3jzvX8taAVpHryRSnDEj4feKI2lwD6eS4xCJOJdBl0M00v7oO
Gl1DhUmcBuDF9W/VpnEdjKx/1URwWsPVuOvV/MMbMCHxRjGU0wWkjhE1Io5t
Qwq7tn8Q52swLfxdQ/dqF7zpis4HckbBa/5bl/6g1DjRG+8CCp9EQYXG8PBP
G2pcr58DcawtCp6zPLuQFEKNE6AR+3LxaTT8MS//zT1KjWv9m36xvzcG3vXO
6aa7HMIxbMZcPhvyHhrqbAUffaLBxU28UCw5+ADXht3i56mO4K5zG6dPGibD
fqjJ2IDgEdySiexhutxkMLBSlvmqfgTHQ3p+L1c8BT5PP/wiEHUE5/DgiiDV
eArMN39S2hI8imO1zs/KuJoKPnldyIISHe628cf8tfV08B1Z1cp7RI9bHTOg
T+XKgLxAM7e/IfQ4f3M6G33FDIj50I+TzKHHFd1z4CqNyoDHObm1sESPY3yM
+LnLZsK3n/UsVDbHcS0+IyZHPD7BhbzrmAEDBtylHJYj3HTZAM9m9Wy5GXHf
L7ZYdklmw4dbn842yDLiLL+6Vb0yzoY/75yu7Oox4kJLp57MZGdDZKlKElUg
I45QnzuWqfUFykN2Sfc3GXEfBtS+SkXmQLvcotqzBibc8X/ed27w5IO/2qjf
QAozLu6BkbmYSj7E6deM7H1hxgn0i1myPM6HWKmE10xlzDj089C9sZp8UD5W
//WgkxlX8TmmpOxiATD+5bm694sZR9YnVWv8KAB3jfYL1uosOJljQwg6WwA3
7abZTA1YcC9qG2oldwrAtqi4AjVnwR0Via1n5/kKUq61JzsdWXC8B9ebpx59
ha2/3cYHsSw4w6zYDucThRD6tEq3apoFl2jmo2nLWwgkYlbXCyILbpb1Udft
y4VQ/Es5TWiDBefgofATMSuEnHY/dUUaVlygHrn3aG4hML96cSZcgBVXs68w
mqBZBFiVaX7Xe6w42kJx07eWRfCv3iHrtx0rTv3+qXEvlyI40XHR5D8nVtxQ
D3nCJrEI9nOZrjN4s+LWM+NmJEhFYM+9dMw2iRUnqLtCaAouBvGUw5F3e1lx
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
         "]]}, Annotation[#, "Charting`Private`Tag$24341#1"]& ]}, {{{}, {
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -1.5126669966700351`*^-12}], 
             
             Offset[{2.778637388004051, 1.1310058647001018`}, {
              1.12, -1.5126669966700351`*^-12}], 
             Offset[{0, 0}, {1.178582044750134, 0.7716407313865994}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.178582044750134, 
              0.7716407313865994}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044750134, 
              0.7716407313865994}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044750134, 
              0.7716407313865994}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -1.5126669966700351`*^-12}], 
             
             Offset[{2.778637388004051, 1.1310058647001018`}, {
              1.12, -1.5126669966700351`*^-12}], 
             Offset[{0, 0}, {1.178582044750134, 0.7716407313865994}], 
             Offset[{5., 1.1102230246251565`*^-15}, {1.178582044750134, 
              0.7716407313865994}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044750134, 
              0.7716407313865994}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044750134, 
              0.7716407313865994}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{21., 6.500000000000004}, {1.178582044750134, 
              0.7716407313865994}], 
             
             Offset[{21., -6.499999999999996}, {1.178582044750134, 
              0.7716407313865994}], 
             
             Offset[{10.000000000000002`, -6.499999999999997}, {
              1.178582044750134, 0.7716407313865994}], 
             
             Offset[{9.999999999999998, 6.500000000000003}, {
              1.178582044750134, 0.7716407313865994}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"0\"", BoxRotation -> 0.], StripOnInput -> False, 
            LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 1, 
            Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{15.5, 3.4416913763379853`*^-15}, {1.178582044750134, 
            0.7716407313865994}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}], 
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -8.97046707327579*^-12}], 
             
             Offset[{2.7786373880018456`, -1.1310058647055206`}, {
              1.12, -8.97046707327579*^-12}], 
             Offset[{0, 0}, {1.178582044750134, -0.7716407314013919}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.178582044750134, -0.7716407314013919}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044750134, -0.7716407314013919}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044750134, -0.7716407314013919}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -8.97046707327579*^-12}], 
             
             Offset[{2.7786373880018456`, -1.1310058647055206`}, {
              1.12, -8.97046707327579*^-12}], 
             Offset[{0, 0}, {1.178582044750134, -0.7716407314013919}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.178582044750134, -0.7716407314013919}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044750134, -0.7716407314013919}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044750134, -0.7716407314013919}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{21., 6.500000000000004}, {
              1.178582044750134, -0.7716407314013919}], 
             
             Offset[{21., -6.499999999999996}, {
              1.178582044750134, -0.7716407314013919}], 
             
             Offset[{10.000000000000002`, -6.499999999999997}, {
              1.178582044750134, -0.7716407314013919}], 
             
             Offset[{9.999999999999998, 6.500000000000003}, {
              1.178582044750134, -0.7716407314013919}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"1\"", BoxRotation -> 0.], StripOnInput -> False, 
            LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 1, 
            Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{15.5, 3.4416913763379853`*^-15}, {
            1.178582044750134, -0.7716407314013919}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}], 
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -1.9101818120740213`*^-11}], 
             
             Offset[{1.9007504810748348`, -2.3210229659987824`}, {
              1.12, -1.9101818120740213`*^-11}], 
             Offset[{0, 0}, {1.178582044750134, -2.3149226850228293`}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.178582044750134, -2.3149226850228293`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044750134, -2.3149226850228293`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044750134, -2.3149226850228293`}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -1.9101818120740213`*^-11}], 
             
             Offset[{1.9007504810748348`, -2.3210229659987824`}, {
              1.12, -1.9101818120740213`*^-11}], 
             Offset[{0, 0}, {1.178582044750134, -2.3149226850228293`}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.178582044750134, -2.3149226850228293`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044750134, -2.3149226850228293`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044750134, -2.3149226850228293`}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{21., 6.500000000000004}, {
              1.178582044750134, -2.3149226850228293`}], 
             
             Offset[{21., -6.499999999999996}, {
              1.178582044750134, -2.3149226850228293`}], 
             
             Offset[{10.000000000000002`, -6.499999999999997}, {
              1.178582044750134, -2.3149226850228293`}], 
             
             Offset[{9.999999999999998, 6.500000000000003}, {
              1.178582044750134, -2.3149226850228293`}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"2\"", BoxRotation -> 0.], StripOnInput -> False, 
            LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 1, 
            Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{15.5, 3.4416913763379853`*^-15}, {
            1.178582044750134, -2.3149226850228293`}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}], 
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., 1.179797176524353*^-21}], 
             
             Offset[{1.9007504810727163`, 2.321022966000517}, {1.12, 
              1.179797176524353*^-21}], 
             Offset[{0, 0}, {1.178582044750134, 2.3149226850080367`}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.178582044750134, 
              2.3149226850080367`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044750134, 
              2.3149226850080367`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044750134, 
              2.3149226850080367`}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., 1.179797176524353*^-21}], 
             
             Offset[{1.9007504810727163`, 2.321022966000517}, {1.12, 
              1.179797176524353*^-21}], 
             Offset[{0, 0}, {1.178582044750134, 2.3149226850080367`}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.178582044750134, 
              2.3149226850080367`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044750134, 
              2.3149226850080367`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044750134, 
              2.3149226850080367`}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{55., 6.500000000000012}, {1.178582044750134, 
              2.3149226850080367`}], 
             
             Offset[{55., -6.499999999999988}, {1.178582044750134, 
              2.3149226850080367`}], 
             
             Offset[{10., -6.499999999999998}, {1.178582044750134, 
              2.3149226850080367`}], 
             
             Offset[{10., 6.500000000000002}, {1.178582044750134, 
              2.3149226850080367`}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"NDSolve\"", BoxRotation -> 0.], StripOnInput -> 
            False, LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 
            1, Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{32.5, 7.216449660063518*^-15}, {1.178582044750134, 
            2.3149226850080367`}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}]}}, {}}}, AspectRatio -> NCache[
      Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    ImagePadding -> {{All, 98.29102237506697}, {All, All}}, 
    ImageSize -> {812., Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {-10., 10.}}, 
    PlotRangeClipping -> False, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
    Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"1\"", "\"2\"", "\"NDSolve\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910478285080323*^9, 3.910486457861981*^9, 
  3.910487153642313*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"da46721f-b74a-461a-8eb0-70072470d078"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
             "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
     "**"}], "**"}], "*******)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.910480471917904*^9, 3.9104804808100014`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"26b67c2a-cbb2-4905-aa74-739111cec4f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"selCoef", ",", " ", "genVar", ",", " ", "soln"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genVar", " ", "=", " ", "0.00999"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9104409339464197`*^9, 3.910440934322338*^9}, 
   3.9104414376885943`*^9, {3.910468296420635*^9, 3.910468297175737*^9}, {
   3.9104684126755915`*^9, 3.910468413916339*^9}, 3.9104684748911276`*^9, {
   3.91048706256953*^9, 3.9104870643213215`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"19adb1d3-8c46-40b2-b28a-2ec76f60b81a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SimplifiedHayward50", "[", "k", "]"}], "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "\[Rule]", "start"}], ",", 
           RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
           RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",",
            " ", 
           RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
           RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
           RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
           RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", " ", "2"}], "}"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.910468422400401*^9, 
   3.9104684303243494`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"8dcf18cc-944e-483b-9d78-22187b08a293"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 135, 36, 28766774182623955770, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9104782854466066`*^9, 3.9104864582045774`*^9, 
  3.9104871537802052`*^9},
 CellLabel->
  "During evaluation of \
In[135]:=",ExpressionUUID->"447607f7-1b40-497f-97e3-044cc86ab101"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 135, 37, 28766774182623955770, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9104782854466066`*^9, 3.9104864582045774`*^9, 
  3.910487153823142*^9},
 CellLabel->
  "During evaluation of \
In[135]:=",ExpressionUUID->"45ceed30-dc14-4fc7-9980-ccb5a3f5c8bf"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwsV3c8le/7t0LGSZKsikglyUzK81wnhKzsnb0+yZbMyE5RhCghq5LsXQeJ
UMjeex7OECKyvuf3ev3OP+f1fj33/TzX+3q/r+u6bwEbN117Gioqqpd0VFT/
969mj+9uWDJAyToeLzFrJKBT5HGf5JYGxXBdLWdHMkhlpKSVcSvBBNPUmdUx
Mqh3DJa+4daHPQmpfI/WFTCy+4tL4LaDNw67CU+7fsP45SjFWG5vkPHlFf71
cQ0yj9+OjOEOB3b0vyozx014xFh27jF3IowJ9ymgP/ZARCU+utQ9ERhnMz6z
Hd6Hngi3pdGWRGiaJ538rrIPQrSiH8V8kuAgPC17oGkfvu/liPX1JENjVcEZ
f9wBsKwny5x+mgrnBdjjjvdRYVPG/RUr9tNB/tPbYzeKaLA3+ExyJgwywP1s
c8KldhrssqnsIcZPGeAXcHeLaokGe4roZ/vpUia0WFw2NDtDi3X778pZqrFM
UN4SfTPwghbLblf0PvdqFhy7fabtowcd1tjkbdHv1RygZ34sxHOCHrsyqs+U
xZMLQY8WjteI0WMjLRjt9RRzwXmLPvC6Mj22zNaNpzIxF9yKFw4te9NjMa5I
RIBsHvgxX29b6qLHNocOm9IHvYP+E5IJemEMWMmCo/R8jPkwUd2RuNjFiG0T
a7bqEM+HsouVYiVzjFirEt/PD03ywS7gjYzpFiM2tnLSfTo/H16/vnZR7fRh
LL7h02ie5kcIT0y6kuF8GJvef6tE4kUB5CmXOTLvH8YyHzwyVzlVBFr8pYke
h5mxKf8ZWYgqFwEd25e2Ci5mrFCfqNVR1yKoMcgrGjrHjEU/DNqO4oogSuaJ
c+1NZmzNh+SKKrFi0E2MbCEGM2NJesQv6p3FkMPO6MVAZsZKHx5E0JlicJKf
vC+1w4z1r/taJ75ZDDY8vT8RRhYsw4WXDcdPlcCFp0UOJAEWrMD+jaZJlxIg
iFUIVuuxYA3ev/zpxVoKSdfcYKeYBZt2J1TDQaAUvmm932L+woKdYXfpMJYp
hVonNbqd7yxYtyCFX8idUrik+/SU9xgL9rEuqYfhUylouX341nOIFdvFMKT3
r6EU+Bh9PQeOsGI5cY19xD7K+17mvqjmZsVmn0sZ6N4tBdq75xW5LrFicbsK
I681ysDCyp9GWZcVS1d6ySzOqgw2v1WSEDNWrJoj11iIdxlQ1f4XzGHHih3s
Jo3bp5VB0epexZ37rNjVvJTpy8QyGJ8atbBOZsWe1SHjvz0pB5KxNeOVHlYs
T7DKNce35aBq8AdfPMyKZfuU+YSpqhxWpm/eOjTNiv3HqCemM1MOHSyNrddW
KPE3VHlNXK2AHw/jEkcOY7DNZLbmR1oVYFTy+4YgGwZby3eX86xdBcQIx/69
yYnB5vry1Tg/qwDqBY3v3GcwWH/xR/tb8xWQFvmEbU8Wg3WzGLmdtlMBO+47
vFwIBmv3VOotHK2EaeXfHawKGOxt/LxipHwl6P8r9H+sjsEqcULSBd1KYLgz
m3lEG4O9ppSy0O5YCeoC7k3u+hisUKba42MvKqGLu+lOkzkGy92ZPVL5vhI2
vW2pq6wwWMzu7kXTukrYIh3eD7fDYLeNijozlyqhQdbQuswZgyVHMPIrHVQC
VJzfOuaGwc6VWXssclTBaV5TVW1PDLbzCAeHGLYKiEZqvua+GOw3xMW+26AK
wrw8YkQDMNhq5++V3s5V8Mf7e+1QEAZbmHqaketRFRiSLghah2Cw2S2+Jp+T
q8CRrmG8ORSDTdnozrcoqIIj5St0DBEYbJzgxV3qxiowprMpE4rCYH2Dx9NV
SVVw3mzr6GYMBuvy6cpvAk01dI+VbH14isHajD678YyrGi55DPZei8NgjQ8v
JUiKVcPinnb9+2cYrKaswly/YjXYLykOrj/HYBXsX8v4mVTDN1P2q3wJGOzV
F38i+dyqQcHPdF/gBQZ76avmUH14Nch92lA+lIjBnlnJu2D7qhqOTP8V+07B
J05SBdAXV0N5Y2GvXRIGy6Ju0v6huRqY6d/qTlMwjV/pSc3RajB9F9t2PRmD
/ZvH7Pb7dzW0ijkbelMwsc+u4QV9DbD8cTjxhIJnaOqOyvLVAL3tnEgIBQ+K
n7AdkaiBMGxgkR4Ft1u4lwep1MD2ys63QxTc+LTtkMCdGqiqsYtKpnyvqvaM
UZNnDUQfJXDRU3ABPuC9Y3QN6E5svNSnxJvF2b/NlF4Dw19PCoVS+L1UElMv
LKuBKGvR8TgK/6eeUWk6bTXwtIh31j8egw3NnCL9maiBKenjhsqUfD3olIOU
PzXQaeZhuErJL0asYr6NsRZ+f0xaSYrFYHNixZ/u8NWC/WZF4CmKHtdIHyUv
SdSCp1Y01xOKXt0a54YtbtbCDdW58dFoDNapICv4uUktqPo3LrJR9N1nPiXc
6FILgQfXdUQo+l/8yeF1NrkW1DgPFTM9ovAVec5tlF8LpZizY90PKfrGMDdE
19WC+uWQ/qBADDbiFg0rcaEWjmEG08MfYLCTLSt5pbKf4aX371fa9zBYn3PO
mnPqn+HRzi564z+KXlEL68etPkM0A1P8CQcMVk55HOsX/RleyD0ruW+Jwb5o
+jECw58hVayCaYdSXyJCyo88SJ/hZ7ufEp8mBtsQ9vVcNvUXYPr48pjQLQyW
pFDtTS/yBeQ21RcXsRisytdcTIf/F+Dv085QvIzBTvALVOzHfYEMri1cmggG
6x2SZiae/QWu5W1bjJ/FYN/Ci/cvfn4B0UjGzON8GOwOLkTBlA8H0mrX79oz
YLBFtWY+izgccE46VKRR+pMyzyAfdw8OGmxmRAN7WbFjfrrf1BZwwBR2GXOz
gxV7WO4WWyGmDrK62GNeNLBibauu5Htb1oGxgl67cB4r9kT50Qlq6nr43Hqj
5YYLK9b86Y7+HGc9/F1sunDWnhWbZTf/87toPVjlPNf7bc6KFT1eU/PEuB40
3wa8QTVYsQo+VknHi+tBFk10q7/Air2SZpSXeLkB2MdvqtyfYsFaW+TdeT/R
AD/rO0+2IyzYcDXe1NSlBjj2KMdjU5IFm3fleV/MnwZ4V/I1ifU8C5aI8Vd3
YfoKupzqKzTsLFifek05yStfQcFZ8BZmnhn7lH+D40vsV8iIMYn4EcWMrZxR
bP8l3wjNuMO85AYm7IDqo9VYlUbwjOBZvl7OhN0srOPU0G2E7Ffc/wLeMWFl
A+SsWx0bwZ1RyrU3lglbfezyZkNCI4D/1utZEyZsjRIPfym+Ea4UYx+8XzmM
/ZL32ysx8Rvomu2d/cx+GNt49w2vCbEJfGLtnVxQBuyGMHLkk0sLrHK8EQnK
ocXSbH9k4z37AzRfp/JfjT2AKwdWlXqF7fAwLpZPDb8FGpoNoTer2+GxQnBs
268tsH19+rZsYztseGuLGlZtwXPZiUWeAcr6wHOnX0ZuwZKbGffMXjvg7cJo
as5uQdqUQaC7ZgeE/fv4NMLhL1A3qinEEjvgV0h/TsjaBrSHS3d+F/kFD6hd
9iNk1uHakZ808TK/oPgklr7t1Dq8T7WWNcP+ggH9seiTjOsQVhiXuWLwCwqE
GVl2Rtbg2hDek+vRLzDW27WKfrQG7y++OXF38Bd8yTr6iNy9CgpLocX0Cl1Q
2KbGvR78G04/J2x/IHdBnAL74xgBItRZB38oXe+CCaeLd9UPCGAhdczk81YX
OIgGuYqMEyBt4Fp1O003/Fx92qSQSgCukzE+K5zdYP15YGiUnQDs+efXpaEb
XmqYfnvPvAyHmuyJ9c+64SnTtWm3Y3jISdp+3ZrYDbzvmP7N/VkEJcdY9e7U
brj9d5njwcAihDJV5M9kd4PFqV6htdRF2Nem++9QdTdcl5L0UjizCFvjWfNq
U91QvVKWc+PqAhD+Tk70i/cA44nb0nZ+c1Dp+KxR7UoPbJv/d+q0+RyEDKJ5
9dd7IFZITPUfOgecVW9cPij3wEPJ7WNHD82Bgo/ZbqB5DxRwNb2sS5iFV38G
uIWie4DXbMf4cPkMqK526HtO9gC/yZ17w6zTcMw66OriXA+Q/i2p+/6Zgoku
UT7z5R6YGjjDJDM6Bd7FT2ZvbvSAfI9fN8OHKchwu+XJzdwLWWFR2mzKU7BJ
anrWcKUXMu+9wlxhnoSc5c8/MHG9sKR5aINRegxcX94WvPuiF8JPBLrJHR4D
WaXZgOaUXqg+fe1e+sQo/HjDdCkwuxdydbxUD8WMwqq2ybOl6l44XO/JojA7
AmjVpl7TbC88NznI0ssYhuEwiXE/uT4I8InUKpcfhCzxZpl+tA9Ws0PGhbgG
4d64cZy4Uh94PQvCNa0PAJVsCCxq9YHGlFhb/McBEF7ufKtv1wePEiHQ/OQA
eGvfc7j8rA++Xnn0+dnhfsCcfLcyN9cHvJIPXt2i7QWsYdj47FIfZHMXI04L
PeD5zPLnDLkPphzfh31s64EBaq53U1t9IPkP45nxvAfSF6Itxlj64QvvkIQc
fw+IFd/t6JXuh771bP4Tyt2gqSj2sTG8Hxrs31pdNPpFqSum1K+P+yHEb3af
TZhSFxULkQ1x/YB7YfpedqMTOM5n2NSl9MPoylVelcROGGNh46kt6Id/rxz8
Hfs74N7AanRJXz9Uls1hfWzb4el/FQ6ZQgNw9O79TPZPbbCM/RTNLDIAtzyW
006HtIEKV26+z+UBcLvuPuqm1wY0LYlkjWsDMJMnjx/61wp+Qt4+27cHYNIk
qqNJoxUcJiUjdQMGoJMb/7Vh9zvcMCjOpesZALsF5d5rT5ogXfR9i9vgAHz+
HXnqpEMT7NJmLo2MDUCJ7YSO3I0mqC59dqlkcQBiXwTpntr6BmJsbhV39gag
96jrWoLTN+D7eam58vwg6PEmHlnSa4RN7Mc5p+BBeH2375ODbgN8ySG8fhA+
CCNi16XorjRAKKOoXuTjQRDdEf7czt0AmK6Cr9kvBoE827j/+Vs9CFsWpk+8
G4Rc4+yrfxfrwDCoxFi/axA+2AQmEAAHFTVV7SAwBCxq6XIMF2vB/+RWmJbw
ECR+ZI6S360B7KOr1+9cHII4RjWVzx010K5a88FfZgjkJXhzXnjUwNxgbWTF
rSEQcW4LzP1SDRybOOxFzyHoHHQW27WsAm/JpnLOb0PwYyIIszNUDg7S/Jnx
rUOQXrV2OrCoHIyvBD5h6RyCMT2iuHJkOVy/Jm1DMzwEzQcV2WXS5UCjkHOE
TB6CV5dqzuITy+CZTvjdZp5hgI0Ho2Y2pZDvrsTv7TkMoonXdd5R7lVpnpnM
Kw+G4d4z+aQQ1mKI9d7d/C9oGIrePIgUHS4Cd9/yDsvoYRB+6/Vr2bAIZEOE
AtTTh0Eg5r7TqlEhND2jGzjzYxhSue1fRrkVwGRh05NugREY+lo5wfT7PXSR
6IiS50ZAc3mCxfPLe2gQvamRKDoCvvMW9Vcfv4fM/GYWI9kRMMaG6c4Ivgeb
vO+xYxoj8H7fujHpzjtYeNP6bPHBCLiTmyp2p3NhYIzxt2rQCGgceRDHWZ4L
Lby3tPNDR0C4OqApMjKXMg/a2FxiR8CGefyEk2gu3E36Eb+WNQKNG0cvnw7M
AdLT9hd7HSOwJ9hGjRfJhomfLH8sekcgnCbA7RxNNnQyaeo3DI3ABm1Ta/lw
FhRGd3CEUfrIk61cuarHWeAe3pnEuD0CT1/u82iS3sKfgC7KQWkU5EKp5W83
ZsLO3b7XF/xHQdfJ61IT9g3oX7kTLxY8CiGlFl/OHXoDBdQLkVLho/Di497h
7bY0sEj564HEjUI0/cSpGf00+NrMo6qTNQoJ9S1sn91eQxS/9R/fH6PgPxF9
fK06FaYIS0tBv0bBdM8ueyosFa5WeU6G9o3CPvVZLcnbqbCsGf7jKaUvXv/x
0X13IQU0A95lZq6Nwna0gyEPbwocGyBptPKMgZrxYPdaYjLce+uj0HF6DAaW
k3612idD070D2R6hMajN7D+7dSUZfGiPCo6JjUFRe2uU1UgSDItLb68ojMHG
kjaN6tkkyHjin3vCeQxSVH/5rP94ARdvMOw7fB6DipvO9ms68VCc//HcUMMY
8I1emmu+EA/SHNo6t76PQTThiCyZOh7kF1NyLnZT9kdZT1wrew5asSLqvxfG
ICZbF1PG/Rw8hzVT/NjHgcMBS5QgxMKmwtrX5RPj8EQ1JG8mJxYCCpIJZifH
Ye9qxFERy1gID55E0fPjkPwhI8i3/ykkn/WYp0HHQcNk59Of1idQ45Eo+fS/
cdA231Xz/fEY0NGr5nuu48BCF3v1aOxjaFQaj3D1pqyvCy6/rP0YfpwQHtYO
Hod0yw/q24PRMIarCj6eNA5G41+os0lRQMU02p7eMA7d7PXqPuKRoJIl4Fhy
YgJeT/OJp7OGgXQKRvg73wQ428Rizs6EAn/cztyIwATAdvAAfVUo/PPrt6ET
nQCRDsRvyDoUPuk8tjDCTgA+vybr7edHcIx61WDPaQLS7ns2Xw8OAaq/4xzs
rhMgrbURK2gSAkTij15hrwnwjp0/Zi4VAt+HcnS0gyZAbJJtxq87GPyKjTWz
4ydAKzLik2nhQ5i0bFC6VTsBTv6Ia1x4ILQbfKK1qJ8AoRL55KUbgVCt/qrR
s2kCWswTZ3oPAiBB1hub1jkBemZjiTpBAXDzyHn5lZkJ2FD/EdT70B8+1j2T
SqLMba32CgnG177w4KTlmWnzSWgv+ZWgLHEfbLTFDcesJ2FRSuXg6YE3aIVR
xww6TFLOQdMktNMbhJeyVzvcJ+HS7FfGmXve0FeOb6gNnwTOLHwkpsgLxDU8
LRMLJsFY3ht3W9kT+IIVXzwrmYThi9V5ZB5PYCjlaImpnISduEvPiCseMHGi
SuxRwyR882h1pnntAU9nd/Zc+ibh1I34/Ucb7oD3j0hT2Z2EKBZfFjsfN1g2
vOj0lmoKlGeH9AdE3MDq9zGa07RToO/+RPz3pCuoC87L8DBOwd5qnPlxDVc4
8zjqDRv7FNgF7gpRi7pAl377vb2zU3BcRm9d4bAziBINmAc1p8AjuKeLQcIR
qvU16mO0p4CK+scTuXUHUMQpeKF6U8DsPV1PW+kApnGXR3ONp4DUYilnjjjA
Y/HDH71tp2CE5vvzLV17WPD+osbuNwVMwXyWDSm24Dleut8cMAUJBINnE7a2
sHfzQ6nfwykwsYzYD7lsCxwnknmmw6agkyg4q9lqA4o1bstFcVMw+fC05uKB
NWTunYnRzJkC2ousL/girUDUgRulfjcFfAG5opvGVlDVeWStnHJOoz7pLqcg
agWdGbsmfEVT8F9LG5vZe0vYuzFwgVAzBYx/04lOuhZgGvm4LfrXFAzUKMRq
dJrBsSO/GZv+TcGtiXdGEsZG0IOLibq1NwVWU9++CfEaQcK9s/S/DqbgTObL
5IIJQ2D/YUo7QjcNjIOHlL0dKTiieW8FMw2nDdmlG4INgG3n1Rqv4DTc+pg7
LPNDD7o+yHi8PTsNl15L7g0n6cFz464V4fPTcF2GiebAWg+OVB4iSVyahjaM
qGDLji5gPNwXVWSnofFavYu4jC6wLN4c81Kfhn7i1KxXnTa0J02ZbmtOg5WB
rXlWvDY8VQoYfqg9DSz9RY+x9trAnFU88NhgGurqnGlbWbWB6Q5vd4blNFzF
9A/9atECxt7fzT+9puHkh47NiyoaQFf/ukgwbRrs3o9It/SpwIi8kupk+jTI
zEmqM8epQFEtcerV22mwiX4tfUxVBUwrEXb2d9MwIlFY5lCnDCWfJr2pSqdB
XNaxaaHsJlikCV4bb5mGnvaetwUNiiDN096T8mMaDtExH9aMUITDKd7O+h3T
0PCSkSlRTRHKXzSn/eyZBh1/3ZNHBhWA+YnjQc34NKTxmSk8+XsDqv0+NiWv
TwNTyMZvGQMsxP3Vu6O7OQ2DoeqrQYJYsL2/u8G6PQ1cD9GivDmg5E/zXMT+
NIz9wxy7IQhg77Ty2OvwDISTLhjKfUKA3UjqtvbpGZDSWHXtWr0G+L7RReYz
M1Bq54/Up18DnG54SIvQDPikvwp4o3ENnLT6S1CRGSBxldw+9VEO6m4+4Lgk
MwN4JsYloudVcJb+PHxYfQakewOqPl28Ag1d/QXVmjOQuWkXUrkoA8ddfgc7
as/AUVVR+dAcGajPPSvcbDADI0taD0z5ZeDYieeeIVYz4Hn/if8AvzR83rZj
/nt/BqY/nbmprSgJbMnBE7m+M2BLL1GUwSQJ9pKvSvQDZqDR/s/Yix4JOOL8
y6g0ZAZijDeTbO0kwHZMLsflyQyUZZGJ7s/Egbkeg8xlzsBkkdGD97RiYGV2
ge1F9gzsRtnp6uRegoq/irM38maghFuWlk31EliK+z3O+DgDFdttLN+ei0LZ
29l+08oZiPAVvVcodhHMwqtdu3/OwOCHA/1zr85DMX/vjZBOCp855iPD6ufh
EI7Ecbl7Bqief/Tx3j8HRRtnPj8dmIH070JSFg7ngNYxlkF1ega4DfgZqrHC
8PGWTWbd5gzEkWKqXE8KgbSoAArbM1DvcC16ZUoQ6jBTo/U7M4DlL2bkzRWE
rt47J75SzUJj9DU+58uC8OeOSdw3plnYcrj1vF79DKCe2oGtp2aBa/u3UMtb
fmjRP8JzS2AWzhHyhi648YO2bGdVm+AsdMUU859E+MFmV339x3kKvqc4blFx
GqIiVe52SM7CDmf7h7Krp6DrFWrcozwLJdqCx9k8eMEkaG9D99Ys3PSYZXnG
xwszll9e9KrPggXGz4mmjQf+CF371ac9Cx6dR+i/CPEAd5GM8qDpLKQMO5pK
L3KBzTdR6THXWfjbq5bFncwJhFxCt7kHBf8yeFV1mxO8o/Pdxr1m4WxJ8gdB
Jk6I0jz/ccJ3Fp6cuK1y59FxKBgUPDMdOgtlCyIqPH4csEHgYVtInoWKJS8+
whN2SHyz2JKWOguCGfH4CA12kLpdHqyXNgv8yo89iKzs4FGqudLwdhZ+66pJ
HXtxFEi+IZ2vC2ZBOWTySmQeG8wfWniq0zgLA5vMKM8UK4RXlSoxNs+CijSz
Y54vKwj+F7xb1zILyb8N4sLYWcG6neueaMcsDN+yGONXY4HxBHV1hqFZuIbP
YvBvZYL+0yWHcaRZ2HuRmW+xzwDe3UFfvX7PAodrWb9EPgMcC1PzE1mfBb53
/37zGDGAzsIs/uXWLNSF41IFyumho4Cz1ZN2Dr78O3o51/8QNMsFRp7nnoPR
WwfOLVdowY6gik7yzgFrIuZjwBoN0L45vpl0ag5QPWwoRxEN3KAqsqcVmgPO
3NfdeBEawH2fVpoQm4Nz3ipvf4lSQ4WeCm2i0hxs8GPwqYX7aLR6dQSfyhx0
/vga66Cyj5orXmDMvTUHOcEPZPyn91AaKWbWSq05SLXddHbk3kO12H9xDhnP
wSM+hsXVlzsovstQhM9lDtIf/Pb+2L6Ffm5tKchxmwPJZ3wvZX230LiGq5cv
ec5BlEd9c4/QFipdzCONPqDsJ3knXXj0F330bAKxejQHav2aDDTKmyiPloNO
TtIcWKRLeDXuraOkm4O9oilz8K1s8HJf9TragKgaVryaAxaxSLrv3uuowyUR
s+8Zc6D1/YourKyhZSxkO/yHOcC3dOQAeRXV+HnfV7SO8vy2oJAq+2/09LeF
f+UNc3A7ST/OsHwFXas1CkK+zYFu4PjduJsraGq+XKhW6xzlfi188sY9Mrrw
eO+Jew/lebxA0dUfRDRYNSKjfGEOPp74vPGjaQntsXAyF1+agyNLkUceOC+h
QvfVuQsIc9DUnW2scmwJ/fH26Ivs33MQwVUQouyARzl23kQm/JuD5krJYEvu
RfT9p0oXd8w82LxSjTxVMof++5YqQmSbB+LNDseHTnOo5kjgouOxeTBmMp7v
5J9D1+gVrS255iGkY5HlSuIsKm/1S1/rzDyccvpzoyNiBu1ix18XvTIPpgpX
Ez7HT6FnLvzcend1HqzAwmjIcAq9D4UVgtfnge9y3OdavimU5573ZV7sPDwv
OWkSazCJ2jVTCTKpzcO28P3XHhnj6NYDbib8nXmI11hvZvcZQdXidr/bWs3D
Rm235wDnCPomZzJs0mYe3j2anx6vHkYVunP3Bhznwa2ajfiOahh9KiK52uwx
D+L3Pj2sTR9EBcbVhrIj5oG+TXw09mg/GtN4vcggeh5mM0xjb9b1oWvvRCMZ
nsxDnvEjA+l7fWijJ0ba+fk8HD//STDvZy9qx9jzTPL1POjYrKU7pPSg7aRG
h7k383Ba0zzCRqsHlektQ5Iz52GPcgX3PtSD0qcnEbZz54HneFhYh083+l7K
ROVr8TwEcPiyL9h3oWzcaqe8yuZBxF8xUFSoC/Xbv7YhVDkPFzPFega//0LV
2viyoz/Pg95/zhvP2jpRgsXU/u3v86D+yDzw0nw7KhbjWDkxOg+hafPhj9za
0GQ349jnE5T3seXanmZsQw/0b9kpTM/DOvdGolpWK9p1+iJ73sI8iC1nvJYc
bUE9KsguLqvzULbplFBs8R0deTWpdPrPPLjiX9Lw035HFUK6eLs352HcrGxx
9X0zyq5e2ia9S9Fv5dzv91tNaPnU/bO79AtQSn8wPfLuG8r33WH30+EFWHYp
tOwz/IZGfDTqtWRZAL204J+HGb6hhj5yj74dXaDMfR5TTudG9C/z3lgM3wK4
Hfulcv3GV/SabHgit+QCTEnq1nIp1aEDNtxX3kgvAOdpyf6NDhzqFVc4yC+7
AE/bVW9EmeDQgvkhnvPyC1DcuC1edP8Leirx0tsrygtw0Pyfg+fXWpRmdeCT
nukC7I1r3d56W4Wm8927PWi+AOvJxTQBSlXodVXqVVPLBWBu8i8yw1ei3hkX
pW3sFiAuvblDULoSXdAMqXV3XYBjzAxL6qPl6M/8Cy2xoQsg4Vwtw2FXijoN
1DkdjViA7y4PPxrwlKJ0NPpMSVELIJKaQ1/UXYKiJg81054uQApOYjJVsQQt
ZujtzU9egII4t5p5qWJUQ8rpvljqAthmjbj/nStClyz2OEtfU/I5dTLwhF0R
eqbynGlN5gLMFfs9O+FUiCbaBU615C+A14uteOPIAlT8+dFQ9U8LYM2ivGDH
XoB2fM4T/FW0QJnHtYGXMz+i9Me6HQbKF8DCp0dioSEf9f16ljRXtwC94msc
YpwfUPNTv7apexegtj+qm5k5D8Vwe1Z87l8AKg/ZwYz3uejXY8c97g9R9Nke
5ulTyUWFD5vh8eMLgHWM16R9koOurC8M/MIvwLMH09IdgtloFvlxwmPCAhD3
7j8s7chC9ZdEtRTJC4DpMa2l98tCqyc8myvXF2DU98rYXO9bNLRtv+zNPoV/
1eDlsdRMVLrprZsR9SIYBtlyp2lloot1SheP0i2C931nkQy6TFSjPCYr/PAi
pEyq3S/Hp6PHMzjjnTkW4U3N+VWppjT0vbeYq5zIIlySdanQnk9BTd26L6yL
LsJJ+lNNtZ4pKOtd7/mCy4ug4WbyiIsmBfW0rDXnl1mE7m/Dx54Jv0Svqymr
M2AXQYLnQuKziCSUrLRE/1VhEVxSLrLjBJLQTHja6H9zEV44Lpm/rU9E6WR6
5MhqizDVqtzmQZWIdp62ON9vsAg1/hV4j6QENISHei7OeBG80s2UE9EEVOp4
Toaq2SI8OvvZTXYpHk1hWub8YrUIqdHTnIsK8ajNxv1D2c6LICYk+vcGw3N0
40fsjPujRcjEyTd/e/MEHWPud9oNWwSa5XDrG4JP0EYNvpWoyEW4/1hUrTE/
Bn3emb+T/mQRJn9leX6qf4yK9LRwdCQtQqLGTqIOVTTKduzIa+OURchbK/qH
SYpC/+oZCsy9WgSpzBzfhItRaFP/3KWdjEUg7LTsdN2JRC2GqVUu5C8Ch05t
hdNAOKrEc6ujvICSzyODLCm+4ehFs+d62CLK+7V0Goz4wtGtsVNWRuWLEGv1
76mbUxiaMHXdL6JuEfysL1jps4ei3xfvf5zuWQSq7JbqntvBaMF5nIRL/yKM
ZOk41jQ8RF/8R1e9NbgI8wbzp1ikH6JWhISmI+OLEHKc63WnQBD6j1w0jiwu
gsnT7dc1XAHo1OW/tm1Li1CpV8e0/tofbXFHl/WJlP2Yn0GaAv5o4lr7pvPq
IlTkhVUpSPqhlzeXjrzaWQTcRfCWv/cA5ZSVSD67vwhZsXIScQc+6O4DX74S
KjyIXsnexiX6oD+26S+0HsID0xGLvtSm+6jdnqDC5hE8vGFKGHWR80ZT6Cy8
dYXwwO7wkazv4YHu256Q6RbGw1H5s7J1/B6o3beujdsX8MCbdsk8utsdFQ9V
fKAphodWPlkOEVl3tPXgvL/qVTz4ZfL2Mwm5omKWM9daruEhK6F1o/qlC5pY
93rnJoKHpk9Mgj2sLqhVECZIUQEPrHQfhAWo76F//60Hoxp46FqxlT9Bexc1
N/2ExWnhoW2S2+jI4//QxhoHankdPIjcn3147uh/aJzvcKicIR5sL493Pzvn
hApv1kVIW+HBwIN4y+CeA2q4+viJiDcesjWx7C+1bNEv2ooaH3zwEHlaMfbV
mg16pniX5bwfHmjuaBPRFBuU7OoWd/YhHrxu5bSr4q3RCKJ+PH80HlqKo9mK
X1mhy+oY3YwYPPA/nxbeVLNCtT+2sJ+KxYPzWIqq+rYlynf3WiJvAh5SPti/
s2i1QMsXT7/kTMND3vKJsOhIc5RHZdgoKR0P338v9frvmqEheQlcHG/xsIxO
L8x5m6Ea9odeHc2j6JN3+SO1iyk6N7OcxlKMB8G8vpen/IzRYxMVWTRNeCio
6a333NJH41iCgqq+4+FBs4/9x2h9lOm6kvG9NjwIq55ZEODVR2lSelgHOvEA
1vWhvsp66JrOiu+HYTx4B186mKzQQV1DKvUsxvDAUCEf/d5QB10uDBI7NomH
4zuxdCbb2ug0M8tc4BweggXk5rBK2mhX8/nb2it4oG/ibkmd0EQ1/qxcOLSG
h5jy31bp8ppo65kquto/eDDSEsgffKOB1gffrBX8hwe65Qea0/+po4VyNmf/
0i2BXDWdqpnwLfTpp9c7b3iWQOe3ZMtLoZso45jNgO7JJbhx8VPscJESGs4k
UsLAvwQVLwWNghElNMCx2sHj7BKsZ9xQ/mGpiN4V6O9WEl8C+8vBfcz1N9CF
22kF25KU/ZN4P0nzG6jNQ9uoQpkluP7OulR/B4uajK7Kc11fgj2/x7hcwKKq
SZj3hJtL0NvsP8xVh6BN3/pDM1WXgC+SLozEiaDYtbQ7BupLcK4KE3/WSx6V
vX3xWL32EgQomASNyVynzA/VhwlmS4D8q5rmmbmKHgp6pC/nsQQfNEa2olul
0fJV4na91xI8V5bK1zeRRu0cjDOUfZZAj5nOX58ohTbdvrysF7AEgcxDORNc
Umj4mfFg14gl+FZIZE2PkUClX6qe3Yhagv38/vnfFyXQOebyHwExlPU34nmu
/xJHlTZijj9+tgQJmf/5SPKKo3StVz9mpy6BeceXrIbnl9By+RxtkbQl2JiI
k+pcEUXtSo5sFqcvQXs7sUVQVxRterWArctegkP49Z8o/0U0zCVxYOjTEiSx
F5t1Tp1HaY79psY0LkFWRTA5akEILY0ye5fYtATUtI4S7Z5CqM3udw3eliXw
jdNfuEwthDbOv3l5vn0JnNfDjS+dFURDq9UvKQ4sgZqc3eC/KAFU8lJVT9vQ
EvyhWdPfPyuAzrw946s9ugRfhorHh5v5UYUn2413ppbgQZtwSTszP0pt8c7Y
d3kJcrQweV/MT6LFPez7+8QlMKB/lnylig+1UnmYHbGyBMT7X/xqOfjQBnED
csKfJShkoOk/PsKDhtDShn/aXwKsnKGc4lMuVNzX9YI09TI8IGlZIVRc6BRx
uLOWdhkIdUIJzx6cQLEDxdytjMuww5B35o0rJ0r1waJohn0ZjAK4dxiCONDv
xEHXjOPLEGg81te/ewx9Kq4jZs61DEpZBgOvQo6hJ6oVP/WfXIY33PcvVj9j
R8Vazn9sPb8M2X+jMzM62dA/TFl3Iy4uw0cuPzNfeza0VotXREFsGTxG40Os
do+gNwdYP3yWWobMvtPjXK4Y1Hx+La8QXYbta0ZIYyQz5f5xz8H5xjL0NtJj
NwaZUPy9+bPnlSjYJzSS/xIT6vVnMOftrWUwZqwwPjLLiMbQ4rIS9ZehtWQ+
byyQHtVWuWKjY7QMfwyKmdhJh1DOJ0UCGNNlyCMG1rlZHkKz2LMyoywp+/mM
fR/dpkNrBKLS/e8uQ6pHkm2NAQ360J7KQtZlGYj4LTe9SWpU6YPfyT9uy0BV
WBnJcpca7RK/l+ZyfxlceYIHU2KoUDzovLIKWYYQKQX/6317SGHYD5OTYcsQ
3iHmrXxkD/FuUeQeiVgGdy0mJ2XdXeRA60qK3pNlOAi4wB83+w/htOBNVk5e
hsQ2WwbRK1vI2NtEA9pUCt+Jl0UVCX+RrHnW4w2vKeu7tGwv/ttELrlQJcq9
XQZxr30h9R8biFLgfLxowTJwtIS6urxaR5gaLHSWCpfhalVfugTXOtJFO8SW
V7IMf3d5G5uT1xCzJz+ena5aBnLdbN7Sm1XE81VRLHvjMkzEyOPE3q0gVbuv
ohqblsGrSkQ9fIiM7FpEPvJsWQbR7TzS8mEyEiV4535PO8VfVJoqDQFEJK2A
6U7C4DIEEBqMRt8sIdOYTUOFkWU4LKqXYraCR4Q9prXXxpZBIO/8II8qHimW
qVbSnVkGyZ21fSOaRaS5zl6UnbQMckFozvzHOYRJQEe4cWUZ+Ondh3Z45xDt
MHl+z7Vl8Pzxal/+1SwyonKMo+fvMtApe3478WQGIXc17MTTEICR2ms7K28K
kZIq2LhxiAAjP5pYwqSmEN+klyurDARod+tZGXk4idCaus7qsBIgfurZC9uB
cYRrlvfnUS4CBJ9k63pSO4LcucnQ/JWHANKHLYwU14aRrHdrdR4nCeAsVq/q
pTuMiN5rK+0+Q4BDBwIf/CYHkRsbPq/iLxHgnriKXodRPxJpZJN4Q5wAN7Sc
b4p860PaazTjViUJcLZ3uwEv2YcYPhQK1blKgDGGo7OZJ3qRuww9/x1VpMTT
86vkOXM3UvQfzvbrTUr8ydYLr150IX9+vr/joUoAYT21TVWhLiT4ebBOtyYB
7gilie05dyJNa3fVH2kTIGuX8SRDdgfCZGB4U0KPAHJv7p6LqW1HErkvycUb
E6CsGh/Oy/cTGQ7gkrphRgDmCo0xCasfyKkJ2kurdwiwt9LoF5/bhrzPGuHX
sSVAzeGtXDbNVgR3MZrxqCsBZKhOHuXKakau9J3oSHAnAJnZy6RivgkpDnwX
z+FFgAtNFZhd8ybkwllZw+T7BHA9rcrXu/wNyer4zsPlS4DZp894JWy/IXw+
hpOp/gTg0uHZf93TiCSdWsjmDaLwFfBZbXdpRDAt953eBBOgeObhqaS6r0i0
26FLp0MJQAzZSrbS/opQcyWtZoYTYA55GZPT2YD4NwhVnokiwDuX4HI31wbE
5agSCD8lQEF14J/bZ+oR3bJQnUvJBGChb3Go//IZ+WnGzlmUQoCBM+F1vzZr
ESW6rBHx1wQgvWKhlXeqReoKJDJK31DyZcCu0Fdbg8gafLWVziQAMp7ywTWz
Gine0z5fmUWAuqabOdHM1YhI3hRRNpcAicK/Wr2jqhC+vwf3r+cTYLXH+jPt
zUokOePZNVwBAfab7Gfi3SuQI6qnD9AiSjxPeJyV+8qR6N+F3xpKCFC/4R9l
lFaO0KSi0QrlBDA6Sf8gd64MWbwW9OpWHQF4+6b3fkyVIFazLJY/Gwgw+vVM
/C1iMTLyJE1Q8xtFv7mWfe32YkRPWhTf2UwAiZAbmJyTxUj72OcC7VYC9Faq
CRwSKkKUI9Q9en4QgA+3aegwXIjUXxqV0e8gwMlf5i99Cj8hVwfu/uv/RYA4
hlCja18LkNKH/+qMegigNlL6jpWqALl4LiZsuI8Aw5B+cE77I5Lzi1vVbJAA
1qe0/er685FTvh9Yxocp8cgiFSrzH5CX/HLdFmMEwJU7HVpYf4+wtbUmTU1Q
6lHzTYO63nskxsPY1GaaAAuhUW841/MQWh78qblZAhy/HJxn7PwOCWx8MGu/
QIC1OjGBwblcZOMuw/tFPAF+GnHnKl/OQ1yPvbz3H4GC5bK4ehdyEPxnYQkC
iQC+Ku/nzqXnINZ2lRv3fhNAwSxo+bVcDjLColxLXqPoNzcxGe2bjehX9D90
3yDAGbz/4mWdLKTjjr3i2l8CUPeYvCUcyUKU6TcYvP9R/McRBgLNb5GGwvD2
jV0CYPmxG/2fMhE5I474BwcEUA79+zWelImUHmQbbFMTYaF74KDcIwMRfS/F
E0BHhP3ThRKFBplIrva3iV16IiCeBundj9ORU9u62Q8PE6GS/tHhypU3SMrb
GUcqFiKMZHzpWzr8Bjmq5ikaiiFCRNEDS+qh10jm1yPM144SwUpT0gE58goR
l/u0tHqMCAbNoqaH51KR+mK11g+cRHincDyRRyUV0TqPz7PmJoL58MChjaGX
yHhGRAQ3HxHOFxipItkpyL0Tgnbdp4iwp6mBSvK/RHbiGhQeCxBh9GDtmaZR
IhJDbyFwQ4gIDWT53EeiyQj3w52DLWEiDPrSrAZHvkDeb6RMFF8gQnjWJbrL
e4nIVZcrOCdRIsi/YiljwiQiLXO9r/kvE+E/d+nbt/MTEENzD/8hCSJ8GDjL
px+bgCz0YkyeSxMhDkfWNz8Wh9xXL5BVlSVC9I//VFwOxyN0325xUl0jQtJ6
P25t8Dny4trinyp5Iuj8bLjw7OIz5ExpeK8bEOGpb1RCzvVnSMmFM6XnFIjQ
RmsX71oUh2Df1j+fVCJCqwspAUuMQX5x3XF7qUIEthUDry/KsYjF83+at9WI
wFEUnNX/5zFCZkgRZdAkwgzPvYuZF2KQoGAZ5vrbRKAiu/sE1UchLH97lnx0
iSDU+Th5679oJM3VvVXMgAhFRwsy6+6FIhcXWN8tGBHBco47t1s4FKm98zEi
3ZQSH4MoG7NTNHKrX9XO8A4lvnovkRmhaGRIY0EBY0UETp1tm5B/YYhjU5jA
dxsi8AS+bdt5EYJsXhegemhPBPeszBuLdWFIRFndhIwT5XtqG1nq58MQjovm
ONJdIohZp/z5mBiE5GRtv851ofhhkrs10T4EkeJ56X/HnQiG4UlVhe2hSGO8
tMlxLyJIm4vbD70PRnQP98h23CcC459lLVnVAGQ6xI0zwpcIgXJ5n9qFgxH3
LZYN+QAi7MT5TKwPByMHbvm9f4KIEPDhjmhvqCcSt6hSWhBCBF6Z24Pebd7I
Scv553ZhRGAZ6f5OmApACgZC3fgiiXAauRule+oBcl2LX6svmghvqN7fMRbw
RX4040SfPiFCD7W4TQJHAGKKmDErxRFBYa9kfirxAbJUvrW085ySrx99t+7w
eyK+osmtZS+IkPnr+DuyqzfCmCP1zjmZCO/LOC64pAYiL3m7IwRTieDksTLi
cs8XEX7hajf6mgjT9nvWmXHeSAUTi+KLdCIMvNUKv3jeH1EK/SCg/pYI95oL
imOs3ZHebWUq2hwieNm0Pm7I80FsPOYmavMofJSLP7iX+iCr+Ec4zw8Uv2vp
66z7uyMhVqfTRAqIIJyk/Paq4z2EbeiL/0whERZlBkskPF2RjNumJq9KiHDS
qLJ9JN4GEWv5K6tbTqlHjkRV0RRDpA5N4mSqotR3bnr4jLobolkpufG1hqJv
94GHXIkrMnapq9fvC4Xv/L93Xra2SAbhaBBtPRFuO712cRByRWw+6AnHfiUC
6WHKQoOnNSLsmPSLs4kIQ3GhYnJL95AloUHfzO8U//7/r2CG64xIGxGM1WXl
uUAfcc80/Vn2kwgqSs2fHyRaI1IWad5IJxFsiMupK2keyCbvxMmWLiKkz6YW
zro6IbXDp1u0e4ng8no9kfBJBwl6ae0+0k+ECXUxhaF2ewRrkM1tN0SEjyvf
Y4wH7RG6Y/ONpBEieFyTWps46o60dAnfezBO4XvluroT0R6JiXM6Tj1FBH2z
q7Fdi7aIlkZ+XcwMEbIn5ZQuPLJCjjIRHTnmKX6cxPjQ7NgifS2XjqYvEsGs
TsM0i84OSYlwqz23TAQRiI/ApGJxZooltiVESj+l87TrpNVFTlGvs1xfofSr
GOW5ABYbZKZOurJplQiJWvGWnCVWSG6gj6XWHyJo+rma1NO7I07XqhmHNolQ
pTJZElKlhYhubZdYbxNhmMP+ZvyOHbJScd2MsEMEbj6ZA8NuLFLqFUR3f58I
MVEyqduzFoiPRP2nfSoSvOWXPdFdoojIrVAZRdOS4Mch3fLSAk9kt0CBip2e
BO/VXHP+mLniGu6Gf3jNSILzT2089dXlcWHnv+ueZSYBy8lv8vGfDBHlBYbd
QlYSBLZKnMq/aIsczrmVe5WNBPzrA78dRFyQdusnWo3sJLjAn5ymTH8feX66
46/6cRIwATu72HNHRG8c87b/BAkKntg3xKfqIpyvtdUseUhwXFH05MOjSsiI
ccI6no8E2z0mB8+nXJE3nH1pnqdJkETSZjqnpINY9R1X3hUgQb3/uCqvsQMi
lGC0EiFEApXrAk4d+jdwi7dTU46cI4Hc1/xPSb/NkXzW0RupF0jw7vD5vjB7
a8T1Jx/hjCgJfrcsdngfsUckHlskFoiRgKaNpnrewh35o5yJXJEggWjed9/a
NxZINd3MQr0UCeymXd9LUfwS0Cj4/NYVEujOOurvdTgjaIi9XO9VCma6yXhn
zB2hQd/NmF8ngYYSc7fPeSukeQf/ZAEhgUuSJelhkCkuukZExh1Lgl+cMj6b
IraIxoN7E9sKFL5ooqePqityRKYwKuwmCQwM4/w4C8/hetZWxFlVSWA8EZnw
sOYEklwsMZKsRoJawovTJb3WiImrVxi/JgkCtskKll2yCJ9ohWj+bRLQvvrE
v83niEwtbfZL6ZLgcONLBedlOyT73dVgnD4lXzueagyeJoiDvf95FSMSKM1f
uImrs0FEBL90d5lQ/OL2X6DmOw8caWrP39Sckq8ZNobI46q44nQQmrMgQeNd
ifXTAsbIuv86g7U1CeDaiBrTtityxegdYdyWBNFXPhivit9EfKXMfpk6kODq
e2dNnUIr5PORI2WDTiRYXMdkFRqbIfuExmR9ZxLEjtTqzbijOGyrj3+3Cwky
v56u9Jg0RMJyRCy03EkQ1P43+zGXLfI9ZOLGT08SPAkNzXhV74kw3kk4q3qf
BPatJmD94CZOXU75cPMDEtylOp5P60aZB8f/EW/4k6A1KeBkYpk60rX6qasu
kATkwukDtgEL5Findfn1YBIoyGFifS8a4Qzzj6dUPyJBDZ3ip4TGq7iUyLYA
mXAS3DP1tAsoN0BGbYIsSyNJIBHr3CRyzBd3CiQULz8mwbLg6ZFkUR/Einde
uOAJCZ4/tqSXVNJHsv+mMF2II8Eq+9besVhT3EKvBjn3OQneIPIc7M+8kPPF
VD1nXpAgeEQvjorBBuf8tLwiI4kEOmrnPav4L+AKnZxS+VJIUH1214eGwQf5
rcQXlPqKBDF0y7uYWCtESqDLivMNCWTbjEmq6zaIz16Y0osMEgjGD36+rW2C
qx6WPc+WReEf7vb4aY47bqeCwBybQwI3NSqTm0kaODQhY+XwOxJoSx7ZWwr2
QEJc9XojP1D8oqtXKkW0Rb6pMVTRFlD8PUl3Mm3DFkd/7vOrkEISnNoodbyT
cgt3i9bt4V4xRS+e5Y+G16VwTyfP2PiXkUCx4UlwkL8h0vl54ObfCgoueMAe
aOyMO5oSc8G7mgSGV02rOWp1cPreKOtqLQk8Xdsff8q+iyRrr/12wZFgTdE7
e4/eHjcsmte3XE/pH9vpIUivDsJ32LTasZHixwaC/ASPAWI5z5o210Txo2GX
6Pqhu0jW16/B1i0kePxoVauL0ReZe3PfdqKNomdjmvjnEWXknP8FFbN2EngV
v/h8IVMRd9dwXGSokwTfz2JQ1w9SSIFkPMagmwQd6DR/VakUsoK5udbdSwLH
Gbq/9GCJSBK2+rUGSHD69gTRgM0dud9SUPNziAQHjDxpA/oeSHW21RvVURL8
K2BIpR+yRf4FczxqHifBK5uZxQvx7jjEvNVOYYoE36qW8ndTrHAhVwNV62dI
0P5XMslL6j6ukUNcVH6eBANPtfMC3l3DHVqdPVKzSAKGupPlFyM9ENWOl+sy
yyT4e8pk5VXvA1zMB/XBUiJFzziM5uWEh0hHxEHt5RWKnhzTmOutWBybTVl6
wSoJwloNnBuve+B0UcfQC39I4Jxmh5tX9MAl8fA65G2SoEvR8MsRLntkaLPz
luA2pR59cy/0sZjheHpDL2XukKB/+xfJoVIFd6foytGT+yQw4QYVB+GLSKXp
FqaLigyNPF9fhPAY4jD0tSxhtGSInpEbLfJQQhxLApiu0JMhr8xfRVb7OtJg
jjAuMZKhE/U/0tzliXAxHhxKYyaDRIq4GMOBNeJR1kB7G0MGX5mnRar+6rgf
FqHUNEfJIJNf5+e0bYE7w6R0UH6MDGo0WHfhPlucf8WhPUdOMhx31IlkEFdF
eq1a/vFwk+H0TaXtsweBiCjL460OXjK0abd9TDW2xoVXqW2GnCLD7YEqX9ow
K9yYDcsfKQEy9N+urLK7a42TwXSuLgiSYfLTH2wWrQcurubZSqowGRhGVjMV
/YJxC3Y6JI0LZMCJXz/Ged4Zh7IdIxxcJMP9XAndRVcb3MvPffhSMTJ8dNfd
UqAPQn47JC/YS5CBLZ33g1SmNaLKbjzHJU0GTeq2AEUeTyQTxz3z8woZ5M1q
kgzlDZBtp9HJh3JkEC85EtG05oXT5XgzLiFPhlSXiuTGE8G4/HqL0TmUDB9c
Hh66nOKMo3HmH355gwzj74WKg+p8EDPOmQE1JTKsexUpBZU7I+Vfs/v2lMlw
ef+4Qx/WC8fiYt9TfIsMC8xaI6JHHuLsuM512WqQYU6Z+kVdhh+C+4bv4LxN
huTo48KsGTI4Trf8n206FL7VYFzJ8hhx5bnXFqhPhqFaWX03vce4782XWi4b
kWHX8quv4ZA3ctpjpWnGhAxVLNSvuciRiC9fSWOSORk0wpy48gcMcF0tng2q
lmTIv0L3x/Y/K9x5L+m6HWsykLFyPpzyJ3GPTm1+LrQjA987K76j6ieRkbaq
GmtHMriL21F3F5rgJO/7VXHcJYOiJRr4n48HEsN/vaLlHhnKA+4F/PkRiZv9
uVvq70YG9UPeHamNd3HyD+qKL3mSIeg8Ub91MgRJPBNSOOVN8YuC8NwMVSSO
1HGj4MUDij78J7yJJvaIsh9tvrI/GXjunncKZL6LpAs1v9sOJMO3yJXAjIQw
3N9fkbkFwWSgKw/RkDwZhWgHqGZbhpLh6HEuIcv7Drj3wkxv2SPI4Gnd/+ci
tStC3fMzvTmKDFT0HNM9wx4406DYNN8YMvi5meC2Vt1xpedvv7oYS4ZNHMfU
heZAhLmPLWXiGRlOnGEUJ5oGInbBPUnxCWQ4WLQU2ZV6gHz5X4NlHk5l14Vx
hVeUtzJEfRlDCEmGwm6pqAwlZYqMIWP6KCHUMR0yHFOHTknGvBVCSNkaiEKD
lJChVz4Rno0GKYfv+XNd+7rW2vu+12+trZqVaXyZggBhKzWdPB8k1m2TPpdN
gWnMOxHFL6k4gCHBusWhQCHXK9+zzBe3qPUmO+XS+uelKESMeyHpHs6lNTco
YPy5zifmkopDYo4nNBXQ793c/ODPbWf0WkM6PqSYzv+5QrllFRMr9w3FqJTS
/W+wuvjlkwvoYlw+o/8WBe47gttHBNKw8DkBM7cyCoRPRN8SSQ/HHO8AkdEK
CtQkJAX0yxOwkkNXn28VzaviGlWXaQauNt9ZSO5R4KrT5DlUFIuNUJ7fmToK
fo/Z3p5xZKIODX7t+Xq63jnutlbeYHRM1m8hsoGC/SupQ2WSDDy6trN5+SNa
j1VcbuKaMyiIVy+F+YSCY7XhEWUZZ9HS92s2q5ppvx1sUriZTJQ8ulw6vYUC
/Tf7nzirn0GSPd6j4i8oyN8rl7QsMB4Xv3hVzmmnwK6yceuqhjis9VD7nMwr
CvpFeQxPt9igxjscKHpD8yjDTvJ96ILNr/OsUOmi8+U23pj+wMQ9LK83Ze8p
EEqxDBfnsLAHoyNHq4cCVS+LbbzjLmgmSMutro8C3eah0Ohfp3CUR46K4QAF
d96vlOXExmAh28WZx0MUVP7l35cpEo6y93s8MBmmIHAddWyDqCtS2NkW3TZC
gW1x790XG2TRXVVNc8svNK+PS+/sVT+L0Ua26Ltx+j5RJVTKX0m4TXjho/0k
rYfs+9sjZgeQ7ZJb0QBFwacZ6/mGQBb+PN3q7z5DATr+pv9CUDI+Payu8+Ub
BTnftGsmbYPxQlcm1+8nBUoJE8G710SixGfzz6Z/UaDlGJIj1ZGI19W5pJ79
Q0FbXek/E6JhuLD0me1vLgUt7VnsLc1ZSJOzReYCD4FjH2wMPfOZuCEp/Qsv
L4ETVW5qW4tDsGnkXEUCPwHpCGY2r38U6j7lFCq8gsChMk1H1/xg7O7aZJQh
RIB1UKqmgC8KESsVQQlhArv9VXZmfvZGEXtZnVdXE1gjob0gyhOLBHV+XJEV
IUDN65cN0vufreToXixGwEEv4wKfUTSWl3yiqipB4PL1SDM5exdcIbj5W/l6
Ahe6/Oe8iQcy/JP8cPtGAocNi3RLfVLx88nZmPvSBHzlgjoXAmOQzaC9BZIj
8D2ZG9IUfwoNv24Ue7qJwM+h2vMCPvEo8InCwD4lAotBqjIfTrHwQtWl4nZl
Ah4Fmdf426JxQtF0wOEtdFyR62xczEHibFvd9+oEhO0kzi/7ycEFzIbFY5oE
0Paa+4oqR5FGmHzroBYBJw6jyIMZih76JrBO6BAwEu+FPP10fOA4ZTemR0Ap
sa505qkvenfQWjZAnwCzYkVPm7IccoMHYzOGBExlu4f+Ng5ClKZsZQjQ+g6X
3F9hEYbD5ePD/uwmsPkfrbGg3elYQGxy90VjAiczTOYOOgfhLP4jQvz76fim
tuemfeew7Fzd20RTAqnsaa0pJ2dUNiZ19W8LAjddfjlIasahhNw418FDBM4w
NAy4Qj7Y48iUYrkVgb+n01d1OF1ERgI2E5HWBA7asyYeKYbhjQ0Ndw/aESjh
yTfzrknDv04rhEg5EOAeCzjhLBmJuxSTDaaOE6hYOSQ/8YmBy/u+8WAXArjb
8uRooRu6xHJsSXYnQCRMJsPoeehl3JR03JOA+Vqu4KaCHLRnXtVKzZtAyriR
3n65BCRdnrFuwZdAkrhWqky7H5p3//2xPYBAmYh61HzNRfROwj3/6mkCgltH
8rfvyUN3O154+QUTeMsVv2Ldq4+TGdvUDEIIVM5mOHobpiNv3SszQmEEOtUL
gyjJYGQ8wVPXd57Ws37WvNU4AMnc8I64FUUg6/CrH80Tafi39Zvd4QwCPBVb
5keWfHC34A4Bs1gCaSIe660vZeKqxryO9UwCzS2jYt4DMSg1WCBjPJFAuQZW
12lNQ77KgXb1yQTGHWw+1thfQCYD3RsTWQTEq5zeNlezkWzGrmH7DALtsiqm
Iuvz8cK+kpvKlwlkWnZYM8TYqOePcMCvbAJT2q71X71i0b27Z7WecwhMzs4Z
/zzCxGmeA3PZuQRCA5/LFJyLRn4bTPDJGwQMhTUOs1xi0L7Xd6L1Cgk8vW3k
NmEbiuRjxQ4IlBDoVaJmRxqT8eKOCOEPpbT/wZ9Wu+eVoN6pz29LbhNI1o0X
r+Aa4HsF5jkh5QS2uenKm8+moTS7aqd9lQRi+ae2VIldRv6r/rNp3T2aJ6G6
2trOMHTgSfTY/2oJxJnLBH0LoedfyNeymnra3/E40XVFUXhJ9UhwXAMBdZ/q
XY4RMbhvqH6HzSMCqyu/ng+VKkG1WXKLCk8JWM4ye2/wJqAM08Sm780ExAK1
994yov8vi9MJza0E+GoyOa/63bBZtf2hrDb6PKm7x8o0Fil6Pxb1eEkg3rbJ
zet+POaRUu7d/obAy/b7R50GclB/J+s6bxeB6pa1lxUHsvD9+LkTXe8JWJk7
i3/sZ6MsAxeVwh4CemGNhnn/uuLT0y1U0EcCZuoN9fkK+ci8WOPenkECTVnl
3MmwEno/ssNE/iXgeU4iXkItCy9fvbhr+DMBqaHfJeXLC9Bgkydf1SiBtWKd
r6uijuIHoS9fMMbp/koP0GrQuILY6josq0kCY/OPLC0dovF/h69ZyxECUOtY
K8dlY4tsvg0zMwR0rkuGcgtzsbKF/9Dj7wRaLAf0H7RkIb5l74rS5mhe6x2E
18fG4081Br6uvwns3RDQz23dhBp8C7dqcgm8Yiq4x5xho2yZlT+Wlgg8NBlI
V6gMx/8HIVn36g==
          "]]}, Annotation[#, "Charting`Private`Tag$24664#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Lk+Ra4ZUVenPKyuEniGNbPlv+fA/QLCOmA==
          "]]}, Annotation[#, "Charting`Private`Tag$24664#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUl3c81d8fx0UhMq8R+YqU7JRV9Pm8r1HZK5uQ0KKBCiV7lZUVpWwJZW/X
XiF7773uQJJk/e7vr/t4Pd7nnvM+z/N6v8/58Ns81rejpKCgUDxKQfH/X3W7
5Z7aFUMUAofVE3LW4agy95MpLmkgGl0wv7SxDlKJcQmFXCpgdu5I8JrMBmj8
HCr4xGUAvBmSsWM1G2Bsu42L5LIFHdm2Q+uBXzBxIVA5lMsFbgXc3DCi3oIk
dp2AN1x+YGp+XKPSbQe8aQvPB3NFw5rjdIq7whGsyI13QQVPokFWS3dSyeYI
ttf/8cpYSzT8fLTzhTL4CPYslVi2xPMYKHj04PjdwSPY5v00if7eWFBin+Yv
eUKJPbEZK3M6JB40VhWaaFOpsHET7srFB5+B+nfI4qvdY1hFHtO0ScNEaO6d
I1jwUWNXzeSO0X5LBHc9L4LgNWosL8HtzjfxJOAObTZ4EUaNfXxf9hzFeBI8
DvK2OjxNg2W1zc1Mv5wCFc29r8xRWqyJaXLu+kYaXNq05Zy3o8OujRnQpXCn
A/NeY/JpfzpsgCWt3U3ldKA665iHptFhC+885i6JTocxjmRHwVk6LOMjxP+l
XAZcOkLPEGtBj23yGTGj9vgCrbR/CI0aJ7CXclioeWiz4D1qFLbNwoj9IdFk
/VMyCwzUQ78oiDNirfNdK1+bZoFP3NdNC1VGbGjJ1JOZrCwo8RT2kn3NiF2u
/TaWoZUNgx736BSXGbGfB9TyL0blwPv/Bgsii5mw9IfeFjd4c0E6fiD5vw/M
2Lj7xpZi13PB76FioFw6M/Zsv5g1y6NcSN58WYHmMWPRr0N3xnC5IFvJM8HW
zIwt/xpbXCqRB6lyz+cm15mxxJuEKo3OPPCf1lWYUWLBSh8fQtDZPCi91yja
rsmCda+uq5b8kweDK7+7ko1YsDTC72vZefOBNoGSnf0BC5b/QLFxyjEfHvC9
bGWNYMEaZr5vd2YogNXaYCW7YRZswi0fTXv+ApC/qaTDOcOCnWV1/GkiQ9aZ
v74Xr7BgH3sodSG3CiAxPNCo9B8LNlif2EvzrQAWzbATP0+xYnF7SqMfNQuh
qW9O5JoZK/Zogbh5mHUhlPbRTlXcZsWq3z057uVSCKKRtJU891mxQz3ECbuE
QqiRbV1Me8GK3ciIm7lAKARed4v95ihW7Dk90nLD2yLgr9O/rt/KiuX2vCF/
N7kIXNlQZ+YuVizzt6S3dKVFsG5qoF06wIr9R3tTQm+2CJiFHLlqZlmx3bWl
zpOXi+E/vWnT0l1WbBOJuclbuxhaYVuz8ggGW8HzgOOcbTGoZBgfz6TBYNNd
ecofhheDlxv1ugIGg3WX9D74u1AMGdx+FNrCGOxjy1GdhN1i4IrLbImTwGBt
Q6SSgaUEDmvEfTqkMFid5QXlgKslUByftUpCMNizSerBmKgSuNwxfJ1PD4Pl
6kwdLcksAfN3E7aFhhgs496eqFl1Cdi5+H6/YIbB7hjndiatlMDXlpH5ORsM
tpOJjU0CWwqtj5TaFJwx2AbE0a7HsBRu370vyfUCgy172Fzi8rAUeMXaaKbd
MdjUFlfTythSyBDtlBTxwWBdPSc+qxJL4YFipV9+OAbr+E12HU9ZBgzXRULG
IjFYm7FwxfCTZZCA/WW0FoPBaskpzQ8ol0E27/k7/R8x2DNrGcJ3PpRBHdvD
uJgMDJbzP4qX1HllkFHzaZfxKwZ7QsO042tTGbRZ7ns6ZWOw2xn0j9fXy0B0
wI33by4GS+i3rY2iLgcZw//0uQsw2FnKahY5nnIw0/g3IliEwXZYPinyuFEO
Ohj01GEpBlsf8uMY/61yaGF6udZWjsGWVpwxbnQqh5+0n7S8KzHYFI6BHbrP
5dCR9m/yWzUG+15FQuN7YTnU0+hInK3FYEOcAhP0fpTDW65y8K/DYF90XoG4
3+Uw/SJnlqaRzFuieOEHbQVsOV+c52jCYNNCJUN2eSrAZjXsPaYZg5UnZl8S
v1gBX4S2aQ/Iukfz/IjltQqQtylTGWzBYO/lpHhGmFaA5b2rxgmtGOwBPa9g
vWMFmNjQaun+wGCjH8Z3bHpXQLl/1aVfZC3azuZ8LrYCVjsx7D5t5P2JRHAZ
Z1XAt/I5Cop2DNbkDX1tUHUFNOyconIga9JKgH1FbwVMSTULNZO1vxolA2Gx
ApJLjnkydmCwPF89Cv/brYAYKU7MNbIuoN0x1WGqhK+uur/uk7XqPRcKb4FK
cBDmE/Eg66mWtYwCuUpodmVofU3Wz88/1JrXqISo2dKRR2R9InBxk926Et4u
DDpokXXK4u0PN1wqwQB3JZybrK9cn8C6BVVCBk+L9iA5n+50k6WshEooXXpV
7kXW9sf6Q8fzKuE96fEEF1nv2epIMzZVAn9me2syeb9RjW2jMFIJOYSe4JNk
LXL2uvdTYiXs5Y1KvCbzqfWtO596pAqi6m4295J5Gs1d7exnr4Jzr2stOcia
qFTmQi1SBb+jy6nVyPz9UqROXUarIKua0PGAfD7clLl19/WrQNGdp/Yl+Txv
1KUz/nSvAmr8zL2HDRjsJB9/8UFYFVifsrmqXo/BunglmEumVsGBZqHrSbI/
kiEqM6q9Cpz8nt3zJfvpciKjTtNUFdRlO8jz4cj1dxC89WezityvsAU5ZP/t
4ryUzHhwwAjGPdFlGGzkf3vLbyVx4ONa+H69BIMV8ngRjlPBgVsfr9LVYgzW
8OqjcT5HHJiNc/ik5mOwuRXmz5dwOGDpXn5QSK6f69xDPFy9OKi5nMgQ8QWD
HXfTb1BfxIFJ7y7mVjoGe/yKGvN3xmp4Zp0c0pqEwd4plc1ysaqGManC7cVY
DPYfR4FuhnM1sAsre6tGY7ARz8W3hwKroVF4eePDOwwWJ3NWRSGvGsTuXWxn
DSHXbxHL5JEjNXBVc0BK1wuDtQjZNZjnqIHxDkb6v6/I52+70N4sVgP66pwt
YW4YrBh7eflbkxpQaQ5QCXbCYJWeW8ew59XAC4e2sqI7GKxsgnFG9IVaeFqo
2f9XCYM1DeqY8Zevhbw2m+vxKAb7ykXxvxfXamGmVf9QWB6DrdMUjTY1rwXz
N8uJPBcxWM39A2/ewFoACSF2NV4M9rZlxq3MyVogFuWV9G6xYv3UT8XHr9SC
kkTLFZ91VmyGbET/m9+1cMvo6hMBPCuWwOiu4UhXB24FRjcVplmxz2u0rlyS
rYOXC8svGn6wYkP4ttiqQutA+am9i9oHVmzJrHJH19V6oH8o/brzIit2UNV7
I/RGPVQmvs8/IsqK/fO9mkNTvx766l8vCp9lxcq9vHK79W492GIsc0w5WLFl
mAt/aiPrIaVZ/cQV8v1XrsLNV7BcDwmRBxJ0tSzYqox15+joBhCqK3gZqsKC
rX/w6ZQpoREIgoF8lTLM2C1BhOmbYwt0Fs9JlNKdwFLuZDOfOtcG89KRY/In
abCyh9YlN793gKqeUH/WV0psh590Z7NIF4T5XBY/5rIP8kztlO9kuuBS71tO
VoN9yIy/LWeO7YKn2+sXpKT3wfd7WNKaYRdMbR6eKvi9B/LDy04nvbtgq81N
LO35HmSKfuJ8MNQFSd+IAzavd0FpxSePWqkbriqeSg/5tAOnI/A7X0nd0MGQ
PnuE5w9U3/b8WrDZDfXs3lZnqP6ApRTGtPJvN9RoLDYYrm5BwqB8WQdlD3D8
V6uyVbYFJ/9783yNoweo111EOI23gDVLaFMaeoClb/LaYuxvONZoR6gJ74Hr
z1rZs85uQlrMzsfW6B54cYTznCDjJqjcDdXoie+Be/ykX0Xbv8CHrjhrNrUH
OOVvVdO1/4ID3aP3j5WR12MXrYp1+gV/J1IW1Kd74BJN4A3xpg3Ab09NDkj2
AiTS1Mi5rkPJ3fB6ddleiMawDerbrIPXEJpRo9ALZgyy+r6a68BR+snx6/Ve
yP4idess/zooPTffe2XRC4qEoZn22DX48HuQ62xQL5zaGMqpvUEC1Y2fBk5T
vTDRRa++1ooHzG2Py0vzvcCEzU2xSsHDZLcYj8VqL3wpGUj/+xIPLnlv565t
9YLfc8pbaRfwkPhYzYmLvg8kV5ytp+NW4Q+xMbxWtg+8Na8NDzutQNpqZRtj
WB/Yl7//JaOyBI/e6wg8iOoDlg39S5ICSyCnMveyKa4PeK5M0OlQLkHbJzrx
V6l90H3yn/i/2kXY0DUNXynrA+wtfAcVdhHQ0j83G+f6QEecKq9bZQFGfC9O
uF3pB47qJ9a59+YgRbJJZgDtB7/osNfMmnPgMGESJqnSD6dIljpRF+aAQs4L
lrT74ZHencz9P7MguNqZbGDbD85UoRE2gbPgoutgfyG8H+S1JcaMv88A439f
1ubn+8FdAYlUZpsGrJHvxNxKP5x4v5KQ/m8KnMKt2mdJ/XCDas5op2MKBo+c
/DL9tx/ifO4RwGkKPi8GWY6fGIB2kvL5azWTIJH34Gef9AAc1MZwn7gzAVrK
Etn1fgNwv5vw2LF7FF6/oouvCx6AYmqr2fnMUcgrXgyoDRuAD+X6biHeo8Am
lGhTHTcAipaqTx9KjcL4CWbuipwBeOzKwGobPwIOgxtB+f0DQH7ZP+R5NAwh
94vtk84OwnqA5P3QK4Owiv0WRC8yCA8F1Rin2Qbhxsn0rOcXBkGbcdvCbn0A
KFuiSZry5Di3kihN5gC4nXV5vqMzCAFasJfMNQD2U5cC9F8Owumv2SK01P2g
aJiXfrR3EKptO+AyZS98FstseTw0CN/MC1Nez/XAHlXSyuj4IDzaKXfaaOyB
soJw8fylQRiv//PePKgHJJgfF9/aHwR1zL+cqyw9wNMu3lQiNAQmVtv7NKLd
8AebPX/PcwiaT9S8Xf/XAVVp+I8v/Ibg5RwpVaW9A3xoxW4GBA/BSc25lbGP
HcDYnVOXGjUEmZ/UhnuRDhC0+v558ssQOG4MXB71awcjj3wTg+4hcDiqf5fp
dBsUl5d2AP8wOKcNpZ72aQH3//76agsOQxP/PknLrAWw3pcVbokOgxV+NqDk
Ugt0qJZ/dZcZBgvXzRCZ+WaYH6oIKFYbBh/JmpA5tWZg+4PDijoNg1Psws/G
003gcqmxiKNhGBRqbQk9m/VgL82X9K51GKYWUqWOd9eDieyrtyc6h6E44LPZ
y5x6UJCXtqEcGYYPpdwMTPb1QKmUxkQiDYOMTpwrfqwOwvX8HjRxj0Cl2p81
6d5ayHqiwufiNAK7uWnxOz9xkOCURL/2YgSWnlW77UThINRl7899jxGo85h6
bmGGgyeuRT+tgsjxS0pxastVIOd19qXG5xFoHzl/PZ+2ChrDjw6eaRuBy+HW
wag5+d32vfFtD/8oJFbLNn1XLoVu4lHCpfOjUNdLObTAXgq1Ytc0o8VG4Umb
e5TDcgkkZTWdMJYbBfTRNYW7YSVgk9EcOq45Ci8V3L4enSyGxU+t4UsvRqHG
jpD/ivwdRAzpiNr/OQpg8h6seQpgsv3Eb8u+UVi48+xF0XY+dNJpGdQOj4Lj
acdK9b58+B70k813bhTWVlz7FN7mwxO/zhjanVHInPPQPXeQB79fdr/HnB0D
jODtptdTubD7oP+jsPsYvH147BXxIBsMZG+9k/Acgyna1w5BrdmQc2QxQMpv
DE5pzk17R2aDZdz2UyRsDPLf3uYPO58NdU3cqnopY3DRbaRszzALAvlu/3Zt
G4OSZHGuioZMwAwSNVu5x2HtPPUj9ql0cEh+rvTz9Di8jOVLeVmYDo0Oh3K9
Z8fBu0GUeCEoHZ5TsQiMS4xDDtPTOa9L6TAiKb2zpjQOwVc1L5a+SYPEt+7p
nA/H4ap5hSKjWiqIKtIc2FeOQ3fEfJPGvyTIy8o+P1w7Dj+vvvic3Z8E0my6
emrN47DslVJolJsEV5fi0kR7xuFCjVlAiF0SaIeKaKwvjsMfSs6LPVmJ4DSi
FefGOgGTNyMNFv0+wR+lX3WrnBOw/O3j8xilT/AyJxZv/t8EpM0rardTfAI/
zykUFSL3qasnrFpeJ0DsuacLlOgEXBvRO7nk9RHKn0ZfCrk/AbacBcSdhHhA
xy5b7D+aAItpvu4Mm3ioV5nwf+QyAeUYftoOoXho4xQc0fWcgJAqJaZXJXEw
jiv1ZI+ZgAVW2SmzofdAQTfW8bl2AoavKI+ZScTCjRT+u/mck7Dp478yJRoF
0nGMgs08k5D8cOzjwZEo4AvbnR/lJ2u9bO8nw5Hwz23A5qjYJDDcQj5rBETC
N71gS2PsJMQ/N1HtWngHmCMbhvv3JqFnQD84ojACKLYn2FgfTUJimGB0YlgE
EAhtfYLOk7D82p5h534ENA+n6el6TEKGi5NsMH8EuOWZaKW+m4Ts9NXd00Lh
MGVVq6JWMQk8gtMxoSdCocPwG5Uluc8z4eJGPdtDoEzjQ71T4yTIUKbSbb8J
gUg5F2xC5ySUqZvYPaEPgWtMQlfXZifhvqXQvAvrW8iuDpeKoZ+CK7vlVX/l
guHFf1ZnZizI94h16YW+UX+w0ZU0Gr89BTc72W+nffUHbd8jb4bsp4BxPWps
1NUfBFdSN34+mYIOuut1Lif9ob9oubbCbwo+8jefU7XwA0lNJ6vonCnIL7du
6NryAR5P5ajw/CmQNC60S2rzAZoCtpY3JVOQUm0r0p7oA5OcpRLetVOQYbv+
QkzDB0Lmdvcd+8nj74yt0md4w7K7f8KNvSnwH4kez33oBatGoveSKaahSzSv
cuCaF1ivYyhPU02DVgE+S4PPCzQEFmS4aacBt1WTr57jCWeCAz8xs07Dnqgw
zeGb19Bt0OGwf24a7psXhX6yfQViBEP6Ia1p8Lt2zp7J2xXKDDRr3uhOw5Tb
UWN9JVdQxik5ozen4UjBUwbho65gFnZhLN1kGhZrQ2ZDgl9AsOTxbJc70+AS
0K9/4uNzWHSpUmd1mwa1ihuds0Mu4DRRcND0chpKR4b8+pJdYP/a1wK319Og
LK5sc83BBdg4Y7lnfKfh3sYHmUxKF1Auf7yaGzYNxTdaxTVlnCFp/8wbrbRp
YLa5EySQ/xTE7LnQI1+mgV/H/lSmz1Mo7WT6VfR1GjSKPHQ+GTyFzsQ9U57c
aVB5NIUb2HkC+4qDwvjyabj9eYHZVu0JmAUE/wjqmgZGa84D7b+OgGFap238
Nw3XuU63mhnch17cm0C1/WlY2Yy2TGC7D5EO56i7DqdBKP4/xGngHrC2mVGN
Hp2B9o5m/IAJWfs37a8xzoAPuqxobn8XmHc//DolMAOsSf/ajD7aQfdXmafJ
52aAof97iLatHUSYdK8JCs2A5IQnRau4HTCVHCNeFJ+Bx+Z/0xTqbYHx6ZOl
G3IzgBs6OUezcQdOLF0bd9aYAVFq+XV1OxvoiJk229GaAYe48sgpGRsIUXk5
8lp3BqQwbg4L1DZAn5I3GGw4Az9IAXhs1m2gu3WqJ9FqBi4qGwTz/LEG2r71
pnbnGZiQV0y/oGwFR2s+5gokzEC9rmUfo68ZjF5VUZ36TF4veP3sZTkzyK0g
TH9IngGjga1WEYIpmJUgrKxfZmBcC7GzNTGF/G9TLhQFM5BJlXX79xUTsEwQ
kJ9omYE2SgG99dNGIM3d0RvXNgOT726d7p0yhONxLg8Nfs7AZQPOIOskQyiK
akpo750BbE2/zysBQ6B/e/ewfGIGOA/lrH0vGkCZW3Zj7OYMsA+e+PjgoT6E
bd+8pf9nBv7bXWA1ktGHO8/2thh2ZsDll77owKEemZ/Wef+DGTBhi3wRFKsH
dvfWgp2Pz4IWMaDlY5susBpL6eienoXXTrt7vnHa8FC6cuS4xix0p/7NPGOq
BrXdAzllWrPw9HZALj+jGrA7rnve1Z2FEKqb99caVKEm/Zxgk+EsLD/LbiFd
VAUMZ4STl/UsrLsOEVQ4b0Dlji399rNZ8C41qP947Bowx3pOprvOApe+5WF8
swrYXfqQb/ByFlzTGJRVg1SA6WGXcYHXLCz8SGr/xqACd8avpDm+nYWD8AvX
HPiUgb6GEZlPmgWjlh98YKsI1ubCzFGps7B9If7X0wuKULytPKeYMQuXjW/q
yO9iwUrSLTgxexb8bppE+EdjoTB5bsCsZBZEhzliyj4CmPuVPeppJ+fTeXwt
tOgq5PH1KXp1zkLCZkzuNYurcAxHZLvQMwvzn/eX/h29CrlbZypDBmeB4fah
0k1TBaC6G0qjOjMLsr65Mc4M8pCtZpNUTX7n57uNulxPlgNpMX4UdmZhB/Gn
jbGQg2rG6bGa3VnYtX0v9PmkHHT33eKso5iDmcsu1cORsvD7lmlYA90cfLR5
eFAVLgOok+6rVt45UGh2ZsF9lYIWAyZuNf45YNDai5p5LAW6cp2lPwTmwD7Z
QT5dVgps9jQ224TmgPuafxJV8yUIDLjx4OelOeCtunprA38Ruj+gJr3X56Ag
zjkbe1MSTD32t/TV5uBb7qZk8hlJmLWqiurTmIMujgAT1oUL8PusfFe/Ljkf
AafT/ecvAFeuzPUhszlwbh3nji4XB5sGMenxR3PAVV3vWU8vCvh0fI/F0zlA
RTu25CpEwCUo6/GE8xwwaXT6Rt0XgUAtoexJ1znQLJjx2WwThpwhgTMzPnPQ
5mHgzxEnBFt4bubF2DloJnGo/DEVhOhPSy0J8XNwkpt38SizIEjpFHneTJgD
Nbvh5L/N5+BpgdZabfIcdGMfnvaXOwdEV6/OjzlzkBrlU4U/cxYWji2G6NXP
AZ14xbUevjPgV1qgQts0Bz0qImN08/wgcN9zr7plDkZubd6myuSH2x0nHcR+
kucXVIoUusQPE5EaGjTDc5B0nmqFRocPBk7nH8cR5yDe5dWrJP3/wKXHo855
fQ4sKVfLDkk8gPFVdxPZnAPvyp+WCSE8oLc4t/z+7xyMHgxd9Ww/BT9zOFqd
qOYhPJW2OcCYG5quvAoQ4poHReGSzrh0TrDFq6JTp+ZhqPdfi4gBJ1B9Yv8T
wzsPr7cmhxuoOEGRIteO6uw8iJ17iD+w4wBc84zKpMQ8aM+cMlCRZYfimzeo
olXm4bTnuIIvFQaCNMr8eW7Mg7Ic/7HgJlawUBamTVebB9eKy06aQaxAKUXP
UKI9T/YHVRsVMytos3ZxDJvMQ05oaNq/8yyw3G0kwuM4Dy88ou3i1hmhsrUl
J+3xPKie56N+9oYRwmovXxB3moem6ga9sHOMIJ3HLY2+mIc3dvtp96wYwDt8
ErH2Jo//0HDPbIYeuLXt9dJi5uHezWWS4qnjQLw21CcWNw9m1xPUdFtooRZR
NSr+MA97g6a37F1owV5cxLw5cR42dSH1Uw8NFJ4g2S5/nQcP4gFm8T01aLY/
cxWrngelntKSO3pH4XTD4r+i2nnI3hQNjD5xFH5VGHsgDfOQq3j+XlIrFcRn
XfHRbp0Hr651aVCmgsXg/bdPeufBV7TL6aYSJXiq+icWLc6DoNgttVo7Cui1
vGchuTIPYWkSXvESFHD2mQZXDn4eHnEFGimtH6JtySxRqevzwHSYlnWX+xBl
2/0UEPlvHm5Ku/ZZvt5HM7+VOD5hXIAhepPDPO9/6L+GeBEC8wJUxmAX7c7/
Q7VGXy3dxSzAu2Lei1c7d9Bf1Mq3rU4uwAEy/BhO76BXrbsMtM8swNKfXxQq
ndtoN+uygpgsWY/Ixr2+tYWeEW7/++XyAhjUN4q2YLbQZ/C9WEBhAQrVhAQP
236j3A4uF05hFyAltWjn4tXfqG0ThQCd+gL0XhXyMRTeRP++4KJbvrUA3feJ
zlixDVQ9bK/5jvUCuDvVuCisr6Of0qZ8p2zI67np7O4WraNKPen7g3cXoGtJ
+3Qjdh0NEbm00fR0AYLazCqs6kko/4T6cKr/AlzR1m6hDsSjb+oVcg2DFuDx
l5/vbv6HR399EQugebsATVuVRbzFq2i9E6P0w4gFuM75fvDUygpqS9sbfunj
Aoi8Va48b7OMZkqZ3qjLWwDNA7On96MXUGYudV7nQjKv0Y6zltgF1O1Afuts
yQJwsuvqBhLnUfUfPKlBlQsgmaEQbK8xj+Itpw90mhdAJ2gob4ltDpV4c7dk
cmwBtqt4qt6PTaOxj01CIyYXoJNB+u1B3DR6aKBmqzRD3o/But0t42m0+7Qo
a8biArlvWwXhv02hT4tJjo4bC4DrwHE8qJ9ARz9MqZz+vQC33e6VH2pMoEpe
3ad6/iyA6XZqtt7QOMqqUfBDem8BFnP6+Vg3x9Ci6Wfn9qgXIXa7Q9gKHUV5
mu33vh1fBOUq3hDJgRHUP9u4z+rEInD2/PYLdxxBjZ5f8W5gWYSj1IcwnTKM
btPvj7/hWQTeAFluudNDqLycXzTXpUVQpwr7pWLWjw7acMl+kl4EvvUdM0qG
ftQ57PsQn9wi8Dz2fN5f24fmLAxzC11dhEdmBfKZon0ob7R4suz1RbD9JcyR
zdCLUm4Mfrtptgjnhq4JiVB0o595HHSGLBbhknSDrLh/F6qgemTDzGoRvqD5
Zk30XahLoqi0je0isN0RSDnF24kuanlVPHm0COs6R/7ijDrQ9izhllCfRTje
TXhNhfmB3husvsfivwjFK2xPxfNb0aOUBnQxgYsg/smpqka3FUVNX2slhCzC
4M/Ef8ejW9A8mr6+rNhF0HYT9MkTaUajbV9Nt2QtwsmwO9H60Q2oZASLj8a3
Rdg88WZ19HoD+rMyQ6Arlxx/1vHV7189So3psR8sWoRViIsSs6tHXevOEeer
F0Hf67yAzY061IK3a+dI3yJQFz1UM3OtRhm5nIorB8j5eMmWz2/i0DoM+9Nn
w4twz0mbO/wpDhU8br68PLEI5bMPBs84V6Frm4uDXcuL0MQJzPfCKtAUUnBk
MH4Rrs98ecnKXYEarIhpK5MW4dVvxjufv5SjZZNOTSWbi/Dt2DM1pLUM9flx
UPjpYBFkZJx1e3hLUenG5MfGR5Zgca2Ut7asBF2qVhFlOboEwkTcVxODElSz
6E2K3/ElqKGJXHSIKEbZEznePWRbAlrP08ZPTxWhmS4Sj66ILMHKC1nTby/y
UbPHPcKbYktgHpl51lw4H2V44LKQc2EJXL/hew3G81AnqwoLPpklwHozqXBe
z0MV1K9r0GCXICNDlj5e9ztKUlmhrlNagl7ziOb4lm9oEoTUu19bgnah37Vz
2G/oUZneKyT1JSD5sydKyOegnacthQYMlyD5SbD2l+tZqBf3kfkwkyXYjG36
ud35FZViT0tUNV+C27JUnzRMv6JxdKscVdZkTT3bPu6cidpsPTuW+nAJ8pcs
41trMtCtttDZJ95LMFjaxIbmpKLj9AP39nyX4LNHBSpunIrWa/KsBQYsQe06
tbwrVSoa0Zm1+/kt+f9lAcknrFNQkd4Wtp8xS/DBjZiTLJSMMmOYPprELYG+
dQBueiIJ3b5pxD//YQniFX2+34xOQhsH5sV3E5egO9GCtuFoEmo5cuSGcNYS
OGyefBCx+AlV4Vb7WZSzBOwvHrXo3PmEippH3MTmLkFo1iGn5GwC+nec19q4
aAmi/SfPXFr8iEZOK7j5Vy+BJPYujxn1B7R56Vn2TO8S5JwZHgxJikVzhHAX
HQeW4Oxe68NChVg06v7Rsr9DS3AgckHSdzgGtcZHNjJNLIHzDtsBFWcM+o+U
O4EsLUFDxZXnQxlR6PSF7Ts/VpbAP95iOEo7Cm15gq4aEMh+UPDTatmORKN/
dfx5uLEE0x+ceF5pR6IX/qwwfdgl8/qgIeNx4h3KIXcx9tzBEphUYm7o10Sg
ey9cefIplqHt2/Gup84RaNsOtXDrsWU49p2aers6HLXdF1D6w7QMNRRvUZOQ
UDTuqKWL/tllsN9Tq/wWFYwe3OGU6RFchkbmyngrvmDUtqF7S0d4GX4KBavt
fw9CJX2UX2hJLAOG8l71RE8g2noo5K56eRmwh+LO1uIBqITVrHyL/DLoTXcK
J7b6o9HVH3evIcvwRK+/O8zOH7X2YPRQViKvFxDQb5/mh27/2/RENZdhN+e3
AyLji1qYfcPitJeBEpVqVJ/wQevL7Y9c1VsG5jFq54EAHzTMdcTnitEyXHpW
5KY26Y0K/qn2l7ZeBprzp+mPf/ZCjTaC34q4LEMYp8MmS9krtEpXWfPr82XI
/Hog63HpFXomb++EkNsypDxyuiKT+xIlPXocdu71MoR8vjtzO9cd9ScYvOML
WgY+jnCWgh+u6KoGo37im2Xy/dr/+KWhK6qb3cLKG7oMAhxHz92Ye4HyPJCP
PhVJ5hOedf7H0Rdo0dLp9xwJy5BuyJMeYfkM5b4xYhzzeRmyMmmn3u24oF4Z
kSfZkpeBurKI0zjWBdW0O/aBJWMZQrHxIUwDzuj87GrCibxlyN1++tXB3gnF
TBanUDYuw3QX9+FY+mM07ISHR2nzMvAG3n3CceQxSqegYuLwYxlEjO6Pelk9
QinjehkGO5fBV/vCv7hzjugvvTXXryPLMNMvYn574AH6yKvkpuX4MmydlC55
pPoAXf3uIYGZIvNHa8uvVN9HZ+hPzL+aJ6+v5/23K/8e2t0kpKO7tgy6DMYv
8krtUc3fa8LHfi3DH9xUpDrYo61nSo9W/F6GIq8DBeSHHVrjea1C4N8yGAUb
UTDN26Lfr9ic2z66Ark8rtn80nfQkG8fdz9xr8CRBzRySjLWKO24zaD+fytQ
8o9pJqTSCvWjE8mn4VsB+RAxS1ZmK/Tl3TL7p+dW4L8F3VjDhlvoA/6BHhXJ
FdgxQVsIuubook5Czs6lFWjkbq7jqzJDbV7fCfwuswKHRokp6iJmqOnYxtWT
CivQZP2M0ZHJFFWNYczEX1sBMxyttfSuEdrYMOCTpLoCL4Rz+YdfGaHYXwm3
DDVWgM/ttCHNESNUTkcUU6O7Ajp3HyrimQ3J94fq60jzFcgnOJnc1bqJHvPw
NrjydAVcwwM1rS7ookUbhJ0a5xUos3w9DcU6qK29SeL15ysQRKuMZ2DSQRt1
LqzefLkCzL731NU7tFC/MxOej/zJ+Y4EsgY81ECl36ue2wpcgbB/QemfRtXR
efqitpdvVsCOTk8vRVMdVdl6wx4cvgLvGLQc2y+roUdbL2enxq/AF4fmg37J
G2jR1TRdkYQVyNrG754vvo7a5jP9yfu8AlKlNHfWFK6jjR8WsdWpK3B0QSj9
k+411NcxenD42wpIp8/vyMUoo5SY9SOM9Stw823uZR0fLFoQaP4lunEFOiwd
8AlCWNRmr1nzVMsKOBb8/qiYDGj9wqf3Qh0rYMXOFPFXA0V9yjTElQdX4CEV
6UzvDwX0knhp74/hFbBu653Qv6iAziafcdUdWwGMJMd+10d5VOntTv2taTL/
EbzthtsV9IjlFxPX1RWgD5t3zTCRQ/N6WQ8OCCvA5ewxpjgki1rfeJ3qv7YC
CvpmSpYmsmitpCEp8vcKYDGqbhY2MqgXFZXftwPyfi7G9ApES6EUXy1zZ1lX
Qc/QoF3jjiTaTBh6lMi+Cpdyn09e2b+AhkjqSVicXAVPu5z13csXUM4y5W8D
/62CPabiKBNOHJVoEcpuFVoFKyuNj7e3RdDfdCkP/EVXge96Po+6rghaoX1K
REliFS6+XO2pyhFGrw0yfK2UWgURXp7K4idCqMXCr4zv6CpkOmeefXhGkPze
d7B/qLgKya5JL63en0OXHRbOCamsQq0AA5Mm0znU+fdQWrLaKmQfRd9F055F
31DhUqINVkF42uW+C+8ZVPeGrI2e8So8Ppg3upTNj3K8zeVnNFuFwrX79+Xk
+dEU1pSkQKtV6LKxnLtrzYeW8wd+dn+wCh9dPsvNRf+HvrajsJRzXAVBppO7
/IM8qMpXt/9+P16FxLpk7iRuHrRb0iHB8dkqaDHMOl8r4EbJnfyDtdcqHPTM
ERpZT6LffdtM//NdhX4xiwZ3F07UpUWZa9R/Ff79doLkUQ70UFs27ubbVajw
o353J58d5bA8FXs9dhV2hFansgIw6HhytCFV/CrEWhw/7kCFQVMWGNhrP5L5
Uz6Nk/ZnRcUdKaKvJK/CC67O35rhLKjKq4V3YjmrMJrIt0YZxoTS1VrqrXxf
hatd9FusZYxoN9Uwc0Y+ef4RVXGKRQbU/G1b+OnSVaB2/7c+qnsCdfqQG8pa
vwrG3hrHC2yOo6V7HwLrG1dhSCZHi1hCi+5ZBng7tZDjXcHXnRho0UCBW896
O1ZhmEv0P70WajQhh+5W5NAqFH+4lrV8/yg6w/jHSGl0FW5iggw/jFGhgk9n
dH+Nr8K337JmUbpUaJ5MmYr+7CqUhbx2CFehRJuq7cRYiaug0L69aGJAgdLx
6wnWr63Cs8NB84OqQ0TX9yqf069VWHb/KPFx8gAZvYFh690m+yv60xEBgX2E
1F27+44SD+0/Fp3v/91BpKRythSP4UE6qsd6U24HcY15v7ZBgwcSH1uK0qu/
CJXZozk9BjyI5uufcuPYRk7OnWpnOYkHbiZRJYrXv5Fb12ia6rjJ//+o9bhk
YhNJ+fKr+ul/eFBMXljZ09xExBx+FPScwQNSYLMxcOYXorj1/MM7cTzcziX2
Gh1dRwKMbaIVJfFQEcDcoU+/hnSUa4VtXMJDzKtCtwecJMTo9Vkfvct4SHKc
EDtzlYA8oOm9z6JMjr81DrrcuYzk3sfdqbuGB+Epv6kIimXkd3vmraeqeODv
vCQB6BLiGeGp16OFh/NKh3KFJQtINJf4lXcmeIikbp1JXJ9FRl6elFI0x8PP
7kdthpqzCO8klfjGLTxc1jJGdrNmkMyUUT69O3jQ/Y6f/+I5jeBEg2hZHuHh
YyZFGVPgOCLbz/kz8gkeujdW52Rcx5C8V1/esTnjgaoltP1n0CiS8rOZ+6Qr
Hl6k1isctg0jPM+NpuLd8SA7EKsasjCExPAupp7ywMNK4dBq/39DSNDjY+Kn
ffBgyJTi12YzgBw5GbOR5IcHX+OQ4tT3/Yh77dmSM4F4OKDqz1ZY6EMcWVRA
MAQPYT9+0yo49CL6hT564rF4uG+qd0XStgtpN2flyI3Dw/X6YWHJc52IytGU
UcmPeDCdZRKYPuhAqnMuJhZ8woOVBdXHGwPtiJxh3R3pJDxwdZeGXbFrQ/L2
dYVKUvCQM+KVzW/5AxHJmCbIpeNBebZQvvVhK8KzffhMIQsPm9d1rt5Wa0Zi
E8PlcTnk/Domao2lmhAm1dOHaC4eVG8vvH8j24gErX9vqM3HA0e1BiS5NyCU
8WiQUhEeiqbszhyNrEeW5D0+qFWT/TV6MSXHqhqxnjth1V6LB86xOAb/i1XI
6NsEAa0GPNDFlIXIiVYiN6XFljub8DDQtFZgaFuOdIxX5ui24iFwRjbSnrIM
ue6v8bS3DQ+HjfelqiZKkBrxMRmDn3g43XZz4vqTYuTy4IN/A114eGT9tX6J
sQgpeP2v2rgXDxHfw8NFRwoQ0fNvfEf6yfNT81koxucjaV1cquZDeNhv+i3o
8TMP4XX9emJiBA97lY65xQy5yHu+Kz2W43iYsG5Z5o7IQZh/tMZMT+KhVHDo
b2VnFvLmqYmZzQyZT6Ai5hhDJkLFvcw7P4cH9gueGSYPvyCv6l/M2S3iIVeH
sk4uIQ3ZekCTubSMB4z2q8pQujTkEea9w308mU98n32sfjKyXCl4EU8k81XF
8YZyJSG3bUu2HNbxIFTrwVxs8wkZPXG9gvSLXD/sL//Q8X9ADIoHXj/ZwoPl
y1y/CJMY5OctO+Vf23jYHdWqHLKIQq5Tb9G4/MND5XMbys7Yd0jtd7+OrT08
SP2Mr6zKfYNcMWZ79+IQD6lMgcJ0Tm+QgsNUw50jBNjFD6bvz3ohYplS3C+P
EuDgsPkyc7YPkq7bMLlHTQC2SLXoJ3TPEN4d/dTXxwnQdAfz5GDsKRKXPHuX
4gQB6F69q6RztEZY1J3EfBgJkBeyNUwnK4ZLqmOil2chgFehVjrhmC1O8sq3
lQ0MARCD6ud7oQ9wNXnqrV85CLBzl6X7X74LTltoOeM2FwFO2+dQn1R8iZtI
9Pfn4iHH66ndBZZe4hw4BWx7eAmAM3CRHFP3we2G1SoF8xPgv0ifxjexQbg3
1Jb8imcJICJKMqQc98Vxvd49/CtIgL4fNX/u3H6Ly9yKm8wTJkCrUKnfsbxA
3GVHWdw9MQI08BR9/3QhCNcy3/eR7wIBXgrInKuWCsUZWTx1H75IAPqmN7Fd
SqG4xT5G0whpAqSdpbr2iikS90wjR05VjgBLr+19qU3DcUcb1Dgo5AlQKXM7
+7ppGC5Kful36VUC2NzZcXa/GIE7U+DX9xjI+88Y1By0jsDlC58pOK9EgJMx
3AKE+HAcNrkmYkqFAJ9s+80z+yJwXSdvPX5/gwAtlcZf8udCcZYR/7R01AkQ
f9xk2sE8AkeiiROj0SLAWLn3B0G7cJyHpwx9jQ4BGgXcmLQbw3EntntXnusT
yO99oYycE6G4hEdPWiUMCSCrqV9NSIvAiS4yfFk0JsCLmudb7f4RuIpb2f6f
zQgQMWN0lm00AKc2oGprdIsA/+ZVm+NK/XDDmotKjNYEUGcOeuZaHoi72+jL
32xDgDIzAy0q6mDcHwV+itd2ZD80nre2tvLD+RdWT8rcI0Bqyp1l7y0vHJuo
BY74gAB2pMs5OB9fXFrKzsd0RwI8e4UoF79yx0lxv3e/9YQAj56y0gv99wRX
/07alN2ZvN+KOccuCyec/vFeuZ/PCKCfj8uh8nyCm/F6zOHvSoCvx8J1j88Z
4Z78PbF19SUBrhQQbNujUOTwcVbfbw8CPKdTMTjhaIALW7pRkONFANXt4Wsi
ybrIf1YLEba+BIiRvUhYUXZCcgZ9HvMEEKC688MV3ruuiII2n3Z/EAFyhNMc
yvZfIm1NOLGQt2QddTZpK9kPMUPM6VXCCKBCP3VKvjoQWSn6u7IbQYDX6cbi
qfFBiKtYbGthFAHOKgVMyhaFILRpUl8exhIA62GfyU4Vhbw/1eMvEE+AjR8L
hS9aoxDBqEe2Yx/JOtvkx3RLDGLzdH6yIoMAhu9NHcspEpGNZW+c01cCnLdf
oHVnSUK8rE8niOQQwJuh817kbBLCPFzlPvudAETBvTIe5xQkUcfM9EM+uT6M
SzpG36UgEi3bcvpFZH9aulCUu6ci1WgMB10pmeffk4Z3R9IRrZJLW3XlBPDI
G5v6fOELMi7e3edWRYCkyJPq/dSZSCKexYOqhsxHXoS4tfIVsfl6UzC0jgCu
euudXziyEMG7MV0cjQTg1/qF7efJQVbODrkmNROg44gda1FQNpIze/KMyA8C
ZMk+jcuu+oY8STJrL2wnwPuHkmUUkrmIlGWCC9JJAJ3Lm88HR/KQP6cm/2vp
JvvRiHLjrXY+wkJHuMu2QK63asMZ/JsS5Poizd53BiI0VrEr3LepQ/I+w9l5
SyJkBmQBNHcim+6bNLdvE+G2lDC3YFQXImv8BT9xhwiVvkraz6y6EFcp8y4z
eyIU4/2L3I52I5VMTIVD94ggb9n3laDXjRzg62MNHhKBO6a8gaTRjWBbn7v3
OBKBi7buZ1lsN+KbJmKp/YQIqZoNYrNL3Uiz16RiuxMRBs65IdoPehDaW5Hn
VJ8RwUE7eDuOqwfRuHL9eNML8vy3yg5monuQMPZ/BEV3IhjZ5SUYhvcg3Rvf
uqtfEeG7eCWbI6EHwXTeLlLwJMLxzqBsEWIPYpTFHlfmTQTO8CXbdtFeJC7g
x0sZPyJQRe47HPj1ImM2HlYFAUTofKccTsXfi/DCReULwUSoIB5pvaLch1if
WhDMeUuEXK27VG0CfUjqdhydcBgRxnyC2vrE+pDFPk1SegQR6ra7Vmcq+hCh
PIreM1FEuFJr4It16UMehhQVJ8YQ4aP/ua853X3I93v34nniiFCoykJBcuxH
1lV4POI/EEH7y6sqklU/IsXfbc3xiQglY7HptO/6kef7vipRiUTwn9gzc3rU
j5SNyAkxpxBBmK5Vpu5pP7JbjKcPTSOCX0muusFaP4JGJq4d/0KEfKWBYpHQ
AcTr0c2+gK9EUAo89ssqfABpUKcppcohwgkaT6wAdgChPl/5wes7Ee5VXuH/
/X0AUaN6/Ho/jwjV/LW5aUMDSMjUGRv3QiL4fG68ucExiHRWDl7bLibCmcTJ
wHXuQYQl7o2wSxkR1EaelM3pDiIGLijDRgURBhfvX+yZGkRidX+tO+KIEPZE
QpAlfRAZEcvoX60h87krpx8sNoTwHDcru1tPhPFvpMQXKkOI1QJDwnwjOb++
6G588RCSUlfnebuFCJe+eMwRqIaR+U/P7kz+IMKeiZ5eTN4Qct5d+IZ5BxHe
FZYperQNIQ+MJkSGO4lAalj4nHswhORcesdo2EMErUeDtKX/DSNrjNd+9fQR
oTTT9Onsg2HkEv7vgPYgEZpYKail64eRZy055e3DRAj4fC1xm24EKUu1/qQ6
RubbB3+pd4aRf55s3k0TZH8UP/MODh1GEItWW6VpIpzKEf1hR457XX6lWjNL
BMlvb5bjFoaRejZJsasLRPjymdqY4tQIcmxjjql8iVwfuW8lmXEjiOrP95sy
q0Q4WeEj94VrBHnzVWOogECEY1YK/25qjiI//Q8rLqwRwZxge82jdwRhtin8
nLNBBO+/K1EzmSOIPnrXR/g3EVwf3zwh+2MEieE+ZZ/xhwiq9V5RVOgoMvyn
U01gh8zTXZl3SXAU4e7zEU/aJdf/s/M2dudHkVu5siz/HRBB3a7lxufcUaTE
7C9jNwUJOKIkL7Z6jyKM1BUnfKlIcNuic3u/bRS5m/+STpaaBJO2vVFO26NI
rQVCu0JLgp7c5ON6EmPISdrDYwn0JIDlqnREdQx5WlhLpcNIAndz9cEG8vg2
S58jlCwksI4pvLHMNIacoVM5LMKQYMSBju7y2ijiXnxs/y4HCQrpwv/QPx5D
+qxb/nFzkYDvj8ws/9FxROxE8N+fp0hwdUqY9pfeGOJXqv7Hi5cETZ9aPj9V
GEPGbU78luInAfeL4c9j/40hMoydG4sC5PE030uOiIwhYeXha/GCJBjg4Th1
dX0UWbTVI2oKkyBi+ZX60u0xBGXG4A9FSVDw+KLnC/cx5H1l/3KBBAm0pwUE
7h6MIev2sYt2F0ngL3yWQ+PnGKLKajJ/UpoEvDsFeWntY0gSjmu2XZYEbm9X
liXyx5Cde2NTr6+QgFZZWf+rzhiiz/Zp4uJVEtz/8tJOkWUMyaqxHJtHSaCz
hmUsvjSGUD7kG3mvSIIfhi3CN5fHEHOO2UF1FRLQswuqs3mMIUV1qf3710lg
UhSsbrs4ipxwtOvNUyPr8d8GPzNHEduT57vvaJJAVuvKzxOBYwiuYfknhw4J
Do1CUw9+jSIcj7Paf+iRoIs9oFDkyDjyiNvhxysDEug1vPvjvj+CNDeJt1ww
JsGlIQnqDXQMOf10rXHWlAR7jJ/wdM5jiCtPfn2MBQnOOwQ8zHowinS3ONWq
WpGAOI6UPyb7VchZunr3NglshOldm3VHEW/eP5XfbUnQpi0dQs0+ioz+KC2/
fZcEGKYda9/JEeTSM7dStgckmA+7Jf/54ijyhk+huMWBBKKM8w5ZG8PIXPte
gftjEmCfvLGo+zeMXH1RnSfuRIL2vNdRpocjSPQZr+/TLiR4R/nJ/wkyjBB/
KuZEvSD7d/P73i9y/V53o8q67k723x7+5LGsYeTz2aYvO69IcDJ/QO1MxBCy
3RWQnuNJgvAHcmLvUocR3ZeqqVY+ZN6XlK34PYeQTEG6ZFZ/ElyTPjdGJPeX
I73tn5sCSWBl6fykpngQMfMITXB9QwLKsi9BJM5BpEBI54NoKAl6FT9ZivAO
IfT9zHGT4SSI9bJ/bZ49iNh69sa8iyTBvkc66fS5QaRKJDpKJYYEErENVFYD
AwjboOG77fckEHpubpB3ox9x9OYMz/pAgqn9kOxC036kWWwk5NYnMm/flevy
yf0I7/CHN8xJJJAW2nNMO9GHPPe1CGpIIYF8a1nHoW0f0iXBG/A8nQQHAeeu
9x7rRYRGp3yFM0mw6JF43PN+H+Lln+w9nkUCTr6hom7OHoThBY367W9knnwE
vLZUD/LhniPrYi4JNnFSQj6B3YigWd/ogwISWIhRrp4y7UYKNa6krhWRIHdh
YqXOqhPBIokPXUpJQLNQINH+thvpkDgmvVNOAq2zEyvJ2Z2IKd/DPY8qEgik
L4RpRXUgiyw9jZQ1JHigw5Boiu9AnKjkQgPrSFB2rItU9aIDOfydYHiikTyf
qwEtS0wHErJIyfuumQTd7MZ3Uip+ICeH7y2y/yDnox7yaojQhKT/6Pz+oZ3s
N27F9DBSI3KpUvrF6U7yecwzBE8qNJG//z9AWjcJgq0LWgQsGxCNzxS0wn0k
CKWmvjjQUIsMh9t3fxsgweDumbE7vtWIrXdH3KVhEqiOoNzPj9YiG06XbpeO
kuCM54s0EcUq5LVtnPDVCRJsfWM0KJYpQ+iMDjZqp0ggQ6z3FskrQd7fsK24
Nkvub5ZfFFS4S5CzV9p82ubJ/sf4DpFs85E8EUkNnSUS1MU7XLCJ/IIgPLGY
/hVy/ei4xt+ST0LaGPbGTAgkqLronKqnn4QYHd5OmyCR69H0Xi+Hqi0yt97i
YLNBAnN9TW0F+2Dck1lxmaVNMg+d+hJplkjcXl/U/sM/JFi4vH91tiACF9y0
07T+lwTRUrnc9gLZOI5Sq7BnuyTwuym4XZP2HZea2WT0b58Ev3nGC3NYc3CS
H0RPe1KswYrphR/X6ktxVW/fLVFRrcF9Fs7XevGVODWP7dygY2tQuxJ+riGj
Ajf46JYrA+0abCrTDISM1uJsrBuwkXRrsM19+siTo/W4NT3h45wMazAh72FR
tt2Ie6Uc3vORaQ0MFSQq9BabcMdltuL5WNcg28UtQyuqFRcraG6TzrYGHiuo
q7FzB+7MyToREc41kCtM6XdX7cTlHj+/+Z1rDRSOaR2hM+/GXd0NqZTiWQO9
wHHxpfO9uFbCL98y3jVg5yzj+yHdizOcNNFE+NdAcvKC+emCPtxsVzVbvQA5
P9U8o+u2/bjHdWcnrguuwR/4dLLOfgi3V/AmvV1oDZovc1jGGg3jgtLWHXVF
18DHLv+zw5MhHHuskeyA+BocHB15M8M2jksJrDowlVwDy+FQmqq1UZyE25mW
yUtrICDeEMiSPo6rfBAUfkdmDQ4ZejmONkzhVC1Ixsty5PnpvaLbKKdx/VoG
fI7yaxBGJWBI6JnG3YaK5Y2ra/DY/pp2n+kMjiTJl/8c1mCUOm1j9P4szv1M
gNuu4hp8vnNc9GzIHI6GjaDopbIGGY3czHts87joY/p0x26sgWznvWCftXkc
33Zpb7DaGpxPeVB95f4C7tvyfx8ZNdcA8dp6EE2/iAv65G89qb0Gg/nLc5+p
lnC2+sRz3/XWAFjfRmv/XcJhaQzxHgZk/lcHURG7FRxPVVWelvEa0JnGBRYP
rOL+Pjn7/D+zNfj1dpZ96DUe13cuRIFosQYG/wg0274E3PfRTQqcFfn8OU9V
3uMn4t6EmzeH2KyBCX9Y3UspEs5epeGthd0aHP/rqIl+IeGUdkT0xO6tAX2B
c7jdf+u4nf8FDwPw/GL628tt7z95zWB2fE3xvdQXYqGbcO8/VLC/Egiw8b2w
zMlma3PvPzHj7YO9tfK9jIExLDt27z9jW4p69ubyvWg2mfEKee8/m40dw+fX
871E6wC32nvvP5luc1B8lfS9H6BofKp+7z+fCz7BFYL1vfpU0EF6ge8/lTm7
0iD29b3WCTgHSoTvP0YA21rC/Pa9sr6fzBmH7z8N+HZmphb3vY5zB5Lpie8/
n/4DzfK/971qKG9XuYzvP1GZYoRkkvi9Rd3WHImP7z+Ltgfrs0n5vSCSPuJY
ku8/JjpkoGz8+r38RqanKJXvPy4xMstBvPq92PsNbfiX7z9Cb+Dlf/L7vbSw
dTLImu8/UIvBjtTJ/L0ihBRIB6bvP5hoMMb9LQC+/jh8Ddeo7z/sH17wuywA
vtnt49Kmq+8/RzXKqLnqAL60okuYdq7vP8kwJlg8MAG+kFezXUax7z9bgOZz
jbUBvmwMGyMWtO8/nokfJR5RAr5IwYLo5bbvPzcwszvo2QK+/ypSc4W87z86
G24cAekDvtrfuThVv+8/RV4NRSUPBL62lCH+JMLvP1Oaq6kd3gS+kkmJw/TE
7z9WR99oGnMFvm7+8IjEx+8/UP6t0RU9Br5Ks1hOlMrvPzUYdZY/tQa+JWjA
E2TN7z8r5LkIHUMHvgAdKNkz0O8/WyZjGcm0B77c0Y+eA9PvP4DDtKxKqAi+
uIb3Y9PV7z8LPiBD7/cIvpQ7Xymj2O8/Y2xCvQ7UCb5w8MbuctvvP5kwDRSl
DQq+S6UutELe7z+b3bc5/psLviZalnkS4e8/AQqql3P+C74CD/4+4uPvP1V/
hMAIXQy+3sNlBLLm7z9CQFmdCWUNvrp4zcmB6e8/HMWjDpXmDb6WLTWPUezv
P4dCp4MO8Q6+ceKcVCHv7z82KpwE+uwPvkyXBBrx8e8/RE8ZP3dZEL4oTGzf
wPTvP0Fq/6PoqRC+BAHUpJD37z8E/+eFFScRvuC1O2pg+u8/Wa6riZmREb68
aqMvMP3vP6kZzAwQ+hG+lx8L9f//7z9HDL9D8pgSvsayshY=
          "]]}, Annotation[#, "Charting`Private`Tag$24664#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Y31vj8b/dZo2UTdG6X9xcO0c
          "]]}, Annotation[#, "Charting`Private`Tag$24664#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.5172625046829315`*^-12}], 
               
               Offset[{2.7786373878344883`, -1.1310058651166808`}, {
                1.12, -1.5172625046829315`*^-12}], 
               Offset[{0, 0}, {1.178582044745456, -0.7716407316593137}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.178582044745456, -0.7716407316593137}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.178582044745456, -0.7716407316593137}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.178582044745456, -0.7716407316593137}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.5172625046829315`*^-12}], 
               
               Offset[{2.7786373878344883`, -1.1310058651166808`}, {
                1.12, -1.5172625046829315`*^-12}], 
               Offset[{0, 0}, {1.178582044745456, -0.7716407316593137}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.178582044745456, -0.7716407316593137}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.178582044745456, -0.7716407316593137}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.178582044745456, -0.7716407316593137}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {
                1.178582044745456, -0.7716407316593137}], 
               
               Offset[{21., -6.499999999999996}, {
                1.178582044745456, -0.7716407316593137}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.178582044745456, -0.7716407316593137}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.178582044745456, -0.7716407316593137}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"0\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {
              1.178582044745456, -0.7716407316593137}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.2758937570243972`*^-11}], 
               
               Offset[{1.9007504811198115`, 2.3210229659619492`}, {1.12, 
                2.2758937570243972`*^-11}], 
               Offset[{0, 0}, {1.178582044745456, 2.3149226847501154`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.178582044745456, 
                2.3149226847501154`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.178582044745456, 
                2.3149226847501154`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.178582044745456, 
                2.3149226847501154`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.2758937570243972`*^-11}], 
               
               Offset[{1.9007504811198115`, 2.3210229659619492`}, {1.12, 
                2.2758937570243972`*^-11}], 
               Offset[{0, 0}, {1.178582044745456, 2.3149226847501154`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.178582044745456, 
                2.3149226847501154`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.178582044745456, 
                2.3149226847501154`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.178582044745456, 
                2.3149226847501154`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {1.178582044745456, 
                2.3149226847501154`}], 
               
               Offset[{21., -6.499999999999996}, {1.178582044745456, 
                2.3149226847501154`}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.178582044745456, 2.3149226847501154`}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.178582044745456, 2.3149226847501154`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"1\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {1.178582044745456, 
              2.3149226847501154`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.0825138693294805`*^-9}], 
               
               Offset[{1.9007504813798617`, -2.321022965748987}, {
                1.12, -1.0825138693294805`*^-9}], 
               Offset[{0, 0}, {1.178582044745456, -2.314922685280752}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.178582044745456, -2.314922685280752}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.178582044745456, -2.314922685280752}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.178582044745456, -2.314922685280752}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.0825138693294805`*^-9}], 
               
               Offset[{1.9007504813798617`, -2.321022965748987}, {
                1.12, -1.0825138693294805`*^-9}], 
               Offset[{0, 0}, {1.178582044745456, -2.314922685280752}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.178582044745456, -2.314922685280752}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.178582044745456, -2.314922685280752}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.178582044745456, -2.314922685280752}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {
                1.178582044745456, -2.314922685280752}], 
               
               Offset[{21., -6.499999999999996}, {
                1.178582044745456, -2.314922685280752}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.178582044745456, -2.314922685280752}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.178582044745456, -2.314922685280752}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"2\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {
              1.178582044745456, -2.314922685280752}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.1814023724688076`*^-21}], 
               
               Offset[{2.778637388105293, 1.1310058644513719`}, {1.12, 
                1.1814023724688076`*^-21}], 
               Offset[{0, 0}, {1.178582044745456, 0.7716407311286778}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.178582044745456, 
                0.7716407311286778}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.178582044745456, 
                0.7716407311286778}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.178582044745456, 
                0.7716407311286778}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.1814023724688076`*^-21}], 
               
               Offset[{2.778637388105293, 1.1310058644513719`}, {1.12, 
                1.1814023724688076`*^-21}], 
               Offset[{0, 0}, {1.178582044745456, 0.7716407311286778}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.178582044745456, 
                0.7716407311286778}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.178582044745456, 
                0.7716407311286778}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.178582044745456, 
                0.7716407311286778}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.178582044745456, 
                0.7716407311286778}], 
               
               Offset[{55., -6.499999999999988}, {1.178582044745456, 
                0.7716407311286778}], 
               Offset[{10., -6.499999999999998}, {1.178582044745456, 
                0.7716407311286778}], 
               
               Offset[{10., 6.500000000000002}, {1.178582044745456, 
                0.7716407311286778}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.178582044745456, 
              0.7716407311286778}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 98.29102237272797}, {All, All}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {-10., 10.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"1\"", "\"2\"", "\"NDSolve\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910478300934686*^9, 3.9104864760293455`*^9, 
  3.910487169102934*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"350a5202-a224-45d9-ac3c-0060734d85b9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
             "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
     "**"}], "**"}], "*******)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.910480471917904*^9, 3.9104804808100014`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"69297143-db1a-4e31-bc90-1550e7b8b2de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"selCoef", ",", " ", "genVar", ",", " ", "soln"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genVar", " ", "=", " ", "0.01001"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9104409339464197`*^9, 3.910440934322338*^9}, 
   3.9104414376885943`*^9, {3.910468296420635*^9, 3.910468297175737*^9}, {
   3.9104684126755915`*^9, 3.910468413916339*^9}, {3.910468450698928*^9, 
   3.910468480628004*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"ae210d91-3cdb-48a0-9739-446598227f45"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SimplifiedHayward50", "[", "k", "]"}], "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "\[Rule]", "start"}], ",", 
           RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
           RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",",
            " ", 
           RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
           RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
           RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
           RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", " ", "2"}], "}"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.910468422400401*^9, 
   3.9104684303243494`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"1206eccc-e472-4666-a5a5-15800d0f3be9"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 142, 38, 28766774182623955770, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9104783011477904`*^9, 3.9104864762243137`*^9, 
  3.910487169222644*^9},
 CellLabel->
  "During evaluation of \
In[142]:=",ExpressionUUID->"de63f277-b043-4575-b1d2-fa153675d5c7"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 142, 39, 28766774182623955770, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9104783011477904`*^9, 3.9104864762243137`*^9, 
  3.910487169263879*^9},
 CellLabel->
  "During evaluation of \
In[142]:=",ExpressionUUID->"d0208aef-8c0b-4464-8102-9d444bb4f62b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwsV3c4lf/7t4qMUyJFCpEkpEKo57lPdkZZpexVyt7Ze4fKrpCMSLKy68jM
CNl7z8MZPmZE+p3vdf3OP+d6Xc/9vsfrft33+3n4zB20H9FQUVEl01FR/e9f
9RG+p275Hmrw2CwZs04COnkuxylOCYjgM31tZUWGa+9SUr9wKoADq2Xq8jgZ
1DqHStM4dYGxyU3YvHUV9Cx/4+I4LeHGsy4Rn+7/YOJyuHwMpyt84++ryf+0
Dhkn7oZFcYZAfEeoFp3VNgQyfLkQyZkAjewMw/fa/oKw8quIUscEeHU/2f4c
wwH0hjosj7UkQJ/j7mSP0gEI0Ip8EnNPBJM/DNqDjQfw42+2WH9vElg+blg3
/fYPmDeSJHmiX0NY2tVC+z4qbMqEl3z5QTqcd89XNS2kwd7ifpg9ee8dePJu
rKn8pMGu6F8/xPD5HTSWaXiewtNgzxI9LT6LZsCSjAW9DR8t1uGp1Hmq8Qw4
8ZvLcjCOFnvcsigvRzoTHhrLp0Y50mEfPHxf9N9aNjx1HftTeuIwdnVMlzGT
Kwcaw2KKNEQPY8OMGR7pyOeA8+6hgZ8Kh7FfLBy4KhJyYCCuv8fJ5TAWY4+E
el//AEYS7hqmvw5jm4NG9A/75sLDZyHjHwLpsVcLWA9zM+QD49Fu3vUuBmyb
WLNpp3g+YF8WnaqcZcCalnh89XuYD6UlSt4G2wzYmIopx5n8fPhUmMMnd+YI
Fl/3eeyDxieg40t0C3l6BJs+cLvkSnwBXMwxmW7fO4Jl+hdoqHy2CDjRtJD5
w0zYlKd6xiJKRTD1eJtagIMJK9AvYspqXwTziZ8uy51nwqIfhyzGcEXQeLjT
k0ueCVv9Mam8UqwYfOkUyTK+TFiSDvGbWlcxNKn+bRYjMGEljgwh6GwxHH8y
jbm/w4T1qq2vFd8uhqXaC58MDjFj6S8m1504WwIvc7/0UfMwY/kObjVN2ZXA
WcGkkmpNZuy9vOSfLiylID3bcHnoMzM21ShI/TFfKZx5qyIzV8WMnT1u1/lA
shT2EuSSOhuZsQ6+cr8Qo1IQDQq9j4wwYyO1Sb30n0uBX1fifiQNC7abfljn
T10pXNXeNI5gZsFy4Br6if0UHO4z9oiDBZt1IWWwZ78UUmPOKn27yILF7cuN
vlX/ArNsybFDd1iwdKWiBrGmX8C0+O50ux4LVtXq1HiA6xf4LCU/mmrKgh3q
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
n5sjkPigrbY9JgT/H8JXJDw=
          "]]}, Annotation[#, "Charting`Private`Tag$24987#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwsV3c4lv/3JyUfeyVJNskOkeq+zxOKiCgiZWuTPcvOSkbIiuy9ZfMgI2Rk
7z0e4xlGGiJ9n991/e5/7ut1Xec+53XOeZ1zv9/8Fra3Hx6hoKDwO0pB8X9v
jYdrA83r+iit0laWcuwWHFXhsps7JQ9aXN6kc5NbIJcSn/TplCrwbT1mU+DZ
Bs3esfLkU3qw+Jz+Rm32NhhY/cJGnbKC301Vs7q1OzAjHaQSdsoJdtxZblAu
70LqiVuBb069BsOsJoLQjT3wpfl0NuRUDOjSlo3GsVBixNTeBZfbxcCPc8XS
FYqUmMEA2/Wpjhhwkyqb+WJMiRGikiiQcnkPihyC5r15lJgvfzOlhgdj4a6U
9fXbV49g6L/HXuB9mwAje29Gx2yoMPEzHiqVhx+hy+AMdqL2GOYq973MWf0U
YEPGXq/PHMNsGCkeoylKgfx+I3SRkhrDQ3C3LJJMhb1oP7qwG9QY26cKwhTT
qZByc28CO0aNYbUqyc26mA4mxowCyOZxjOG9tJKt7UyIxz/VNKehxWxO6dGm
c2VBT1/+vSYRWkygCc3DOypZcP6vx1WKa7SYT5a2XFUxWXBg4FJzzpcWw/gC
CXipmA09krK8J37TYtr9JoyoPXOAJ7AoimeeDiNbyELNTZMPZz1Rz9Q4BkyX
VLtZr0w+0Bf+TvhRxoAxK3Or97qXD99mn3if7WHAhFXN2S3k50NHshMNPwUj
Zq25aCpbqwBKoktJjx4xYj6O3Cg7H10I3jNqNTwSTBi6f74P1HhKoJX5FV+p
FjMm/qmBicT1ElgwmHqkY8iMERqWMGN5UQKXPnCsz1gwY9C8McspbAmYf9lz
bXZlxtTmxVZWS5UCPSmkMD2VGUO8Q2jQ7CsFE+G+pCESM0b+vzEEXSyFKz8n
bqj8ZsZ4NH5ulPlZCsI0dHkplCyY4+fimk/wlEEBtZUlDzsLhv/watucTRmY
yRw/LXeRBaOfG9ftyFAOs1SCuIpXLJgkY7+bj/jLwXfuORPxNQtmkdWm1/BC
OaChioksYSwYW0/lb4hxOTiLp3bwJrNgQm4TB48XlUPhW1Rep4EFgz1Qnvxw
8xMM1RtF//vJgjlaLnk/3OwT2MqrtR78ZcFoPOac9nH6BE7ut5RwR1kxYwPE
mYdJnyBVC/vLk5UVs50dvyBN+AR1TbudzRKsGGFd0lpraAU4yxaVxhizYri8
1S49TquAuUC7okFLVgxzUWoobXUFTIUOh+09ZcX8obkjpbtYAaHPE2mOuLBi
+purHWcvVgKTmbLx4VtWTDuJud1XuxLYOF4S/KNYMXXczziErSoh2L3KfyeO
FZPlxl37PKISfkYPzr9JZ8V4yPge/l6phNuB7ynyqlgxtiaTt5L2K4H62mV3
13pWjNVbuTRgqYLPcjsS0s2smFtrKyqBV6pgulXN0qiLFSOUqhHCFl0FjWbP
V1MnWTGn+jImq3KrgG6NyFo3y4phPDgQN2qsguWMR3UNi6yYPYOSvtT1KuDW
SUzz2mDF9DGxs0thqiGcfnzyx29WTCti83BAvxqmcM9I9w9YMTXPv1Q5Pa8G
E/vx7oJ/rJiMDrd79bHVUEqxxPgfNRsm/sdAvklhNbgOq73h+I8NEy4ofkDZ
Ug06vBz7DPRsGDfvmY/qxGro5wrcqGNhw9gUKWzhj9QAn/xjHzt2NozFVMTV
CM4aKGqSvsR8kg2jpai8PKJSA3a7GzcYudkwApvZ5ywTayBhm6BALcyGOXmG
4iV1Kdl+qVCN8Swbhl7zXk9eew3Qd5cvUJxjw/zKprPd2qqB+hqb1SwJNgxh
2Ko5mroWQjvdXhhKsWEWjzSyKHLXAgODc+UPaTZMj4ldhadaLYSbFdRvybJh
Wt52HeM3roWqb55x2vJsmOo6AYM2h1qwM7e3jrvAhilce5n7OLgWCqrkbnQr
sGHSOUb2aD/WQkBR/JUNRTZMnKqUZvGnWqj4naC/e5EN89YhKEm3qxZOVd/N
WFdiw/ilzhN3Z2shhY7twtdLbBjXPiWI360FuUpFrtjLbBhGqcqVLpo6WJY7
0331ChsmM0zm7T53Hfg4h8ZMkfElYoGs5Pk6WHlh7G+JsGEGbp6dMLlWB1IF
wZkTZPykMN078l4dhBw5cwxF2TCHdDwiLTZ1YK+rWh5JxjHPE3q++9YBm4xy
7QAZi3ezOwrH1sFInuNZSiDnLxZ5yiC/Dv7tatPykrHhG7rm4MY6CBCztBUn
Y9J64KO6wTqgPjSwEiHjgBtHGAi4OmB2If5kImPuPM9PZ/br4Fzmvvwa2X85
zd69W0z1kGLsIFFCxupPnCh8Beth5bsh3oqM5zo2s8sV6+Ejsdf7PzJ2Oftc
a1mzHp43Uf9OIudDH4T7fsKsHiQDblnwknE6zjxRzakeLOppeyPJ9VC6PoNx
D66HtN+l17fJ9evPMlzNT6qHuzn9MxgyfnRsOGy6tB7imhjSvMn1jm77OgkT
9dAoNYn7Su6PmNB1X3tiPVz6whU0Ru5fs//nsxmUDRCEnQwfIveXqFzjRC3W
AEqGp1kSyXp4nS53+iLaAFO9pDwrOTYM15GSz09vN0ByIw7HQ9aP2ucsxl6P
BrDexL6xIOtrlo+/8jC8Af4cBjMTJNkwTj5J92UyGuB76i23h2R9pkF0bnR3
A8h22EqIkvV7MYXxVvtcA3B+vBZvT9Z332HIj5/fG2BHhEm4gKz/fayPshE3
Fr78kl0g8bNhos4crIXKYIGj+p3MHi8bRtTTNQKrigXGaML89zNsGP0rL6b5
bLDAIKubVXeKDVNSd99lFYsF7vjbARHMbJjrXGPcpwax4CWQnMnDyIaZdr/d
qoHDwmLeUs5HOjbMf0o3mIsZG2FF8XeSPXneLasV8p1MGwGUL3E83GfFnKxg
maWkbALGm/Ec78j75cHbfb1ljiaIatMeIZL3T7rVSvcXiSZYUL/PcWmKFSNx
orY21LAJlo0OXdOGWDHKLmbvT5Q2waEojWhxKytGIckgO0a6GRD6/rHBVFbM
veCehYBLzeD+1uOCbBIr5pXT1TOu15qBz5LS04+8Tz/fFI+5d78ZGuzXhH6G
sWJu/j305QlqBpv1SkMJD1aMuUm2ce5sM2zXfH2+dosV81rjdELCejNIGTOI
mmuwYrIVIoff7DZDR9sNtEeVFUNg9NC0of0M2zZPR9yVWDEuTVpKsgqfwa/u
yMULAqyYt3w/2BvCPkMwY4bg1W0WTNWiSs+3Ky2Qwf9QTyeQBTOq7rsdptYC
1nvHTS28WTA/ixs5bt5uAdTTj+GZGwtG8aWSeefjFlBv0C4yesaCqWGT/tkc
1QLN0o+MWrVYMLWqXHzlay1wuTXqaTsrC6Yhe8sxJqYVlnZndgRimTEtz5JP
3yO0wRH3N7RVDEyYHyIIU5FNB0gJ637RrabFHNkrYD4t/BXkZETaK2ePYRT+
mVXdKe6B9MPY4fl3lJie1/J9X8S+waR1dLJD5D5cYuo+8u7CN1jclhIatt+H
3ARzxfuYbxAYb/mfxp198C8OT93U/wYqVR85HTnI9uNrDpy+3+DU4rhxffIf
yBVPPvls7BuQypodJEr3QHndr5RauR9uEWQH2pd/AW8kfi+P1A/jl19VLYTt
QqO5d175934wO/NvGHHZBRM5tnv1v/vh+3XuzEKTXUgavVTTc2QAVCOmdVqk
d4HzzBuXTY4B6N2x7+gd/A6s+aLf5WEAjs96rVlyf4djbQ8JTREDMKtgUeiJ
3YbM93sfOmMGQPTYPX2J3G1QfRymOZAwADXWppbEqG3wo63MX8wg+6vCfcx+
sg2HOkefHqsZANoHkvw/2Lfh90z6isb8AMh/tnQ9tNsC/K+52RGZQRCp75pE
bUhQ9TiiRUNhEArdn+dtq5DAZwzNbro8CCqDjNJ9XCTyHCbb5F0fBJJ+Ic/R
LiIou9w/ePVgEGgT3zWbnyVC4u7oKaHgQdCyNf1vBI8H9e1ePYe5QWC2X2A/
Hb0ObOaeF1eXB+Ha05daiy/WYbZfgvvBxiBU/2JZ79dYB6fS0KVrPwbhbtfZ
H4JU65Bie8PhFN0Q2Gu0MqQ4r8FPYltEs8IQLHzvVB01X4XMjfqvjOFDcIrO
6nrB3RV4EXdL8Fn0EDz5J3ikQ3EFFFWXXrbHDwHRjHvv2KkV+JpMK/kqYwgu
eggixKll2Na5F7FeMwRCE5nxJpbLgFb/vNO2NARWh0ZQ47YEE/7nZ9yVhqGK
ae1WWsMCpMu0XxhBh0F1coP4M20BrGcMw2VUh8EAx95nHbQAFIo+sKo9DKVv
s3Zqbi+AyEZfmp7VMPhP6Jzu35gHJx3rR9IRw+AkmHl9mW8eGM/kbC4vD8NY
TbcWXm0GMHf9Z5bWh2FPQs3f8MwMOESYdi+ShiE6sNLm9840jFJy5sz/Hobs
XOnGbx+n4SMu2GSafgQuLhaPjv2eAqnSZ71D8iNQcYNfUqxqErRUpApaXo9A
7dmQzVq9cfB6RZvwOWQEzFRy6qVkxqG0EhfYHD4Cs9dlhQfoxoFdNMWiMX4E
lBKKpT62jsE0PTNXXeEIRAXml+hdGAPr0e3gsuERmFbMFWHmH4W3TysfpQqN
wqWHA2W5nMOwgSkKphMbhaYvE4WLP4dAjTMr30V6FHYqFm1ujgzBkY4Y0s1L
o8BdfOBeHDUE7kJOLnu3RgG39+F6DtMQPJqTDbz9chRS36nqYVgH4ap+adbR
wVGYFuMtqL3YDx8lcjtsx0ah55kebRh3PxxQpa5PTo8C9c2Ok28o+qGmPEKy
bHUUtK+zUVJGfQMpZttK47+jgMYofi2v7gPubsn2KtExiPbiui/M2gs/MQXL
T7zHgOai0VgbxVdoyMR/cH09Bs6OIIGMdIEfjcSdwJAxuHT2g+JuXhcw9hd+
zogeg4zRS/pn9LpAxLT442zOGMhBC+lOQSfc9Swz1Osfg9cS39VOPOyAytrq
HuAfh/ozhLTjR9vB48xvf22RcZC74PO8f64NML4XLxuLj8NkxXXzb/Vt0KNe
m+dxYRzO6zX1vHBqg+WxusDKG+NQcso1TGKtFdh/YjHiDuNgKX017/lECzjJ
tlVwtI5D7UYNj/JCMzyS50t91zkOO1ucTWPNzWCo8CqUvm8cTFq6hzJSm+Hy
JXmLIxPjcO/Ta6lZs2Y4opzJRCKNw1b1UcacjiaI0H39rJ1rAqjsz0tRrmIh
306Vz8lhAmT8Zs4v2tZBkkMq3abrBCw7BL+JulwHYU4HP596TsBJcc3TH4/X
gZ1bRa9p8ARMZFsMtaXWgqKP0EvNjxPgJs6IUR6rgbaIo6MCXydgPO7IfKhe
NcwVt4UO8E/C4XW3WcLbCugnHiXInp2EgftSaL9lBTRLXLsZIzEJFdE20QeX
KiA1v53eQHESvkqpPZXa+AQW2V/Cpm9Owo/QV2sbmp8Al9wZseo6CS9V8D+e
cpcD8W1P9N/eSbB+6cZtMlMCs930uyZDk9Ahe+ttz4cS6KPV0msen4SY9nWT
T0YlUBzcy+6/RP4+lVtpdaIY7F73vafZm4RX74JvDs0Uwe7L/jg2oSmQURyR
5d4vgP1nwx/OeUwBUNyiSQjMBT0F43dS3lNAyZRRL3U3FwopcYFyr6dg87fy
WS6RXDCJ/2WPhE9BiYvj6a0vOfC5nUtdN30KrhR1XH9DnwNBfOa7bl+n4HmR
iyhNThawjRJvdnJNQ2eE0VjviQywTnNR7uWdBo+Eztuim+nQZv1PcVBoGtyq
rbW7OtPBhYpFcFpqGiRSE6hnXqXDhIz83qbyNAj5rN2HtTRICfXIOvmcbD+/
5h7ZnQriV48fPqqfBkUeFQNm/2QozS84O948Dfnf3hVmYpJBnl1H98aXaaAV
Db7SfJgEV1bjM8UHpuFVaPf1kFdJoB0mprmFm4YGUXG8utcHcJjQindnnYG/
kahoeUIC/FTe+bxxcgZsLKgnNE0T4GVhLP4+ea9lUH25aSKcAK+951BUdAbw
mbyMG+XxECtsv3IEnYFhvQbFgKE4qLWPkX37dAa0xUMMmcViAZ26+ODvixlI
D86ZG/j5HlpUZwJeOM1AOXJI+a/1PXw9KTKh4z0DMWpn/8SbvodpbLX3ifcz
oHyR/VzVhxigoJ3q+dg8AypZozsEkWhQS+d/XHZyFnKVGFpUX0eCfDyjyBfu
WYhhOpqfaRoJfOH7y5P8s6DJUJ6gfTkS/riPWByVmAXFR8G/D3ARUKQbYmKA
mYVImWuz3n3hwEa5rf/3ySzEnZq5Xl79Fih+zbCzvpiF/zr505Rc3wKB8HVI
xHEW5Mqk+K4pvoUv45m6Op6z8FZCumO5JhTcSw21Mt7NAkfY6SyJljcwZ9qs
eqNuFrpdR9tYCcHQo19EZdI0C1GczzRffAqGGs3EFoe2WTjpkx0ML4MhStEJ
k9Q3C953ZhqAPhiuMYle2VycBdaRObsUuSAoaIyQe083B97LHFGCcQHgesZU
YOHBHMR6WGs0FfiBhY7M3WnzOdBYwQ1y+/qBtj/lm7FHc9DxijJ96K4fiKxn
bPfazYEp46CTBpUfDFesNde9noMrRwZ7Ncx8Qeamg2lM4RzID0d00Ij5ALe3
SnREGTkepQgUH/WB4+XsHW+q5mDy/Pvv15q8YfZktZRv8xxEfDpStSnhDW+X
9v/aDM/B6vVNkieTF6x5BCSpHcyBk8tricCtl7BxV/xJGsU8WEssZkuXvASz
LbYjvFTzcK2sPunhi5egKbhygYtmHiTYSmsdSB4gEBKUzMw6DzIBIvq7u+7Q
r9dj/Vd4HuYK89pLuNxAgqBPN6Y1D5fv5ewptDhBjd7Npjc682Cue9xa+60T
qGCVHdE782Cpd2kVd9cJjMKlp7IM5+HEgFBiLNERQmT+K3CyJNuPLgwP8jkC
zqlBg9V9HlzqPz8cTrYHh5nyw/aX89BnNpTqaWsPf6/llbt7zcMAf4Rh3FV7
YD8Zy7XgPw97p6pNOVftQKXWdqMkfB6Y+3H8Cop2kPpX4I1W5jwY24ndFhi1
AYlHp1DKnHkIM3xLyAi0geo+pp2KvHlwnkEV1xVtoC/l4B53yTxc59Q6XpNk
DX+vjp7D187Dg6AsR0Xb52AUGNIV/I3MFxF5dkvhKbAxbdG0/ZmHtubz57mU
H8Ig9k3Qjb/zcKya2mGa7iFEWQtTf/s3D54s1JM8o1bA+tWIavLoAqjxhH/j
tSbjgPa/m4wL8HtkLmY32RKY9xN3TgsugMnj6FtHOC2gP++CfZrwAry3jpq6
sW4OkYb9myKiC7B55YgSZb05MFUdI56XXACetoPYelNzYLS3W1VTXACGb8IR
qsVmQL96bdpRcwGuzNgPV2JNoOf9vNGe1gIEZNzPNbcxgbeqLye8dBaAP6jx
Uv8ZE6BLLx0N0V8Ami/e0yQfY6A1Pj2QYroAYqZKiVQ6D4BmaKu923EBxIfp
NvmZjeBo04cSwaQF6MVba4cz3IXJK6rqcx8XYOg/i8yPvfpQUkeYTySf83i1
aq7fD9cHoyqElTVnAQS54esgiz6UFc05UZQvQFOgK1MYnx6YJAlemukg53dI
8bLn/m2Q5+oZjP+6ADOiVh8WhG/Df/FOz/V6F6Ckm5LpzZYu+b/WntQ9uAAC
WHaxiCBdoAt9/K92ZgFYuG57KjfoQI17QVvs9wWwOL2Il/fShvBfd4xv/1yA
pxPFzq8EtcHS+eAHw94CLOzl6zd1aZHrp3U24JBcH6EYTslTWvDwyWaI43+L
8JHURrJs1QRWA7lbOryLcOn6gIW4yg1YG55apRNYBFmabWqaX+qAvf3ap0No
EX5t+obUFajDE+2RMlRsEbgu4APjT6pD4zVXdskLi9Blb0Dz9/d1eC5fP/Gf
5iKU/nF1Tp5Xheb+kcIarUWgONf+7Hi6Kpyw2fJ+rLMIC/6oOZ+VKjRlCYu0
6y9CnJvndcMNFWA7GengY7YIKV7EkJJDZajfs6L75bwIL6+ZjgVcuwrMsd6z
WW6LoCQeu8rOchUeyiaW6b1chH1Tr8SLMxhgev7NoNxnEXi3VEYVXTFgOa2U
aRO6CLozigtjlgB0TYzIcuoiZOvUsw/4XgGz++eYozMWgVJgeUNY7ApU/lJZ
upq9CIf4iykuQ5fBVMY9JKVgETTsJGQpz12GT2lLI0ZVixD+TE7HcU4J7r+u
eTHQTearRvUvzVURSvmGrvr0kfGlv/rBUopwDEtklx5YBC1enTAVnAKU/BCo
fzu6CGlN9/KkDRWA6nHYcfWFRcgPT+FLu3YBCm5YpDb+XIQR4vcpxmtyIC/B
j8LeInRsvtO7Qy8HjYzzU037ixA9dpNBflgW+oeMT36mWAK1gSDqtoeysGt8
L7yVdgk6tnrvfo84D6iDzqtOniW4FrO0HHIoDR16TFw3+JfAR1P3unyKNOgo
9lV3CS5BQkJ+5BpGGiwONL9/FV0Cd/VDIasgKQgKVHvWK7sE982qIo35JKE/
ETUcvL4Eq2Xyg7w+YnDP8++P2zeW4E/4/UI5GTFYNG2IHtJcgrBSVOPcwjnY
Fbr0bVhnCYKMed6XXjsHp0ouXB8zWgLb+xy/NzlFwaJVQn76xRIsYgb41HHC
gM/CDzywXwLZ//bNX2QIg1Nwvu2M4xK8KzBdumMuDEFaogWz5HtY1/BMjd6c
EBSOCQos+C0Bm6zk5V9LgvADz8WMiyXz5xM1O80oADHJqx1JCUsw7DTVnz7A
D3K3KrzvJC2R76FCMmvv+cG+XGuzOY18r7vTxpbJxw9EN5++D4VLsKlpKZSF
8sHKMdxb3ZYl4J0R2KJROAOvq8tVadqXIFJT8dfKIDcIPvU+aOwg2+M1Px3a
cYN5D6e1RO8SxLyk/zRcehpmojQ1j48vwfqu41gxygUjvGX/YYlLsPdN7snp
yJPgNOD52XFrCexzrI+zwklg89dwF/u+BPgIOl3GTQ7QxS2txf1eAuwoy0e6
2xzQW8jR6UC1DHQ6TiztgiegXelVoOipZfASsRor+s4KVnh1dO70MtQ8rmdK
LWMFquQTP9/zLAOe827YMztWuEpR8pBKaBlsbN8zeG2xAPbLguqs1DJoypbl
Gf5hhso7alQxqsvAwS647vWQEYI1awK41ZbhSsfT9ouUjPBA5RxN1o1lSBTs
Czz3kQGOyNExVGkvg7MY96e0KXrQZv3GMW5Ijv9sI/qtFR2s9d8V47ZZBjM6
XsmnBTRQ39lRmGm7DJwyYyH/DGkgvPmitKTDMtQWSnXEH6cB+VIuedR1Gapy
qhg6Hx8H34hZxMx3GWKnXxd2ylEDl/Yj3cz3y3DO+XLe4i8qIF4bG5KIX4bb
F01O6lVQQTOifrcykczf8UpIkj0VPJIUu/8lZRlWeLA+uaQj8ImeZLWWtwyd
PBiXJzuUcLPb2U2icRmq3fTxL3kogLcV96eieRmCGWLKfPr+oTt1Bp5I6zKs
SWR9tTH/hybkK/lpdy7Dsu3kb8vQQxQX8jfUbnAZqPjDk7U2D1Bv9YCUCtwy
fJsWKcn6vocOmjx5ILO+DHz33GbvfthDhZw1TxXil8GIG9kXUN1Dv6axRGds
LcP2idn2w/jfKPt+cmDUn2Vorvc/8ezWLzS3qMrGjnEF5FPnzAwJu+if1gQx
AvMKnHX/rI1m7qJak69WH7OtQDfz7DVG4110h1rF3JRzBRZz3102H/iOXjH7
pqctsAJL6kxmQW07aD/r2mUJhRUozvDlCx/cQgXOdf/OubgCyRJnh8fitlBn
KK4UvLwCqQnGHxeNt1Auayfp05gVoO+ysbQa30St2ikEaTVWIGQwqfW7AAn9
7XqKds14Bbrib3uH7G2gGuEHXyzNVsB8q+WcVOIGmpw55z9nsQI/vubFMl/Z
QJUHsv6OPl6BiZAAZW//dfStmOx2u/0KGB7osyTyraH8MxrjGQErEKTz82li
5Ar6puVyiX7wChxN/h03dWUF3cmRCDweugJmlZQetzaW0RYHRvnnkSuQ97tv
p1F9GbWiGYyQ/bACBd2DxTfZltBcuXtqn0tXQHyzU7Nnah5lPqXB4/hpBSiv
UuY+SphH3Q8v/RCqWgE5TELtL4N5VKOLOyO4nmxfMC+9UDKH4k3mD299WQFq
4aCs1vYZVOrN46rZqRWwVLm6xKI6icbaGoZFzq6AB9WVSaGpCfSf3g0r5YUV
oLUWeNTqOIH284qzZuNW4IYXu1NY3jhqX0mysdlegdyTrh+aRcbQycQ5Vd7d
FYgr+vovsWsUVfbpPz3wcwV8qzpExmxGUVbN8i75gxX4V2fBbl43glbMOwsf
UONgb2L1yQXLYZT7y6ODov9wYFo8YBXHPIwGFBgMmdLjwENcxuVC0xB610XJ
t5WFbJ9/WZidbwj9Rfd3+g03DrIe2XEubQ6glxRfx5ySxUG9emiMefA3dNTi
lEKyPA5AWY/WmOkb6hhePManiINdFYIAU3wfWrgyziV6BUe+N65Mehf3ojwx
kmkK13FwsvZqxi6pGz2yPVp0xwgHcp+mMl7UdqIfua1vjT3Akfd6QzV6rxO9
rE65bWSKg1P5/6nZ/elAnVLE5S2scNB23mRqGdOB4rR86uxe4ODmMuXBu5l2
tDv/XEeYHw6205OyztxuRZ+MNj5hCcCBpOiL0PVjrejRI3q074NwcIfZ3G6g
rgVF73lpJb3FQWPoSN3K2Ra09PjQUH4sDva5/wVWMX5Gb8o9cZZKwIFQqpDG
76/N6LrJX47yDzjApqTrXgxuRgWqzhrVpuIgaDpGMOtYMxpj9Wq+Ix8HHRuU
XFknG1GZSBY/zSIcqHKaG2qlYNHe+mzBbyXkesdvOzeIYlFqtoFHoxU4KPZV
4R3FNKBun4WJy404WPHxNtMMqEMf8HzboxzCgTjKN8pnVI0ynnKorB/BAbdQ
yWDQ9yr0M9sJe+dxHNzdbqJKCK9CRf67v7Y2gwNX3mGK1K5KdPM7bvTbGg46
zUn8kbcr0HRSSFQIHgdnz5AC435/QvXWJbRVSDhw6jBIOpn6Ca2ZdWiv+o6D
gZut7559L0f9ug4/JR/igEpitLUxvwyVb0uzNaBcBQpXYhbxfhm62qgqznJ0
FbIdWE4/ZSxDb1a8SX/93yo8OWQ6et61FD2RwvHuOfsqyE8kftgpLkZznaRe
KImtQuiSLzEyOR81sh04911iFd7i+v/tCeWjDM+cVgqlVyFdkmvpcXEe6mBa
94DvwipMRivXn+/IRS9rXNc8jlkFvUvjomlMOShJdZ36s/IqKBiaWd/JzkZT
4W2LxzVy/NL3JT1oNnr0wqASSWMV8vf0T/9yykL7eE1ER/RX4Wkr47/HPzJQ
Hy7K5XDDVQjKFRALS8hA5U5kpqjfX4UPzo06ypCBxtNucDSYrQJ7ozCtSkQ6
avHD+VjG81W4ZLuC28KkoT++hi3a+a6CEqkfW9+djE7TjTw58CfjlJeX391I
Rltucm8GBa7CHRzXcd+uJDSyL3//Y+gq9F43uBL+7QMqNtjB3vt+FQbyPft9
vyegzGxMHwzjV4GhSTPmhm8C+uvOXf7lxFXI2PhDTWROQNtGliX3U1bBf6Qg
J/9CPGoyQal2Lp/M95vFGaWYWFSV60ZvReEqRFY+beKUiUXF70fewZSsQtlV
+qKk3vfo72keM4OKVdAs4Qx1ZXiPRs1fdg9oXIWHil61nSnR6JdV54KFwVVo
WLiQkfnfO7RQFHveZmQVtB3LMjYbItHop0drfo+tAl6aKdXXPhI1w0e1Mc2s
ApJ691hPQwT6h1Qyg6yuwum3DeYaYWHovPQvy651cvx4RP/i8TC0ww7d0COs
QqLpPP8j/7dozE7Pz+fbq0D0ZGg29gtFpX+uMyXur8IxvBBja0IIyqF4Plb4
cBXY7P841AiFoAeubtxlFGtg4VoWnlsWjH7doz7XeWwNbHNSWgwHglCrv4LK
P5nWQJCi+dWZs4Fo/FETp9tCa/BNiy+9RdgfPbQ8eWFAZA2uidwWiunzQ61a
+3/cOrcGVBvNfjNufqiMn4qrltQaLKK8Mc0DvmjnP1EP9Ytr8MHBvFcoxgeV
Ml281HFpDVzia3XY1H3QmMYP+9eQNajO+t4Y/8cbNfNk9FRRXgOis2o665gX
+uvPd2/05hoIF6tqXyl6hT4wKsJgtddArLJDL130FdpS+4jyiu4aDPv1lWhl
v0TD3Sb8lO6ugePGXOrNXA9U5GdjgLzZGvDNRQpttbuhd7dDQsWc1sDL7tad
22bOaIOOys08F3L8h03v8PtOqEDpAb2oO9lfVTKVaoITSnphGy7stQaDx+bt
WScc0QCC3ju+4DXIVuqxfWjtgG5oMt5OebMGEYOxzZInHFCdgg5WnrA1yK/5
qfWqyR7lfnYp5nTUGoTp0sy857RHK1Z54ziS1sA6IruYvcYW5VKbMHj/cQ00
wh0Cq/lsUZ/sKE72tDXoPP2xgvrtC/Tmw2OJLNlrELkZtu75zAZdXtxIoi9d
gzFmifMx156jbLOV6Ufa1mCKTZH79vPHaDi9p2f1lzWYfOo+dnHrEUp7WdXQ
uovM7+1hRLDrI/RI/CDDaN8aUJd9axAKe4ju6G665U2swZ8/ggqKQ5boC5+q
OybTazD9us715DNLdKPYU4ptjtzfUvl0GipLdIGOfvnV8hqcN3G6tXPJAu1v
F72ls7kGlbz5VcufzdCbu5vnju2Qv1fdj4MnZminQPXRut01UAqK8zVmNkOb
vK/VCf5ZA5vRgDcp3SZosZKF8K+j68DVQIs/e+MB+rbow34y1zoMLrL5ro4Y
oDTTFqO3z6xDd47DERY9A/Q1rVjZcb51GPAUEJscvou+fFzzyF54Hcao9PlZ
ZvXRZ/wjA6oy67C9zJjbwaCH4m4lFe7JrkMdLc1wRMod1MLLMqj4wjpQ8zZY
hsrdQe9NbV/hvLwOmIagn2csbqPq7xlz8dfI8SfOWd4e10HbWkf8UtXXIa2j
ymXBQwfF7CQZ62uuw/GDTkoDXh1U8ZY4W5POOvTljh1rmdIm/z/UvaLur4Pr
F9M/LZib6DFPXz0l+3WwKeKXd85RQyu2CXtNjuT4LWJr4WJqqNUjw5TrLmS+
J7oMz5ReR9tuSW/cebkOfMlbBo9brqGvBWa8XwSswzErdvnbR1RR+Th14R9B
6zDiEahWG6eCLtNVfH35hsxHdkJKS1oFVf3x5kRIxDos5nf2vrRSRo92XizI
SFgHxvnnxs9xGLTiSqaOWNI65ITmaSeGYlCrMqafpR/XwYO/OTBeFoO2JeIw
jRnrUF5c14SlA9TfJmZ0vGgdZNe6ktR8r6BH2LYoGVvWQan5FZ8xxUW0POh+
TkzbOrDrZnBweCqiFgdfbp7uWIejF44/uH+ggLasJMeJ9qzDvrmfedURBdSv
RlNSZXQdXIrkT1tJyqOyktWDXePr4N8SHPoXK4cupgm46UyR+ytrPturI4cq
h+61GM+vgwZXRoCkpyxKaZJj6LaxDjw/VT1NN2XQ0kHWw0PCOnAOyN+neyeD
mql5ZQRsrsNrNmveEHkZtFlGnxS1uw7FHcT+V0ekUR8qqtdFh+vgPdvV9sRc
AqXIMylZZN0AUVHlkZfYs+gXwtiLlBMbEHZMWZ1f/Cz6VkZX6gHnBvk8X/q0
MUkEPVmjUjRyZgMOVwSll4OFUakO0YJO0Q3godaXEAsURHdp058FiG9Afm9a
zjkGQbRO+7SYstQGhCsE3MqKFUCvjTLk1cttQPQQ3c5QGT/6YGUnuxjdgJUw
qosZ1Hzk+4H1o+dXN+AYB65RQ5UXXbNeERZV3QDKdzMnnL15UMfdscy0Gxtw
3uVd0meqM+gbKmx6jN4G3LsWUUkELlRHTcFC12ADpM/0Lc4nnEI5Qkv4GY02
4KY3pnj4JyeazpqeGmS6ASeXOoUnG06itfxBHz2ebUDoqd10bqcTqNdDChNF
mw2IM8ErETfYUdU89zO7thtgJq+euWrJjvbLWCfZOG9AUy0vttOMDV0D3UQz
nw2IkDhOp+3Fghb7f713xn8DvtMOvPpIz4I6daicmgzYAI1qtVeWH5nRf9oK
8XdCN8B7YfKXXxQTymFyOvZ67AZcd7Q9PO9Kj06nxehTJWyA4VyzUlsdHZq+
wnCi+QO53jkStDnUdKikDUWMUtoGFNBF5KRm/4eqvlp5J1G4ARsrD9MfcB1H
aZtNdNeLN+CGgPa9NF9qtJ9qnDm7bAPkee/ezcQfQ++Hfo3grd6AlKqVON6v
R1GHxJIw1hZy/RSaKvw+HUGrDxKDWto24JtwWsl9pSPogUmgr0PHBni1FKRl
N1OiQYLGzoM9G9BykdHAcZwCTSqkNY4a2wDqjzssdXcOkQXGn3eVJzdAV4yn
/WPIX0TEfkFnZ3oDKvJqWK63HSClF2pUby+S+zkco/5abR9pb3wowUrcgNdY
q9/tQb8RWn5dkZbNDbg4eVrpwfwvRMf/Cp/Dzgbcd5GhnFH5hUyqsbEP/tqA
AIbLmwSanwipv3n/3RE8LDCemZfu+Y7IyRX+uHoMD/wvT75vUvmOuL2P29w+
jocRhOHO/cYdhMroxZIuAx7KP3QYz37eRjiXTnezcOJBtZxO3ndiEzG+drz9
Mxce4h16P5TvkpD0nJ1G+zN40HQuTdURJyES1l3lAwJ4oD7Pd8XSn4Bc/eGS
+E4SD0qChYysAetIoIFFzFUZPOTljtllDK4hPbVa4duyeLjKQ4wmiKwhd72E
/HQv4sFG9eyp8TEc8uz44FMWFTxsagkpylkvIyVPsZafr+Hh1xdM9trUErLb
nWtsr44Hlg9abB/uLCHekd66A1p4sPt7jPkqsojEnJJUemeIh68d+/tuavPI
xEtOuav38UDF98eiIWcO4Zmlktw2xoNAQkp+dssskps+yadriYfLYcSbC7wz
CFY8mIblBR6KBi7RXNudQBSGT/ZG2eHheRNvu5H4BFL6KucduyMe/p59Ssv8
ehxJ7/3CxemGB3aKIf0IjTEk2PaYJK8fHi6e6OKrGR9GKDnfb6e+xsO35BIh
nWvDiEezUJVAEB5mu9mKkjqHEBsWVRB5iwezewYO1fWDyO1PfrqSsXjA0JxW
2MT2I933WTlK4vFAWeLdlKvRj6geTZ+U+YAHqREpZZ/2b0hj4fmU8mQ81Dd+
PrAh9SGK+p8t5VPxEFX+WvPpt16k9K+OaFU6Hua/DDeQT8aIWPY8QTELD4c3
otOfPOpBuH/9c76cj4eYD9V/goe+IrEpEZewhXiofWKzzXTYhTCp8/5DS/Cw
/+JdBuFqFxK8VdzaXIaH0zp5TVTNnciRBDRYuQIP28lU6vlMncjqJc/EG414
sE1l7Prj146YLdGbdjfjwcfiaZNQfBsyGZokqNWKhx4h5bpB5TbkjrzEWl87
Od9zmpfyQ1uRnun6Qp1Osh4/n5Rs329Brgdo2g9+xcMVC3bn9+9bkCbJqQt6
vWS+CSGN8hQtyMXRZ39GvuEhhSvY4rnzZ6Tc60+jwSAelvRi/mvZa0bEz77x
nxjGA75JGCfo3oxkfjulfn8MDw8fc4esSTYjPG559DMTeKDAbPPrKjchcXxK
AybTZP2e4dhrU2pEmLs638/Pkvl33pg5DMAib+wNjSwW8DBtEUGrfKUBoeJa
41lewoOcmtzaA+4G5FWL69JDHB7uSpxtE+ipQ348O567uoaH88//+lsW1CEv
2OKsn+LxoECs89SwqEXW6kXO44l46Eor/js0X4OYW1X9sN7CA4oVPnaoVoNM
0l+vI+3g4R83BXujTzWiVzniZfeDPN9Ud8Z9zKuQXuOHKju/8PC7Sd/6Pr4S
uU7947jTH/L8EOHaA/dKpLn4dc+PAzycqxUZk3GsQJQM2N+5/sPDf8730HPm
FUj5vwz9PUoCvL/zTOuz9CdEIleO6+VRAtCVTofdfPwJydJpnT2gJoCpCbtd
m0U5wrN3O8PrPwI8ZUeS9ljLkfi0xccU9AT4pQkZkm5lCIuGg4QfIwHYidGY
E19LkdTPTHSXWAigLFvi/ft0KSKjVLS+zUaATKoZBe7YEqSpVKMzj4MAVn5C
wgV+xYi26Fq2+SkC8COyX3OsipCZlICAU9wEiDdgarh9ogixPiloNcBDgK3B
OywcnwqQ/fBm5RB+Asz+C3zB+TkPeUNtwn9ViADHbzk/8krJR0557f/7LUKA
BPG3HA32uUjuj/jZ0nMEOOHH/UR3NRe5aKOAfSJBgMbT6t1OaC7SsTz0gU+a
AB9PnbBbL85G7j6w9xg/TwDm6mCLP3zZCG6I8V6kPAGmeC9xNe1mIM6ahYrq
igSwkdC6F1GYiRxtvcFBcYmcz3iPtZpZJhJ9aXW3+goBWjSnftSiGYhA+esh
WyDAC1GpDNeidKTsnED5WWUCyA4UF6zrpyOYtKbIOVUCbEQ7Kx3lSUO+cRrb
xqkR4FMx3wOh52mISeQfrVsa5Px4xvQ/nU1FSMfjJY5rEUAvw4U5KDgF8fS+
QNd0iwDad9yfTK0lI/S/BtddbpP5F5lVvc9LRpJe2HVK6RMg+++TW/s7CYg4
jiEHZ0AAL34v0RF8PFJnXBDw0YgAP9huCPiZJiE3RtSt7hoTYJ3x19uX3z4g
4zdxyoxmBBi49TT8XlA88rjNn/+LBQGIBPEK90exyM/L/BReDwnAGentFKIU
hwR8apy98IQAy+4TQYFn4hB28QdY4jMCyNd3q4nRxCCZ6XsfsmwI0HXJNNlH
/D0ixxXnYWxHgFGW6a82+PdIyzv5eyccCeAHvH//BEQjt/8bVOx1JkC9+DFn
8YN3yIKPLUeAG9lfWsJY57coxO43/Y8rLwkwiD/7hFQahfyzzR/a9SRA6E7e
3ZCAMCR8Va280IcATI7yl1cYw5EzpiuRVv4EqKpp3xDJiUQKR/1suQMJ8GQ7
bq0/OQK5rM2nPRxM9te6SlulFoZ8bcdKvA0lQNsK/cR96wjECLlPpxpOAO5R
21rJmjBkveL3+n4kAc4U596oYnuDuEnEdn6KJkCfMOuP6V8hCE2mXM7zWAK8
ufRj/1RlOBJ3eiBAMIEAI4bcIbdNQhGR6BdWUx8IIB43dFba8Q1SSUuvEv2R
AFLSujGlGm8RVb88fs00AjCaL2MSBYKQob3rFFSZBEjS1XQUT3qDWNgvz9Zl
E2DfkXKW53gIsr3mi3XII8/HsxPZrT8DEB8z3iSxQgIc++36rCjoNcI83uCx
WEyAnLH40+tWAUjKLaN7iWUEEMrl6vH09EGkOn4p3q4ggGPf6mvp5ldII/qe
g7aaABFpWqdv0PojWlWyPz7Xkufnr4FK2rofMi3ZP+TeQACVKy3CtM4+SAqe
xZOqiQD//uDE4175IRZ5d0TCPhOg6S/+EY2JJyLy+P03jjYCjFFYoccv+iLr
QmNuqV8IgHZElMm3OCCFi5wCYl0EoN6g27Yfc0fsUo26P3UTQNiGyMCN80Dk
TJKckD4CxFgXvE6Z9EV+np4909FPgPlR/EcFOR+kboK3Q2eIAL1RE/ApxwXx
jDO3mxwh7zOm4Hs3PL0QjH7GKatxAvCVB1OynX2JHGVbaSFOEiCdVihJkeyv
o1/E2nWGAM9z3hSaLLsjb8KfnKCcJ4Cz3oEBSuWJaN/Mb3yzSIBHDqmtPzGu
CAst4TH7CgGSz8TZcJe7I8MdkiwfVwngqnh1q47RHYkPsK07u0GAuaatGEFl
S+S+SpllGYEA/RKCDCMVzggP5Xd68kkOJPR2botXOSGLjfJVbdsEkD6PV1UT
cEGyXrmYau+S9+u6aeuhug/y5FINzfhPArzSi9CQQW0Rid97ZeZ7BLjZbN8v
8sEL2ay8fB+/T56nHGCwf/kMKXf0POp8SN5/HAsiDQYuiMv5pqJDCiJw+BjQ
zy88RZQ2KQyCqYiQ7W1JuyXtjRwUKlOwUhNBXv73KMuKNrb52eu8DzREMPZm
oWwJNUb8Rb/cFqYjAunYKSzfHQfkOu74QTEDEbbx2fWkHRfkv8wbWReZibBl
vLg4nP0K6TEP1W5hJcLHR6cxYgX+SCRv7y/NE0RIf8HDPXX3JXJnhjFt5CQR
2ljGJJhq7BCODzoaplxEWFliUe0fMEcmDaO+r3ET4V8cK1/ePS8kmWM4yYGX
CISr5e8FEx0Qs+ET1w/4ieCnNbhiTOWGCEUZbAYIEYG6g6lEL8EUWb2VEM90
lgiZ098rXwg7IfkMU1cTzhFBst6Q2ibGDnnRzY0XkCDzcQ+uONv3EjkfYhJT
KEUE/f/wD92bvZDd66mIwnkiLGdaX9+54IjUHF3ENckRIVDqwpYqgyfyskUw
8oYCEbQUry4+JnggqM9DpaGLRKDA7+zXoR7IETRn8cFlIij9Gm+NCrJH2vfX
QnEIEVrX7C2pDI2Q4FqxC3YYcn7PIoUo89yRm67Ws3vKRAihHmdklnNCmC4U
B/lfI0KFvABJ79hTZHBnU4ZBnQjTJRpoqt4TJLb0/GSsBhEOWUJ9UuUdkXsv
HP35tIjQSapymUUsEW6JSon8W0TIOat+cp3TDZlf/zkid5sIS5eiXjX2OCEZ
ORe9sXpE4HTrME30f4E8eughqmZABKyY3E0ljDMiJtgw0H+PCJvf3TUjRB9j
ifN/PYweECGFHze6vKuHlH4EoWUTIuS/YXgr622HfPf4ftzcnAi/Eu/6xzx/
iSgY5OBnLIkw1e5V53DLHHGTu//N6BERnuk7P4uNtUPqmZg+jT0hwmuqm2cq
RZyRQ3xLrN5zIphERV3hqb+HYDpdPAZsiGBurXmy4+Ah4p8pZqJtRwS1UTtW
7iQH5IvP7NVuByJIRFJHSzv5ITTGUcLqzkQw/S8WJ+ygiWgqXf+v3ZUI9oRL
tevrLkj4iT+Eqx5EuN0Zwn7jqBHSv13U3/iKCIb8ntiQGTuErc+84rI3EaCo
6EdwDYrczT8RX+NLhCwT3VrdUH0kPrDr5YXXRLjJ/FHkfPNzZMrC07Q8kAjW
5e5R7VuuWB44ryIdQoSnRomh+wq+iNnpFZHCULLeLkbqjVx6gWT8iqc9F07W
5976hWUmIJ8vbpKyIonQNNgqHunogYiWUgwKRJP9Oeyr4s0NsM/fVlSmvCfn
1/e5n3T5FlL85EkCdzwRaKQpol3/80G2VLk9ExKJIHhcTqg78gUix99vxpFM
hHeyV1kvjNogLn/9VaNTiCAVSS0RSH0XWzOhKMqcToSi6KdXiesO2P1KPF1Y
JhEYKc5E9qicQtColM3/cogg+yx5V6bkJeLz4s5QYB4RmF6oTv7RtUFaNY5X
UxWS/XWVVt34+QJLfbY+0aeYCPWPZ458cFTC3qCy9fpbSu6v/OkN/znAvp0T
sPD4RIRvcbVnMkOVkL760Wu/KonQd8FhF7qtsCzxb8451RChLPtVjpuDCVbP
CWXYriOCbxBVpJ62LRKrs7NlgyXP0/eV+f2bltgJiezhjSYiyIwiKRPNDxHu
/4xqHrcQwcvVxZlK0RAxXWFIWm4jwol5M9MnmS5I+ufP3uYd5P10GG7GSuGD
LCc7W852EeF9+YBVkYccctbjnNr9HiIU3zg/d1FFB/vs7ozYeB9Zb6Py6axh
cthC2XeM+gNEuCT544zdri52k/HazsAQEX5cZjkqpqyPyOJ/j2iPEiH+2xeB
8a92iHNHYW33OBGQ+IKCAjt3pCbDLFl9ighOXCRZbbOHyB9vdt/2GSII5BqG
jVS6YZEHnVbK8+R+EjXveZ21wPpcfKXetEjen/z6rFURrtgWdhmJKytEGNEt
fhETaYc9tr3EVLtK1pfPSXruORtEvTfu+4UN8vwYFXlksvth3+RpjpUTiKA9
ob/Z6uCD9Ab8q5MmXw62+g9Urpk8wDJbfPpYuE0EB/byB6Ve7tjb6GO/c7vk
/fY39Vb1G3fse67Tj7J/kvtb3C60Oc6FHf/Zd0Nwjwg9Zz7IZW/ZYrmG/CRT
94nQTyVVx+rujDUuUWA5c0jeN7lmO/8ONZAqo9+M/RQk8PKiYjgWa4NlpK6j
96ciwcuP6j/zuDSxj8te0ipQk4Di/5/mBwjNOg0J6Cdi0eEnVggnzb9jSXQk
YH5GVyqYYInYf2qmusVIAlt8T2hywwvsVxM/yiMsJOi/Nh56ntseK0Cr+q+C
jQSzZaHWXtWvsB6Vx/4+5iCBpYAQf53kVeyQWccfrlMksLpf3xQV5oVI0If8
7j1NAqOr/9Y5uR2wr6s1fvrwkOD2F/SiTaobdtqCfleOnwR8D7ivUer6Yi8w
9m3jBEnwp/Cehh2FHza8NmIzQYQELtir4Xk7b7A4K13izXMkmJEa/k3UfoVF
mdnw/8RJYPIuVVKNwg0bVz+8Vi5Fgt07/Wcx5H289SgW9/A8CajDuv85Bupi
1VkNlznlSVAh7mdnHXEVm4o9tditQK7Hp2RjzTMPsXtPpua8lEjwdzkXX6Dh
h73Nnjxz/goJvg+2Nr9JDsHmN5lMLaMk0Dsu4vEX/LFHnvNNxF0lAf+4RElU
igVyn2NxVEOVBNupLW93255iKz5nDP+9TgKV884NSpXBWHqbh4OlN0jA9cdA
/3l4ONaK82y/5U0S7GtwJ4l84EawrWu9HLdI4A0EISHUF8thm9/dpUuuz1hI
rfJvf+QFl3XXKz0SnOzt8Ri4/x77pV2yQ9qABIWlPOYrI1cQXvvNtsV7JKgB
NISZ1wVx4y5ref+ABKEvthTOcvph+zscmtVNSeBTbippXuSLFXWUb9w3J4GO
1fsMZMkd68vzs77YigTqfiGenp5e2Mmu6lrzxyQIu8b+fvyOL1bW2b2a/RkJ
amkUo8xI+tg3fJcrO6xJkMtlleWzGIVd6j4o97Algb7lq3cn+MOwV1wbSyUd
SLBBwVraQmmPxAj4FM87kSBvYGnjmnkMlth7tTDalQR3vTF/XP/ZY6+7U+Vf
9yBBpOm8cDSdG/ajUHvO3ityfjjeRvWPMdhf3wKzCr1J5PMiZ9KtTHNE56V6
hqkfCQruF3gS6N9gc0Vo01gDSBDuUpIuXm6LpRzs/tgeRII5tr7mP9yRWCPP
sCS3NyQYTaBNUhmKwZaL3koUDyNB2ev8C2x+Cli6Yeb42QgSSG252ctumGGt
vAffv4siwWXH2H2z5/bYBrGYaNX3ZD2rCOQYGThi2Uf13/2KI89Pspj/7Zh4
rI3vyYj8RBLouhxIpdZHYL9ITLw1TibBTsvNo++GnbE844lvmFNJ0GbRyWh/
IgHr4v8guDWdBJ8+CCuMDwZhv0nxBLpkkfkekbvnvpeIFZ2c8z+XS4IfWWGO
9F+NEJ+ANN/pfLJ+WgkFCueSsAyuxzXMi8j1VgsON5qIwiY+sWHFlZDg6HVN
5vWkWKyI0dDks3JyPxdS4ofCo7CfNJUyNivIfE66at/jT8JikJTnTtUkCK7y
XT/FeR/pkTomv1dLjpdyVN01zw97j+/5gWcDeb4wf7U/SUVjcSwDbUeaSKDm
pmSn3+WOdaBSDAv6TIJAFXoRTVlT7L/dJH36NhI83iFMnlXzQt7ijvC8+0IC
ocSEguH/nLGc409wJ7pI0LD8Z+7BVAI2q6uvOLGbBO8mKzP2w+KxsvXyrrx9
JKAcRbV+LgdgGwsTIbOfBFcn5P/XU5XHU71tcb2SS9R7Sr1cZUhlTlyRbCtd
GW7o8oSiSIonCj0yT3GjcHTMUnENZYycTNk9QxIaTAk9p3CLxFnOTZR03N9f
78/92d/P2t+9vt/1XWt2CCfTQzeFflDuY/zjIPJspiSbDrLOdJe/5MFQ6typ
AnYOdYt6mqk1yMzLzBKP23eJ8v20TtYO8+DcYJylelICDXfLVDYYYfyWFhKk
eDuFitkJ+E1vGL/RIgntmcs0w9St4eAYD+LfDh9QnT9PFfd2Rnf+wYMbF3XX
72qNppUqmocOTzD1yEvJ7U/ZlMikr+//wAP2usJgp7o02imx9Nphmsk3GZOG
yOxIard8smCExwOXksgMuepMOj7b7uXK58EeA7MV4c1Z1GdMXWfiEw+aLhos
sH2T6VJfyvez84x+g2WbK0yMaXzb17bZL8z/rQokeIIMurHWOcn/Gw/6V9ra
Nzxl0fw7bXaL35n8t2k2qr4aSjSzVWUjhBB+3mFhKO6RQhuvXptYuRLBuGOG
827bNWoetnA3Thjhu96Pzf9OdScD544HSvyAkD4XFT4fGk1dXVr3s8Xw//sC
rZVFN0kg3L5qqiTzOIiG/szqub4O4cXUeNhbMV8iqvM5S04SIeFw2H1WkhxN
3+HoWrgB4fV20uN+Jp4q/LNZRWUTQmzt3owpx0h6V3Tnp4rNCD95lNsHqodT
g28JD7RlEO5vcA+4acimT6b/vFS3FSFHp1xW5JkrOcJ1sCDyCLrG7ZxyN2c6
9uLhhpZtCLukZu7LXYok55sVR0x2MPgHXsdiNqbSpXtXCruUECw9QxdoTDyN
K5j1/lWV4Z9y8mFbQSaRSrfb81IdYbIo4Sce5wb9/XKj4KgmQo9yt5Pu51ii
EaTQztVCaDVV79YLjyIPPONYp3SYe7X3rcF1bGrmxLOf1GX4Bo0OLeu6kX5L
WzlvfYSDMtcNuGvlyUlomOQbIPANzfeoVUUTnqZcVQAg6KjlOLPmLWmwwm9B
34wQeI/TL7LvxFGRDdNGkcYI99BN2qb9KE0VthETNkXYb/9rnI6fG5VbqO2N
N2feu5AttfivaFI+ueX6WguE1L1eJxwSr5G4G7EuXCuECZV67crwROJmM7O9
whrhPx801qXtTyH7RY58DLNFyC54I/m+0Z/INDZWWtoj7DaY4U6mRdAvPooB
W44x+rgNJD53DiB92xP2zTghdEuPaZeNh5CK4U9C1BnhGCxIVl1MJ1dYjo8T
XBGeiRx/n3Qgi5wxbr3qdBphHevR0hDeJge+qlireSBYT1g2e63OI1sr2BuX
PBFWjHK5yVap5Kvr4usub8Zvy887d/vmkf5NrnnXfRCmNtcIGTmWkMqnHWfO
XkCYsxWsqsrOJAlRu9X2BSD4Fr9TvtJdQjz2ZPHFghg9Sv8xtTiSR4w/CtUO
hyDIc80yBFK5RDbXI7QkHOHLp+Zqw9pEsmjbbRQchZAlr/73GrFbZEBUT+SX
GASF6o6tI/0x5N7DW083X0bwby9eaQ3FJOmCCPtDPIJgbajU+sFS4ql03r4+
ASEttrDjtFcxOTgyIBPPQnDKnC2xUCsjcmzDMQc2gqpGED9P3J8umRTdVkpD
8HylH2gRcZcMfpPw/pKBcItfn2A7nU84lf5aT7IR3BuFQVs6jySfHlnIuIEg
N/9YpauijJyVPkjdcxHyi8X9LKOLicmLsmjdfITPvj4u/qqFRCFmg5lIEYJU
y83svtocItALlXh1h/FHCt8qltaQoZnx3qJSBGedQv0TfiWE8/uhzIAKBI39
h1uW/6gmyfbVx02qmP4YDAint90jXuI/btvIQRgpjog7cbicmDVHT76rQQhZ
MhD6OFlKFAOmyu/XM3zLk6RG5wvJsorNhdhGhLCurFxJVgkZflOvd+S/CKfF
E3tzXtWTmlR5gWILQldwcL86u4qwzeNb5x4hmPeVP2mqqyTnBLNxj9oZfODX
U7ZaBeSXager1E7mPGq8s1+4jGz3aFrv9oyZj2+fvZ7rlxGhLUpD2t0IyQJn
WY4Nh/yvh3VzZR9CHUfQ672YR+p+WzjV9xLhRp26v0pjNUnd56ycP4hQX2bf
qPmxmPjMPub5vUbo0A9z7mhpIIcKNTgHuAiaoiKhBmWBzH5MD5IcReCsqRpd
HZ1L/rZOYDg2juCo4KO2yoxDuK2nV917z+Tn0S/yJy7nk4bAZx1RH5j6Ib09
nSFVJF1dh2U9jbBayPacqftN4juWYyuPCIWK9jsTXwQTi4xV0nw+gkwKz0U5
OIQoWXi9aZpj8HZRK6J18siqFf0FyQsIEc89fWT84snb+/s8XRYRVEplp61F
WKTRM3+X5ncE2b4/s+FJJsmQXfN5eZnxq2ZJEfVJo38BnxxrFQ==
          "]]}, Annotation[#, "Charting`Private`Tag$24987#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$24987#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Kr9QzismfNnvIakKuu0C2nkoXP+q4Ww6dTU4pGr9eEHx6+acyq/+49VQaHmh
sYviJ0mt3P2wWDXQcNU1sVD4dZrMKUW0GrzuB0+hlDy4afIb7l2rBpkGZQFL
Sl5XGjKYO72qobXkgdEdSr6T/AIlB+HVILf62e46JX933wRz6fRqGJhVH5Dq
wWBTISorqr0azievnCqm1I9iMrN+81Q1cIiYsFh1UvrvIHhza70aPl3rTd1u
x2B3a3zVzHhqYEDUa2anDYON5N1bCpWuAVGr6FxbSr2Kej+JqNGoAa2euJtV
lHq+oeI8zu9UA990dr1VGjHY/Erzx7iaGsA5nxj3qcRgL3MP8XD11sBe4B/N
e5T+Gfe89l17sQbeRWWzqVP666iSFmsecy0MewpvtxZisHZl8tnut2oh2+Dc
6ElKf/7lLDLIfFQLObSTxIAMDPbtY8ntocBacJw8M7lA6ecaOWEN5YJaKOmZ
TnqcSOnfYrZJauo6qHWpf7DwDoO1eLNrNM9ZB1cNJcPiKd+LNPuF9haJOpD/
mxmIhmKwEscrKkJN6uC5ibbN9dcYrNpj6/fHC+qg4+A+/TcPDFY+wTgz+nw9
4AKcLC1vYLCmQR0z/hfrIVbgqzWDIQb73F2V98mlevjW5ZL0WReDbdAVjzY1
r4cLazeFvqljsLr7B36nA+sBH6bxg/UCBmtjlWmZNVkPkRJnTf7SU/LWPvXh
A74e2OMNE0poMdhM+bf9IRv18OE+d4DtATuWyOyl48TQAKoMlzLfrbNjH9fp
Kf0n3wDtHZoJVybYsW/4NzmqwxpAQnUs4EweO7Z0Vr2jS6URVmMfs127zI4d
1PRbDbvSCNcVhXbCgR27lVfLqXutETT7mnvrFdmxCs+UbNruNEL1M9lvtOLs
2HLM+a36yEaIvfU3hJ6FHVuhwc1ftNQI9CsfPgoMsGGrM38/io7+Dg+enLEW
NWPDNjomnjIlNsE38Y6j53RZsZtnEJZcp1Y4FdUXLKjEhKXZ+cp6SuQnEOZx
84KXj2Dl/1mXXs/rAKYDTi/VARpsx2vZXy1iXXDskeH3te/7cJGlneadXBc8
6D0eNZa+D1kfbBTMsV3Q08vkMvxqH17lhaes3OiCqqoWb2YNyvrhJbeTfl3g
LF2i5dS8B1niiScch7qARyX25b/2XVDDvyw4rNYN3vHtPZVLO8D3lrDzhdwN
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
+Rg3//2j8JiRnINqjPL/AB5H0Fc=
          "]]}, Annotation[#, "Charting`Private`Tag$24987#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.5080876943543223`*^-12}], 
               
               Offset[{2.77863738808555, 1.1310058644998753`}, {
                1.12, -1.5080876943543223`*^-12}], 
               Offset[{0, 0}, {1.1785820447467337`, 0.7716407311825741}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1785820447467337`, 
                0.7716407311825741}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1785820447467337`, 
                0.7716407311825741}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1785820447467337`, 
                0.7716407311825741}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.5080876943543223`*^-12}], 
               
               Offset[{2.77863738808555, 1.1310058644998753`}, {
                1.12, -1.5080876943543223`*^-12}], 
               Offset[{0, 0}, {1.1785820447467337`, 0.7716407311825741}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1785820447467337`, 
                0.7716407311825741}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1785820447467337`, 
                0.7716407311825741}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1785820447467337`, 
                0.7716407311825741}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {1.1785820447467337`, 
                0.7716407311825741}], 
               
               Offset[{21., -6.499999999999996}, {1.1785820447467337`, 
                0.7716407311825741}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1785820447467337`, 0.7716407311825741}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1785820447467337`, 0.7716407311825741}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"0\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {1.1785820447467337`, 
              0.7716407311825741}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -4.87498115151746*^-12}], 
               
               Offset[{2.778637387872404, -1.131005865023529}, {
                1.12, -4.87498115151746*^-12}], 
               Offset[{0, 0}, {1.1785820447467337`, -0.7716407316054174}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1785820447467337`, -0.7716407316054174}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1785820447467337`, -0.7716407316054174}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1785820447467337`, -0.7716407316054174}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -4.87498115151746*^-12}], 
               
               Offset[{2.778637387872404, -1.131005865023529}, {
                1.12, -4.87498115151746*^-12}], 
               Offset[{0, 0}, {1.1785820447467337`, -0.7716407316054174}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1785820447467337`, -0.7716407316054174}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1785820447467337`, -0.7716407316054174}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1785820447467337`, -0.7716407316054174}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {
                1.1785820447467337`, -0.7716407316054174}], 
               
               Offset[{21., -6.499999999999996}, {
                1.1785820447467337`, -0.7716407316054174}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1785820447467337`, -0.7716407316054174}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1785820447467337`, -0.7716407316054174}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"1\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {
              1.1785820447467337`, -0.7716407316054174}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -8.393034096184485*^-10}], 
               
               Offset[{1.9007504813116318`, -2.321022965804863}, {
                1.12, -8.393034096184485*^-10}], 
               Offset[{0, 0}, {1.1785820447467337`, -2.3149226852268554`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1785820447467337`, -2.3149226852268554`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1785820447467337`, -2.3149226852268554`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1785820447467337`, -2.3149226852268554`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -8.393034096184485*^-10}], 
               
               Offset[{1.9007504813116318`, -2.321022965804863}, {
                1.12, -8.393034096184485*^-10}], 
               Offset[{0, 0}, {1.1785820447467337`, -2.3149226852268554`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1785820447467337`, -2.3149226852268554`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1785820447467337`, -2.3149226852268554`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1785820447467337`, -2.3149226852268554`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {
                1.1785820447467337`, -2.3149226852268554`}], 
               
               Offset[{21., -6.499999999999996}, {
                1.1785820447467337`, -2.3149226852268554`}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1785820447467337`, -2.3149226852268554`}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1785820447467337`, -2.3149226852268554`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"2\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {
              1.1785820447467337`, -2.3149226852268554`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.178194550656928*^-21}], 
               
               Offset[{1.9007504811069504`, 2.3210229659724817`}, {1.12, 
                1.178194550656928*^-21}], 
               Offset[{0, 0}, {1.1785820447467337`, 2.314922684804012}], 
               Offset[{5., 1.1102230246251565`*^-15}, {1.1785820447467337`, 
                2.314922684804012}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1785820447467337`, 
                2.314922684804012}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1785820447467337`, 
                2.314922684804012}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.178194550656928*^-21}], 
               
               Offset[{1.9007504811069504`, 2.3210229659724817`}, {1.12, 
                1.178194550656928*^-21}], 
               Offset[{0, 0}, {1.1785820447467337`, 2.314922684804012}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1785820447467337`, 
                2.314922684804012}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1785820447467337`, 
                2.314922684804012}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1785820447467337`, 
                2.314922684804012}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1785820447467337`, 
                2.314922684804012}], 
               
               Offset[{55., -6.499999999999988}, {1.1785820447467337`, 
                2.314922684804012}], 
               
               Offset[{10., -6.499999999999998}, {1.1785820447467337`, 
                2.314922684804012}], 
               
               Offset[{10., 6.500000000000002}, {1.1785820447467337`, 
                2.314922684804012}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1785820447467337`, 
              2.314922684804012}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 98.29102237336676}, {All, All}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {-10., 10.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"1\"", "\"2\"", "\"NDSolve\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9104783166512413`*^9, 3.910486492299721*^9, 
  3.910487184693513*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"bb0eb51e-fc7c-4c60-b4f9-52a0295bc9eb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
             "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
     "**"}], "**"}], "*******)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.910480471917904*^9, 3.9104804808100014`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"aff6a79c-100e-476c-ac13-b1211fac1f80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"selCoef", ",", " ", "genVar", ",", " ", "soln"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9104409339464197`*^9, 3.910440934322338*^9}, 
   3.9104414376885943`*^9, {3.910468296420635*^9, 3.910468297175737*^9}, {
   3.9104769600041895`*^9, 3.9104769603885603`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"3c64a6c9-1a96-483a-96cb-5f49e11e73f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "0.01"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"y", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
               RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
            "x"}], ")"}]}], "]"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", 
           SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
           RowBox[{"\[CapitalLambda]", " ", "/", " ", 
            SuperscriptBox["W", "2"]}]}], ")"}], "1"], "*", 
        RowBox[{"minus2", "[", "1", "]"}]}], "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.01"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"y", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
               RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
            "x"}], ")"}]}], "]"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", 
           SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
           RowBox[{"\[CapitalLambda]", " ", "/", " ", 
            SuperscriptBox["W", "2"]}]}], ")"}], "1"], "*", 
        RowBox[{"old", "[", "1", "]"}]}], "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.01001"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"y", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
               RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
            "x"}], ")"}]}], "]"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", 
           SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
           RowBox[{"\[CapitalLambda]", " ", "/", " ", 
            SuperscriptBox["W", "2"]}]}], ")"}], "1"], "*", 
        RowBox[{"old", "[", "1", "]"}]}], "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00999"}]}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.01\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.01001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00999\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.01\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.01001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00999\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"e87e1798-d41f-48fd-a978-6f6da60f1e81"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 148, 40, 28766774182623955770, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9104783168726826`*^9, 3.9104794314322147`*^9, 3.910479535039738*^9, 
   3.910486492432867*^9, 3.910486672185702*^9, 3.9104867213401384`*^9, 
   3.9104869021877856`*^9, 3.910486985448387*^9, {3.9104870168689995`*^9, 
   3.9104870236662393`*^9}, 3.9104871848071637`*^9},
 CellLabel->
  "During evaluation of \
In[148]:=",ExpressionUUID->"35a6d02e-56c8-4ddd-96cd-dccb34c22713"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 148, 41, 28766774182623955770, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9104783168726826`*^9, 3.9104794314322147`*^9, 3.910479535039738*^9, 
   3.910486492432867*^9, 3.910486672185702*^9, 3.9104867213401384`*^9, 
   3.9104869021877856`*^9, 3.910486985448387*^9, {3.9104870168689995`*^9, 
   3.9104870236662393`*^9}, 3.91048718484706*^9},
 CellLabel->
  "During evaluation of \
In[148]:=",ExpressionUUID->"c3ab1d7e-9d08-4aeb-9a95-46755bc6b58d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
3uX+DMyQa/8DuoDrnQ==
         "]]}, Annotation[#, "Charting`Private`Tag$25310#1"]& ], 
      TagBox[{
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
dVohIJnN+vrzJ+GqR10rnmVkqP4HG4fEKw==
         "]]}, Annotation[#, "Charting`Private`Tag$25310#1"]& ], 
      TagBox[{
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
nvljK3Dw4tFWgxP6qH1A5R3jyRU4UQ/nEzP10LVPfqKsMyswhx//zSimh84d
YVz0XVwButEa0os7d9G+dgEt7fUVGHvVZVtXpotqbK4LHvhB4bfuvmGPti7a
xVtFV7u5Am7NfR3d6zpoo//N2vN/VoBLWZDoJqGDfpIxv/CbbhUetGrRr7/V
QqM+vtp9zbkK01Xz5qzlt1CGSfNh3dOrMNpkwizNdwt9dliohJ5nFXqdo59K
p6ihPo+rrZwurIJUb/391BBV1PrcUL+S2CrcNpRncgpSRnFa6YU74qtQSp9a
eJRBGTV/ahH6SWoVhox/NXPF3kQNJjZkT91YhaAzu28c8pRQ1SSm9/ibq+AE
slnpGwpoW+tQ0FvVVchdljqbG66Ayv1IN9JTX4Vjw/++dJ1XQKW1LrE2aq+C
ShijvoyxPGV+qD6Nf7AKCh2eZZZDgB7wC7wr40Q5T8kq32DZdbR8g7DT6LIK
GXK/8nQFrqOWVvczlN1XYcR9HBeeIYO2aV1eu+OzCp59G23DSdfQZ7xT/vYh
q+A3ppZX+vYqKpmieuFX6CpUi8gUWgleRRePlH/xiVgFmntFt/zLpVClXxEn
wmNWAcey7mDTL4nSdV37kP2Ssn7b1lfnggRaLpujLZS+CvcFvtk8bRRHLUuO
bRW/oeRz8OrhDw/E0bY0nFxD9ipM4kw7Vl5eQYPtEodHP65Cg1V6VaewGErD
SqZmalmFw/FJR2PVLqGloQ/yEttWwbd2XrerQgg1/9uhwdW5Cusl0tfW+YTQ
lqXXKQI9q/Dw/Ivm4SOCaFC1uoji8CrcaLRT/vGHHxUXqRr4PLoKq0Li0gZ+
/Oh8Jq+n9sQqGCok1qrQ8KMKkTstRrOroCdT5RXGegGlNs6777m2CtsWUXR2
uufR4oHj+/sEiv59R+j6l3lRU5Wn2SHrq8CdeZj2vj8v2iSmR4rfXIWiAO2R
7vJzaAAt7bOP+6uA51np47zGg1LlGxfNH1+DguzelVFRLrSDMGKfcWINmqNw
ktLhnGiUmI7ow1NrcNkzziJumQM9Wa34cej0GpSO1qsMfDqFinYKfOgSWIPe
dt2xbCt2dPNwlnXIpTXofFn1eHnyBFqrySWkILoG8SJcRpr6J9Cbw0fz6yTW
IMpNy+aoLhv6cOnHu0/oGjDOTBrftj1Oub/bWtnIrwGdDpfK+A4LumK7dEFA
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
0sRk1qnuhdESAVpoNXU6rmF/CxWojh8kwqnf7SKPJFSxJutn+a8YiPC8K7Bl
KeMeFizQoXvhCBFYdR4XKvfLYco4+r+fjhKhyZzlovXITexQjlruNWYiLK6R
6t83K2A9ZpGaLceJoEsnKbIbLo/Env36W/0EEdhf9++Z6kthd6aYModOEqH+
WOuACV4HY3+lfcuEkwhhMVLPsxUeYeP343+ucBPhmZaaRHysIvaa/Xu681lK
Pqd5hi+7amCm308o/z1HhA+/jJ9q9+pjfPH31kP4iJCxSv0gVd0MW9Z6mXrs
IhESswtWmM4YYAVHJ+RfChLBtP92KqJhhdl3c+N5hYlQSWbZTSy7iV0JN04s
FCVCX28CS4OZPrap/Ba5eoUIQXStwY/+mGLVdPO4RgkiaHi6rLIzmmI+Ledj
1a4S4cHuYtMJIzMMDXgkM3iNCMvMd7xaeP7DaNC8+Yc3iBBo6mSaHvoEa99d
icQhRHCOepNC/dkMC6sRknKUI0LxZNpBOrwBpuFhO72jQARGatbj5bTO2DGp
T6HBN4mg5jzWKX/+ETbwY13sqCoRLkoWLzD7WGHJxVfGk28RAf9+jz/s83+Y
gb1LMM9tIqB5IqtHDB0xbuEK4QItIhy/sVXBg3+Mza5uDUnoEmEM+x53ZcEW
y8675o/dJcLb9IQ6q1QnzOqRt4DKPSL8y3jCp2Zggwmdr+/vMyACSZ4usaTX
BSPO7nkbPqTwz13k/CLEGSt+A3yLxkRI7pCsfhrniP30/klvZkbh759IfouU
PXb1Xh5+yoII491eaXUubpinxINvhlZEsP6zHpAv4IrVHTtWNvKECDTM7KmK
pnbYPr4l+a4NEU6uyn58buWKyXW5e/fbEWEz9bvo/TMeWHCOkLGmIxGmjpVR
N3xzxToCpuW7nYmw6sA7oRbxGGMwir+g6kYEsSe+rSrWHpi6jPKhdg8iVKFf
Xn29441Fn/hDkPcmwqfNIJrAWh+sb+NjX4MvEYbHnLj0Qt0x1l6z8hv+RDCP
/fDmGdED0y84kVodSIR5hSjr0AAvLPX5Zx+pZ0QYzeSMDRv1wCbM/UxKnxNB
vhuKr2YHYGfgiuLlcCJwdWz99qFyxUy5lvgLI4nwZd/0KYuuJ5b9O/WwYDQR
fqUIypYd8MRwgxqk3Fgi5Fa62l4J9MEEiqkGeBMo/rORGO7Ie4rZRJVXZCQR
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
8D8FQahD
         "]]}, Annotation[#, "Charting`Private`Tag$25310#1"]& ]}, {{{}, {
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -7.528637634453085*^-12}], 
             
             Offset[{2.6714880811159865`, -1.3649730519153935`}, {
              1.12, -7.528637634453085*^-12}], 
             Offset[{0, 0}, {1.1800000000000002`, -0.05213227977700961}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.1800000000000002`, -0.05213227977700961}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1800000000000002`, -0.05213227977700961}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1800000000000002`, -0.05213227977700961}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -7.528637634453085*^-12}], 
             
             Offset[{2.6714880811159865`, -1.3649730519153935`}, {
              1.12, -7.528637634453085*^-12}], 
             Offset[{0, 0}, {1.1800000000000002`, -0.05213227977700961}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.1800000000000002`, -0.05213227977700961}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1800000000000002`, -0.05213227977700961}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1800000000000002`, -0.05213227977700961}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{78., 6.500000000000017}, {
              1.1800000000000002`, -0.05213227977700961}], 
             
             Offset[{78., -6.499999999999983}, {
              1.1800000000000002`, -0.05213227977700961}], 
             
             Offset[{10., -6.499999999999997}, {
              1.1800000000000002`, -0.05213227977700961}], 
             
             Offset[{10., 6.500000000000003}, {
              1.1800000000000002`, -0.05213227977700961}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"New:VG=0.01\"", BoxRotation -> 0.], StripOnInput -> 
            False, LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 
            1, Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{44., 9.769962616701378*^-15}, {
            1.1800000000000002`, -0.05213227977700961}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}], 
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -3.3599064956431464`*^-12}], 
             
             Offset[{2.7599055400502213`, 1.1759767897369822`}, {
              1.12, -3.3599064956431464`*^-12}], 
             Offset[{0, 0}, {1.1800000000000002`, 0.043475082284805726`}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
              0.043475082284805726`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
              0.043475082284805726`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
              0.043475082284805726`}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -3.3599064956431464`*^-12}], 
             
             Offset[{2.7599055400502213`, 1.1759767897369822`}, {
              1.12, -3.3599064956431464`*^-12}], 
             Offset[{0, 0}, {1.1800000000000002`, 0.043475082284805726`}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
              0.043475082284805726`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
              0.043475082284805726`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
              0.043475082284805726`}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
              0.043475082284805726`}], 
             
             Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
              0.043475082284805726`}], 
             
             Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
              0.043475082284805726`}], 
             
             Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
              0.043475082284805726`}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"Old:VG=0.01001\"", BoxRotation -> 0.], 
            StripOnInput -> False, LineOpacity -> 1, FrontFaceOpacity -> 1, 
            BackFaceOpacity -> 1, Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
            0.043475082284805726`}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}], 
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., 2.4298184392650098`*^-11}], 
             
             Offset[{1.7744734747819078`, 2.4189344528728807`}, {1.12, 
              2.4298184392650098`*^-11}], 
             Offset[{0, 0}, {1.1800000000000002`, 0.13908825845128547`}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
              0.13908825845128547`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
              0.13908825845128547`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
              0.13908825845128547`}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., 2.4298184392650098`*^-11}], 
             
             Offset[{1.7744734747819078`, 2.4189344528728807`}, {1.12, 
              2.4298184392650098`*^-11}], 
             Offset[{0, 0}, {1.1800000000000002`, 0.13908825845128547`}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
              0.13908825845128547`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
              0.13908825845128547`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
              0.13908825845128547`}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
              0.13908825845128547`}], 
             
             Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
              0.13908825845128547`}], 
             
             Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
              0.13908825845128547`}], 
             
             Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
              0.13908825845128547`}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"Old:VG=0.00999\"", BoxRotation -> 0.], 
            StripOnInput -> False, LineOpacity -> 1, FrontFaceOpacity -> 1, 
            BackFaceOpacity -> 1, Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
            0.13908825845128547`}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}]}}, {}}}, AspectRatio -> NCache[
      Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> {{All, 134.}, {All, All}}, 
    ImageSize -> {824., Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, 
    PlotRange -> {{0, 1}, {-7.528637634453085*^-12, 1.0509861433763694`}}, 
    PlotRangeClipping -> False, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
    Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.01\"", "\"Old:VG=0.01001\"", "\"Old:VG=0.00999\"", 
       "\"NDSolve\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.91048703075078*^9, 3.9104871931021023`*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"228ff785-0a9a-4cd7-8e0c-c3e8716fc179"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
       RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"y", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
          RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}], 
      ")"}]}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", 
      SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
      RowBox[{"\[CapitalLambda]", " ", "/", " ", 
       SuperscriptBox["W", "2"]}]}], ")"}], "1"], 
   RowBox[{"minus2", "[", "1", "]"}]}], "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "start"}], ",", 
    RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
    RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", " ", 
    RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
    RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
    RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
    RowBox[{"VG", "->", "0.01"}], ",", 
    RowBox[{"y", "->", "0.1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.910486798040856*^9, 3.910486833203483*^9}, 
   3.9104869057049637`*^9},
 CellLabel->
  "In[151]:=",ExpressionUUID->"a33a2ecc-cb3d-4b9c-a247-ebb0bce850df"],

Cell[BoxData["0.983480415084481`"], "Output",
 CellChangeTimes->{3.910486804594592*^9, 3.9104868376359305`*^9, 
  3.9104869930068026`*^9, 3.9104871932089214`*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"d34626a3-c11c-451f-ac11-e1264947fcd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
       RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"y", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
          RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}], 
      ")"}]}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", 
      SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
      RowBox[{"\[CapitalLambda]", " ", "/", " ", 
       SuperscriptBox["W", "2"]}]}], ")"}], "1"], 
   RowBox[{"old", "[", "1", "]"}]}], "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "start"}], ",", 
    RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
    RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", " ", 
    RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
    RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
    RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
    RowBox[{"VG", "->", "0.01001"}], ",", " ", 
    RowBox[{"y", "->", "0.1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9104867362223186`*^9, 3.910486760391956*^9}, 
   3.9104868349369297`*^9, 3.9104869071838894`*^9},
 CellLabel->
  "In[152]:=",ExpressionUUID->"06b78727-417c-4f71-854a-111154b39681"],

Cell[BoxData["0.9845906411606969`"], "Output",
 CellChangeTimes->{{3.910486738038201*^9, 3.910486760974267*^9}, 
   3.9104868058047056`*^9, 3.9104868387223487`*^9, 3.910486993052556*^9, 
   3.910487193262087*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"c8accdc4-9712-4ebf-b563-031867c54f1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
       RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"y", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
          RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}], 
      ")"}]}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", 
      SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
      RowBox[{"\[CapitalLambda]", " ", "/", " ", 
       SuperscriptBox["W", "2"]}]}], ")"}], "1"], 
   RowBox[{"old", "[", "1", "]"}]}], "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "start"}], ",", 
    RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
    RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", " ", 
    RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
    RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
    RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
    RowBox[{"VG", "->", "0.00999"}], ",", " ", 
    RowBox[{"y", "->", "0.1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9104867777343693`*^9, 3.910486783920784*^9}, 
   3.9104868361545672`*^9, 3.9104869083111353`*^9, 3.91048712321819*^9},
 CellLabel->
  "In[153]:=",ExpressionUUID->"cdfc3bba-f8cc-4134-8797-910e0a3c51b4"],

Cell[BoxData["0.9823688440165305`"], "Output",
 CellChangeTimes->{3.9104868068541365`*^9, 3.9104868398211946`*^9, 
  3.9104869930923777`*^9, 3.910487193305527*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"9954422f-0056-4165-b70f-1728fc821d8f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
             "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
     "**"}], "**"}], "*******)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.910480471917904*^9, 3.9104804808100014`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"0af761c2-f0b7-4a20-83ab-be5c27d6c00e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"selCoef", ",", " ", "genVar", ",", " ", "soln"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genVar", " ", "=", " ", "0.007050979"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9104409339464197`*^9, 3.910440934322338*^9}, 
   3.9104414376885943`*^9, {3.910468296420635*^9, 3.910468297175737*^9}, {
   3.9104684126755915`*^9, 3.910468413916339*^9}, {3.910468450698928*^9, 
   3.910468480628004*^9}, 3.9104792331159897`*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"39ed7bf1-411f-4e64-88c2-c804da89c095"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"HaywardScenario2", "[", "k", "]"}], "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "\[Rule]", "start"}], ",", 
           RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
           RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",",
            " ", 
           RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
           RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
           RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
           RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", " ", "2"}], "}"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.910468422400401*^9, 
   3.9104684303243494`*^9}, {3.910479437308853*^9, 3.910479440388759*^9}, {
   3.9104797735518637`*^9, 3.9104797828580613`*^9}, {3.9104801264280214`*^9, 
   3.910480147172367*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"40ee0599-d3b0-4466-b396-2c05a9609be2"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 157, 42, 28766774182623955770, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910486507276762*^9, 3.910487747248337*^9},
 CellLabel->
  "During evaluation of \
In[157]:=",ExpressionUUID->"485f0327-82c8-4cab-8f7c-46bc046f07b5"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 157, 43, 28766774182623955770, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910486507276762*^9, 3.910487747288795*^9},
 CellLabel->
  "During evaluation of \
In[157]:=",ExpressionUUID->"600c069b-c65d-4d01-9b04-17bed0a155fe"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
6H+EiMKj
         "]]}, Annotation[#, "Charting`Private`Tag$25975#1"]& ], 
      TagBox[{
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
y/Q/m53FNg==
         "]]}, Annotation[#, "Charting`Private`Tag$25975#1"]& ], 
      TagBox[{
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwsV3c8le/7JzTMk6SMjzISMoukep7rhCQrq6yMREZWNmVkr1RWEtkqyd4c
WyqUvfc453CGKCKq7/m9Xr/zz3m9n3Pu676u9/t9Xff9CFq76tvuo6OjC2ek
o/u/bw1bYn/Lyk3094RGNvsGBRhVeN1meeRBZtXep9qBCucyU9MreFThSRWL
wct5Kmj2jpZn8BhCJItL96GBNTCy+YVL4LEBwbNtS5UT32FaJlLlCY8nHObf
7rRp24CsozciYnjCAHmxal6SsQWPD1acjuZJgsibxcfszP6CxLXnUeVuSdBN
T3QnZ/yFgXDXlcmuJNCRMh6wmPsLIgyS76W9k+Ef7PgfsP0HH//kSQ8NpEAm
77E7787TYVl/pCiciHsJw5qnvyZepsemTvurVP19DRoCQ28sLzNgr/Cb5M3c
zASSlWNzgxkDdtVUkengh0x4MDS4u+8hA1aA7Hf3g1QWJLlfzNGrY8C6Opw/
RTeVBbFVRQwEeUYsp03J2/wLOWCTcOZcyWkmrLFJdsn39TyYz1WsaNnZj12b
NGTO4c2HmVTPv1xcB7ARFgdtDVTy4SPrf743pA9gK+668lYn5UM5Slbwtj6A
ZXdBwh8qFoCju1h5+OcD2M6QcdP9AW/ARl6GKTzhIPZs0eH9/AcLIUkLRubZ
mbGfpTutemULwdZJcePNKWasVZlvQ6BJIRA0DojduMyMfVI96zZfWAgsX7GW
WAdmLLHlw2SB9ntQcleLLmxlxr4evl4ml1gEonSE1lAnFizLv8e3rwmUgMp4
2vzzd6zYVAcjC0m1Eljn+BZPaGDFigxJWh12KYE3M/GP+L+yYtF3o3cncSVw
9Ni9EeENVmzdu5SqGulSKOrvbSu4wIalGJAbNb+WgtytjE63Zjas/KFRBF0o
hQL1TceKb2xY/6bWJtmtUpDYevBgaJYNe0D8RctRgTKYa4v0KfvHhhX8e6Vj
1rkMWh22DUcQduzNty+6PdjKgXdO+Ed7BTs23TxE655gOVyU9vQntrJjFzid
e40VyuHjzdil1W/sWNcA5W+IeTmMLfLqRJPYsdH6lIEDH8rh6oViJklBDixu
T3nilVYFzEwbZO6P4MAylkuZxVtVQA5PXf+BBA6sht3xqWDPCli/QGjDZ3Bg
R/sp07bpFbCirbOEVHFg1wtS52XItPU7Aup6CxzYU3pUYntsJSDeTNYH+DBY
3qBrF+2yKyGpFV9udRKDxXzIimWuqYTLiaHb+acw2N8HDaT1FioBXju4/ZTB
YPtaajxmLlRBbdvz0GwVDLaTiul8rFMFlk8iV0zVMdh6fkfuUzZVcJLb9h6d
Ngab78tfd/9pFUxwF9Vx3MJg/WUf/91eroIEzXVrrB0G62oxcSN9twqCpHX4
zO5jsDZx57LhcDUEDUrwWLtisDeIyyoRl6vh2oAinYIPBiuSpRF9JLEanjNE
XFkLx2B5vuZOVL+thnf7H606RWOw7Ht7Z0ybqmF9Cj0yGofB7hiVfM1aqYYz
sbmMDxIx2K8cXFzS2Br45FNo0JiJwbYjzrb9N2vAwjwB/zoHg629/7Ha834N
zPU9R13yMdjcLl+ThpQamL2eenewEINN3ewvtCiqAWnlZRWHDxhsvPCZPfq2
Gjj0a4iDXILB+gZNv1an1ICWyWxCbSUG6/zh/HfSvlrgvhlgsa8Gg7WefHrl
6fFaoPvZjirVYbDaispLwyq18JqwbeeCw2CF1grE76bVAqvc9tNfHRjssf/o
Hu4vrQXG7Paz7z9isKyaJj3vOmshJslYResTBvurgMX1+/dasOgWmL7VjcGS
h2xaEvfXwUP0WmBLDwa7sK/psCJ/HXyfE8Ud+4rB9li4VQZcq4O7me5Xn/Zh
sG1xn5kEzeuA/8/ym5J+DLamXsiow70OFkwFJnADGGwR8eFbu6g6qEpcJ9YN
YrA53MM7zK/rQP3jzfncIQz2haq0ZnFFHVzcs+p7OIzBxrlHput9rgO7fvX2
KyMYbEjWHOXnTB084rPu2qRhn69KkPqzDgqen1x9MUrTS7pq+fPBehgpiz51
YgyDzXsiG7fLXw9jn44tp9DwRcr7s1Jy9aClQy//j4b7tU6PW1ytB/NTif8Z
j2Ow9kU5Qc9M6qHJQvZDNg3/ZREQbXOuh8nfetRJGk66/7Lnx+N6OFsUQd4/
gcGe6ebyOJVSD99fulcI0XCbxDMeo8J68BH6piNDw8YxLC1RTfXA89rxiyQN
U1ci7tUP1MNRIbGzfDQcfn0fGxlfD29U/j3/TYvP/y6g4r/detg/ubv5hYbL
D+6Y3OBoALouxDGOhtXtPekeCzfAhdLt3ygNz3atFZQrNsB6j0flAq0e79P3
tZc0G6Ak71CuDw2zRuJ/HLVqgEtDpwf/0PjJwd9Ju+bZAA39OnpeNKykNo31
i2qAxdLDEjM0PvvyjQmF6Q1gSzjqeIGG7zENPZkqbQD7w0cEwmh6JHZ8mYDx
BhBhlz36naafhIja4weUBkA7j7ljaLgltPV0Ln0jENsivYVoelOUaz33SzTC
7R9ahXw0f4TlnOO7gDbC7KGNH/u+0ebFvpJWB/1G4K9v4pnqxWCvteaz9/o3
wndlQRkbmv9mTgpW/Y1vhInaSKUjXzBYz+B0M9ncRpB8Vn2zkubXbEh8m9jd
CP2aNTs9nRjshUz2G52zjfDTaDBdleb3r3+jN7d+NMLnXM2o4jYMdhcXrGzK
j4Oes2GuJs0YbMJ/e8RYWRyMY+gj02j9Ihbg8xSnioPgn/oCXxsw2JuXXaZO
OuMgVC2Mka0Wgy2pN/Mm4HDAZWR6kUTrTzXeUX6eARwoCZtPttL6d8pPv10D
jwMttwzn2PcY7CGl65hi9ibgEXfP/FWAwd6tOV/oadkE93lEvypk0Pqx8vAM
PX0zuKY6i92KxGBvx+0aLnE3AzeRjyAURtPLZrn7o2Qz9Mcm2M4HY7CSR+vq
Yo2b4SqDCfWcPwar7G2VfLS0GZQ6zl+Xc8Jgz6cbFSTJtIBRSw/Xa9q8NInq
mQ+/2ALagQ+mnl7HYB95XvnP52oL5N66k+Z5FYNt1TqTZGLWAhV3Vq8dQzBY
rT9/HwtEtsBl5+iE9jMY7B2LAvO3My1wNGgDPu+n6afB9/LlSgvI6WxX/KDH
YAvOPxuK+dkC5NMTNSK/ObBkdn9NZ+ZWwL+7LGOC58B6N2srnT3fCnbWh6Y/
4DiwcSc3uRqftAJz7nE1cXsObPWCSs+3y23wq6VsPfgDO3ZE/fH6k2ttMHmt
g98xmx27VdzEraXfBg2/CGZXktmxig+V7nyyawNR/cWi+kfs2NojMlstCW1g
/Ee/akqDHVunynuynNgG7/2J//1bZMM2Fnz3SEpqh6Mm98damNmwbY4ZfCbk
DugtrnsleJYFuymKcHxw7oKpr38EeO8fwO7beY/hO/UFWgxcl/jOMmDP/7Oq
NijuAWzmzkD24l/oCZP/+lHiG4xhavutrm7DRY7ufc8VvoHCydGeNIltePvy
jqIZ9htw9CVa4zm2IbQ4Pmvt5jeY/mceUj7xCy6OEd2PP/4GjHibqBMPfsHb
MxnHHEe/Qf+30jaD7C1QXgkp3a/cB926ovGGHJtw4hlp5x21D+R3NTw+CG1A
052gd+U/+uDczkbeFtsGWJw7YtKw3QdyIc4sujvrkD5ysbZnXz/Uinz0PNe3
Dsf/i/Fe4+6Hgr9IfmPgOnAWiv2Qh344ckIpYXTmOzB12JKbn/YDez2vwbVb
a5CXvPPqU1I/MDPyRMzLroGq3RPN/pf9cK2x5f0rljUIYa4qXMjth70mlSrX
Vir81WV0YKrthyEuDcYUaSpsT+csa8z1Q2CB8tlhdgqQfs3ODMsOAKvBo+eL
+FWotnvapnF+AMxem3Fktq1C8Cha0HxpAAIGrIcCX68Cd02G8zu1AciUffSn
8NYqKHub7T26PQDLKeJqlZ9WIO3nCI9I1ABURNxiCqwggvp6r6H77ADExSs/
eJyLhyN3Ai4QlgYgf6yw+m0oHmb6JPlvrw4AmlSvsXEXD56lsYtXNwcg9ovh
MbIIHjJdr7vzsAzCVAqjuu/bZdiidDxtOT8Id+4VTS1ULUHeasMX9vhBqN/k
fei/sgAuL24IOyYOgvSCm4/61wVQVF182Jk6CDbN2rIKFQvwJYNZ6lHuICSf
xkY7BizAuq7J05XaQRANZSpVPrIAaM2WQcfiIFhqRlu+UJ2H8VC5aT+lIZi4
vbYe6T8LObKdCsPoEOg5hx8K15wFp2njeFnVIQi1nwyu558FOsVgIOgMQcnd
zeXe5hkQXf2abWgzBOIbFcTnB2fAU9fpnszTIdgyOZTqkDcF7P+9WVtaGoIp
A4GHZxgnAHsrdHpxZQjOpn1UeTEzDu5PLbsXqENgcfqfk0zdOIzQH38ztz0E
xx9YGS65jMNrfJTFFOsw/Pwlk3F7agykSx17B+WH4YF0/FX75lHQVpF+3xY2
DELr130384Yh8BHzy9boYdjvZC3wjva8tAof0RI/DExBUc1hNsPAJZZp3ZQ6
DD2dTHYVIsMwxYrhrS8aBhZRad/VgiFwGlmPKhsahgU7U6Hs8kGIc6i6lyUy
AkdGxFlQfD+sYj9EsUiMwGsudwfTTzRfHs8v9JYZgTU7i5qswn7Y15VE1bo4
ApoXezwLXfvBT8TTe+fGCNx89bvhw24f3Js9G6H/cAROKkfMafP1wZWbpfmM
AyMwHC70MGWtB15Lvu1yHR0BOcS4JB/XA3sMWSsTUyPwqS5J5m9sD9SWP5Uq
I4zAAIbQHS3eA9IY1yrzPyOgA52h++y7gb9bqrNabBRKX4z+O7vxGbaw75fs
g0ZhnxaW3VqpCxrzSK98wkbBwnmBvpmzC0IOShpERI8C0d5czoD8Edj7ilpz
E0dhevWI1smsjyBqWfx65s0oIFkPy9WYP8KtgDJjw75RuGjQNRhP7ICqupoe
EByDQMWSkw7dbeD/33aojugYTGJFvS+8bwPs4wuXzM+MQV6tarJibBv0qNe9
81cYA6ahNa0OzTZYGq2PqLo+Bl4KD90Pf2sFri0c9oz7GO1+w5t/nTb3Pc92
VHK3j0EL09N620tNcE/+ZNbzT2Ngw2VVXErfBMbnH8Wyfh0DNW7pKbNPOLh0
Ud563/gYTDs+G++7hYN9ynkcVOoY7B3RPHnatxGe6oU5dvKOQ/6b0idcPfVQ
6KZ60tN9HEZfy/2LqqqBdPcsljWfcXiFfBPCR9TAE8+9LYeAcchdus6QZFwD
br6VvZZR4/BtO0Bibq8aFINFHmq+Hoe2Bh8/qevV0PGUcUToyzgc/2c7eeF7
JcwWd8T2C06Ag1IZHuNVDn0URvLZ0xPw5dEjATPdcmiRvKqVJDkBZpzT+/Fn
yiGrsJPVSHECNs1Qh8bFMrAu+PhkSmsCfESnme/cKgN8xqenBJ8JyDy891Xx
WilQ4noS//ROAMH56V3ld0Uw083602JwAsg4P+PXLkXwlVnbsGVsAs7l9F20
lS+C4qhertDFCfi3OiIt1/oe3MK+Jh/cmYAIsOgvmS2Enw/7XhwRmQTOV4QH
9TLvYNdx6JW4/ySYfrj+quVYARieN38uHTQJL1paz1mT86GIHh9xLoyG7R4f
1m3NB4vUXw+Q+ElgR7K/sjvlQ2snr7peziStbvQLS2ceRJ6889P3yyQ4ZRKs
ssNyaX1F0frEOwVFCbrxKorZ4JTtrdx7YgpspGJ+v+DKhg6nf4oDIlPwWHPz
0pmNLPBmOCw8JT0FjALZ5azFWTAuK7+zpjwF/CLvakvFsiAz1j//2P0puESQ
Paav/xrOXDnw917DFNDLWO7mv02D0sL3p8dapuC4r3DLtlMayHPp6l3/OAW+
rWlIh1waXCak5p3pn4KciECWtsaXoPNEQvM7fgqaP+sPXxlLBfdx7VQ/zmnY
VqCKZIi8gC3ljdbVY9Mw4LqC4/meAg+LUkhm/01D564Yuq8xBcKCZlFUbBrG
vKRWjtxMgZRTD5b3odPA0nFxQiQuGeoeJJ2Nc5gGWwubO8ZsSYBOXrj9x2Ua
PBc/ul+cTYQ21elwF89pWH4Z3fKoLBG+HBMd1w2ahqSlaa0TRokwhasJOpo8
DQkM4vs/FyQAHfNkz+sWWj6lHsY8Rs/hWo6gXdmxGaD3mqBzoj4B+VR20Y/8
M2BTb8BjU/QETsbvLk0IzgDq93h8zvEJ/PYbtmaUnIFvjNTXNitx8EEv2sII
OwN5VykfHpJj4Qj9+s0/9jPAz7xv7gRzDND9mubidJkBBYtw961v0UAmfxkU
9ZihncNfQlVSouHjWJ6ebsAMRPAodyEi0eBXaqyd+3wG6n9xvnp1NQpmLVtU
r9fPwCxiua6WEQE9Nz8wWNDOFYkM7bvCjhFQq5nW5t4xAzzX7f0dFCMgQdET
m/51BmzPXXgiMxgOVznELq8tzMDbF6KX4znC4X3T03PJLLNwIeqa8XpaKPj8
Zyk0f3sW1hRvJ9j9CgZrXdlbU3dmAXcmFib6gkEnlD5m9N4sjE7LyGQUBoPo
Su56r9ssuBRnBh62DIahSmJLfdgsREsOW117EQSyWu6WSUWzkEFx/ztrGwD8
QSqJT8tmQapG8chVoQA4UM7VFVM9C8JSx79cmH0EM8dqpB+3zALHTtJSl+kj
iFvc/eM8NAurpp/T7IwfAtE/PP3a3iw8l3Tj++zkB6u3zthn083BMtvLkxly
fmD1/ci+Ewxz4Mik/WZtyxc0hZcVeA/OwcmFc/dZQ31BKDoyA8M5B2kyIaHM
2T7QZ9jj9OfUHBx9ttun+cMLJMk3WUa154DhZ5rN51V3qDXUao7RnYPpRx6H
l+rcQQWn7IEazEHCn3ohj2h3MI2Xmcw3ngPqwFjUqrg7RMseeu95dw64xN/e
E3Z7AHjPRg1OvzkY4Bz3ImHcwH26/G/nwzk4JK+TXNXrCn+uviv3C5yDpMLW
25b+rsB1LIV3PnQOwmveGrKNuIBKnetqSfwcBK6yYXJTnCHrj1CMdt4c5Dxa
KLty6T5I3uNB6d/MwedXVycO/nCEmq8cG5Xv5kDs1K+x4PeO8DVzz4S/ZA48
MM0KAQKO8OfKiDipbg5USWz/BbA6gGlE9Oeob3PQmHZzSPeAHRzh+H6w4zdt
/9hPaikud2EAFxN5/c8czH3z6FJC7kKC06n93/7NwZ9/KVp6rHeB84spwwTj
PBzeYQ8de28NnOGdf9bY56HtUNms5Pc7gNlN2+ATnoea+wfhvydW0PdO4UH2
qXkIh9h7z6yt4Jlx35qo2DycqGqYsb9gBRzVTBQ5qXlYvKOaE/fFEtgfuBGu
Kc5D3hcdbsVIC2AlXJ3y0JyHws0kSarwbehJnjPd0Z4HXj85npoJM4hTfTge
qDsPrvcqM2UTzIAlp3Qk+uY8SMcp35NhMANmc77+TMt5eMBM/SFHMYGDg987
uz3mofkPSwjTnBEwNr8qEU6fh21XLW9tRUOYuKyqPvt6Ht4r28h83zOAknry
XFr2PPQSLO/LtBuAaTXCyflmHloGahwD9Ayg7MOsJ135PIQmoIrSXvpgkS58
cbprHuq+e4rkjuqCPG/PQOqXebg3l59pVaALh1I97xv2zsOwfz5bnpcuVCZ2
pncPzEOKKF9MzVFdYIm1+1c3PQ+mjZeVJ2p0oNbvfUfKj3lAPegO//6rCfG/
DMz1t+bhTZyH+P4iTbjrtbfJtjMPYXHGu1smmjT+tE+H/52Ht+VXmgNqNcDW
fi3a49ACsNM7Jc4HXQdOo3M3dE8swG29ID3B89eAODRJYBFagHey9zCe39UA
px8W3CWyAE2WVzOi36uBvc5wGSqxAPRp/DqbwmrQdNWHS0phAYSA6drL/67C
ffmG8UOaC7CWPbDhcVYFWvqGi2q1F4BA/8ZdcEcZjjp/D7LTXYBEIdYglxZl
aM4/Jdp5cwGok0ETc7rKcOTYM/dgqwWouKhf/dv3CjTs2LD88loAyluhW5af
ATApQTP5vgtg9/RC4yUHANuzaWWGDxeA54KHzWlmAI7734zKgxeg+stFb8Eb
KNydUspzjl2AouG7BMPly8DSzI4sZS1ABn6e0Q17EazMxDGJuQtwlIUqzPBd
Cap+qSxeKVgAm7z/NB9lKYGlrF905vsFMBcXOX+MUQkqsheHTasX4JY33rR4
WBHMwmpd+rsXIG9qCe+YpQClJwevBNPeM9yPqj3VNlcAJhyFS6Z/AS5e1f62
wasAJZtCDXEjCxDecG3jUao8MNg9OaA+vwCpkfemjdLPwfvr1llNWwtgNW9J
9O2UA3lJQRR2FuDEzjbJ6LkcNLHPTTbvLsDDo/xLneZy0DdofqyVbhFUGW8c
vL4tCz/NTeLbmRdhtJNPvvOcLKDuuo8+CSyCwsjtW30RUtBlyMF7XXARtvdL
eIjKSIGu4teaz8KLUEGOZ3EbkwTrPc0fX8QWYfGANHFQShIiI6459p5dhDVX
J8FXixLQl4YaD6gtwgvOcseTfmJgEvBnU//6ImSopiUmyYjBgmVj4qDmIqhc
/pY1ij8NP0UufhvSXYQ4PtW9VqPTwFOioDZqughey41TFGVRsG6XlJ9yWYTn
bhEPFi+LACmf1H/7wSJMZ7jYGvwTBs+oQtdpj0WItxVpdW8Thkhtsfczvovw
qkDIo1ZDGIpGhYXmQxZBdt8Iq/RdIdgk8WLwKYsgHEp3T7n8JCRlELrSXy4C
CCiORfqfhHM3KoMM0hfh77uurIcqJ+FBufZaS/YicDE6v+opPgEU3+Cvr4po
+TDdHxJmF4BlJnycXtsiSJojf5QP8kFYTbnqwc5FcLLqrxss4gVhh6C9pq5F
MCKIBUfo88KdnuNOkr2LUIXVHVDN5oHpBE3NA2OL0KFT8N9nzeMwfKLsEI6y
CDNp9Y/lBo6CZ39Aq8f3RVAT+9lpE3kUjoRq+En8WAT0+ePcKOQo6OEXiS+2
F8E53GYtpYgLeou4P7kzLAHvi+bR4OQj0Kn0KEKMZwmaT70av/jsMNiQ1NFZ
viUgY1Y1zhscBoaMo1vJAkvg+/5X+zb3YbhCV2LLILIEFIKF5ecsDOA+zqvO
SC/BwesyemX+HFBlcI0hSXUJogqbs4JkWSFKszac/9oSrIu2n+8ZZIHbKuIH
868vwYv+9dOKviyw7xwLW7XOEuSGmIFZBzPocH7jHjNeAszOGb4wh0NA7Lsl
we+8BBmnrt4qX9oPDZ+6ivJcl8Ap//dBz9T9EN9yQUbKfQlevpgyF9HeD/Kl
vPKozxKcl5E8rFbHBI+fziBWj5dA9bjnaZV0RuDVuaeXl7wEiWLCzwkx+4By
dXRQMnUJRkc8z97W2gctiPqtqrQl+GqByrxg3wf3pCTMPmYugWhRxBGjZHqo
YKXaEN8tQcyY7+fm93Sg1e3lK9m0BKZ1s7X5P/+gJ9rxvytblqBHClHUif+D
btQbBSDtS+AW+jEdxP+gLwuVQnQ+LUF4mEUNxXoPxUf/iXUbWALGH1dwbMu/
0SD18MxK/BKcITXqnxPcRgcs7G/LrizBhkraVcNvv1ARL02eItISXGlRzfUP
/IV+yT6cmPt9CYhxY17ds1so125GRMLvJZgO/SEoUbyJvv1Q7ezGvgz7kw+k
mPn8QH+3v5QgY5aBn+evlI/8D1R74hHB7sgy7RzfL31/YwPd2K9yx/L4MrDl
ap8dcNtAL1t9M9QRWgYh61TrWz7raB8n8ZLk+WW4H68Xj+ivoULi3dtvLtDi
q/9mvrhMRb2guEr40jIcZXi/8MqPivI6ecrwYZfBzlA9LrCAgtp00gkzayyD
+JOxHg0MGd324WEmmi9D2YJWRMDJFVQjfu/jXatlEItSciF0EdGMvNnQWetl
CClze+njRkSV+/P/jNgtwx2nWp+9DgIaJ3F2vfPBMiz40ZWdf4hHBac1xnLD
l8H55kB4MM8SGtN2qeRm1DL4//6XXtC9iG68kYw4ELsMYfZ868TARbTNnV3+
/rNl2MeNFa8gLqA2Bweenn21DBmEpzZbn+bRt+dMrrWWLgN1Sf2ZqvssiuHR
EPCoWIb2H9H2DVszqN/fi5si1cuw9fv84u6jGVTjM39uVMMyTJQp/22Jn0ZJ
FnN/b3xcBjnO1O7yj5OodIxd9czkMiTFdPmcCR1DU1yNnzybWYZFO4f4AMEx
9J/hdRvl+WW4+D11AG0dRftOnOEswC/D5fCajt+Mo+iDKqqz8/oyzD4KTP+a
PoxOpM2qnvi5DI/0JU9g1IZR5eA+vv6tZbAfeH8y7fsQyqlZ/ll+bxks7iY4
e10fQivnvE7t7cfDGGZNpPfQIMr/8d7eh0N4OJMSKTjSOICGvzcatGTFQxuP
EY7xwQB6y1vpcfthPPwyZ3dpm+pHf7H8mYrhx0NuJ/6QbmsfelExLInnLB6O
CZscaPfuRUesec5nyOPh9Dn96xtMvahHfPHoSUU82IC/SV1KD1q0PMYrdhkP
3oXq/DuN3ahAklT2eTU8fFlgkyzi+4LuWx/5YGCKh1q5FLlH/3Whr/mdboze
xoOrY3tHW/tH9JI6/bqpJR76s2uk9O9/RD0zz8hb2+BhvyysKTV1onjt4Ho3
Fzx80vpXV+negXYXinc9CcFDQv3LDy2cbaj9SJP94XA81BUYMmZ1t6KM+wyZ
kyPxoOu/2RgZ3oqiJoHa6XF4YNFL/31nrwUtPTA4WJiCBx9/3EwTqRlNsnk0
11WIB8HTxWeEJRpR2WeHQzQ/4AFbokLF1TWgvQ0Fwt9KaHwIsbnTaTag+4/0
3xupxMML0Te6tu71qG/rKcpSEx4y/WKYOYZq0dsC33boB/EghZ10EpqpQtl5
3KsahvHgFjPMdSWwCm09cvSB1xgeFsurjlFOVKGih8yIxGk8sDnemRiyq0TX
fuBHvhHxsEPs6oBDFWgONTohmoSH7u8M10SqylHDFUkdFSoe7gp2HrW3Lkdr
Z9w7q3/gYbPg7tKvljI05PPfioy/eJD4duJJwZNSVL4j29WIngA4dwnXDZVS
lNCkeuYwIwE28+dEV7ZKUK3KmJywQwRwtCKWY6aK0aOZ3M/vcxFgQ5P+8lhr
EfrWU9pFSYIAaYLvPyf/eIuauvaL/5AkAPO/Re/mkLcom6PncpEMAbhvNmZ1
H3mLulvW3z6pQIBRg8XLzpfeoJc01DQPYAnw1njX+2BWPkpVXdnfqkyAfxIR
v32QfDQL4tr8rxLgcg23/bOpPJRRYUCJqkGA9Kx6ataJPPTrCQux4Zu0/VWc
n8TU5qDBvPRL8cYEcLaJnI+2zkHPHc3LVDej1ecvufSXLQdNZV7lbrSi1ZNd
InLWIRu13vRiyr1PgKxRp1P8slno5pcnC26Paf+XldZ02XqFTrEM2++FEiD5
zVfMo0ev0DYt/rXICAI8ZnHnf8z4Cn32tXD3dSwBuhx0J/V401CJgS6u3mQC
WPkNf4HbqSjmCMcr41QCNFuWxZ1ff4H+MrgluJRGALobxdsrkS/QjuElqd1M
Atzy40Cd61NQi3H6a+KFBGA3+D4ofi4ZVeW93ltZRAB8XPqWznASesbsmQG2
hAAvNRLP/vFNQrenBKyMKglw9EEUdrojEU2Yu+QX3kQAPvmjHUwuCehHgtf7
+QECnJ1cOy5A/wwtEsPJOQ8TwPcUr6ep+1M00YGxdnuUAJNXbFumluJRK1JC
B8c0Ach8n+oIfU/Q39SSaYRAgAC5zwWHO2LROZlfdz+vEED4bYSzplos2uWG
rhqSCcCjq5aT9SUGTdro2bq/TgB346IPD8ejUZmtFY60XQI02T6RO8QRhXIr
yqWc+ksAh0/s2QrZkeiejy9/GR0RDPaf8LqsEIl+2dkv/omJCIqcgYaN1hGo
zR9h5S0OIu3+0F5YNRCGpjJaeOqLEMF39i1bOF0I+vfuMYV+USL87v3d9b74
MWrT3rd5Q5wIevrUqLMWj1HZEBUfbWkivBGeCtNsDUY//RPzV79AhHkWphhB
6SBU2nLhYtdFIji4X/6tkhmIJjW92r2KEOHnfNWrfs5A1CqAPUBFmQiNXg0z
zPQB6K/fP4JQLSKcoWNNnN32R2+bfsDidIhwbybIQf+RP9pWd4/+sh4RntRp
4PH0/mi873iI0i0ikJgMebWP+KGiW03h8lZEoAt8dOW0jg96az06VsKTCEmf
pEYx/3mijboqWu+8icC9zCdU0+SBCpXusYr5EeFI/lgjvbUHSnVxjT8VSIQL
3Tv3rD+4o+Fkw+cno4ggJSfyPefWA3RVk10/M4YI31HF8beMD1Dd912cAk+I
8Dkkc5ev0g3ld7yYxJdABPNGPuqFY25oJeHEC+50IqwuvG3UmHRGea+NGyW/
JgLmzP6CP1rOaHBBwnGubCLs/XhdLtvqhGrZMqUdLiCCYHmXxU7pfXRpYTWd
tZQI2NZ9DCNFDuiRmaqcfR1ECG+SD9Rnu4fGswYE1HwkAr2FcVDUS1uU+ZKq
sdNnInjc+2B5QMwW3Zc6wDbylQjnsW/6nmjaoBt6a77vxomw807w5eB7a9Ql
uNrAYopWH2c9hqpuja4WB0gfmSVCG1Pg0V3CHXSehXXp0RIRXlXcOtRw5g7a
1yl2Q3eNCPaci7KE55ao1s81caYNIjywctlUWLFAPwnVMNb/JALzMoG9V8UC
bQ66Wi/8mwisMVf5+/aZo8VK1qd+Ma7A7ZA0gmSBKRr34dVuBu8KVE27GY16
3UIPTlmP6P+3AhkFI7zpuzfRMGaJsgMnV8BLs8lhNPQm+tCu9t6DUyvwtmIj
OeyVIeooONyvKrsCUUFGJ63x+ij+RnrRztkVeLMzq5MeqI9aB96NLFZYgS4D
WceF4/qoyeT65eOXVgDBcRwoNdBD1ZPZ35KuroBEPM6zrPUG2tE+HJKlvgIb
jfLX6w/fQLEb6eY3NVfA4NqH/VdtdVDFG2eONOuuwDrmrsG+Y9q080M9MMFs
Bey7yb0tORooU8BjQ6UHK/AryeMOTlsNrVwn7zR7rIBa3Fw0+9hV1Oaecaaa
9wpMHr/n/d7mKtpxQ2bV4CEtnpPai5owVTRMaDrIJXwF2o3Xk2JnlFH5F+qn
NiNXICU7yYTXXxldYqn88jBmBcpvtj+tOaaMqm7GHI1+ugKk9ve/nxtfQRk/
XXif+3IFgt91PqWbB7Tycp6uRPoKpObE9A0qAGpTxrFV+ppWP0vfuWPxKNqR
hsc25a7AzURz7sfqCBrqnDQy9mEFlk7M93gsXkT3HflOz962AnTcXzrS886j
5ZFmb5I6VuC05C7Dith51HrvoxZf1wq84G/3dS1RQNuWM16I9ayAwh3fA8c6
5NGQWk0plZEVUHFd5y05dA49K1Uz8HlsBWbKZg1Ls86iC9lCvrqTKyA8YuSW
o3QWVY7daTOfWwGnyn/WAu5yKL3FG2Pf1RVYCTx3gXdLBi0d4Pz7l7wCPu5U
ES1VGdTqWmBu+BqNP5GIi+XJ0miL7E1qws8VONcvaeuqIoUGMzCEffi7ApgH
mOK2TxIo3TuLkgXOVbh4UzrQxV4U/Ugedck8ugqR5kPPmWZOoXGyetK3j69C
LEdH7ZTRKfRYrcqH4f9WgeH4IbEkAxFUukvs/SexVTALGPYfchZCfzLnOIaf
WYVnay4N9HuCaL0On4SyNG29iu6SeJwgenWE7V3DuVWYqe065VB5Er29vFFQ
jK5CQIDB8zxlAdp93+ne/Sur8OvJvS1C2H8o0Wn5lJjqKjgHGi04dPOjHj9H
87Kvr4KYpQ5pyIYPjWHA5SQZroJLkUct4dNxVPfaeWs9o1Vwk9fwcpA8jnLH
lgiym67Cvg+CzmcTjqE5nDlZkZarMJD8oeq3AzdaJxj52t9xFbxLln76KnOh
gbZ0ForOtPzt6uNUW4+gqu/8/vvpugpWSXGnLlw5gvbJOqU7e60C9kaEoZg2
J0qb/GlWwbT8BX8YfgnHoMWhX0z+C12FXXo9lJEXg3p2qfBMhK8CnadntYQt
B/pP53yqQewqdLw89Cl2kA3ltuBLUUtZhZ6j3kdOLDGjU9lJNxlersJCk41n
rSwzmrPMdrTl1SpgKnZyjaIPoVLOdElK2augEcg08fLSQVT10fJzyaJVWA/8
cvvUEBPK3GKht1K8CjvLETuzqkxoH8MYpqBsFc58C051rGZEzWK/PD1RswqO
G3NxpnkMqHtayRPOtlWgqn2UFn1Pj9bspUW2ddDwAek2KSV6dM8i4rF71yrg
C2QsJLvo0Ehhc6+BnlXg8Un1LRv5h6QXMZsnjK5C+2nqpdT3e8g8+9Yt5YlV
OMxB6oxd3UVEH8zrbkytwvI/0r0AuV2kVKFWVX9hFSwnlM4NftpBOptsJTkp
q6DC5lNTJPcLYRbUE21bWwWLiUwBpoQtRDf08kn3jVU41Xyr9sy+LWTi2hGu
gV+r8CrU4y/v8E+E2tey+3wfCZ5TJeIW6jeQc+eKNq8wkUD3jCfX5MUNxDf5
xdr6ARIc9dY0KKxbRxhMXRb12EjAVjE3E9D7HTm+yNd9+DgJdBw6xW6LUBHz
qwc6W3lJQF5JcJhSpSA5bzaaHvxHAsK3m8hiAhmRdPpc3i9EAvNHiRcyf64i
Vza9055LkeBdrpwljyARiTCyTroiSwL8dnX6D38C0lOnHb9+lgTWcYScN+N4
5FagSIjeBRJcuhl08EP6MuJ4YMDhsAoJhoIDlj/oLSIlDri7rVdJcMVM7u6l
7gXkZ/db8wfqJHBSkHwWpLOABD0L0uvXJoHwn4seB1XmkY4NR83HuiTw1mjz
vD0whzDfvHVVzoAExetudTU35pAkHiml58YkKNS27+nunUHGHx4/d8WMBPQu
tjzlv6cRgRkGqXVzWvx2hlCy2DTyNmfipN5dEsDU9PPS/EkEdybq4GEXEkj9
DTbKzBtDzg8d601wIwFXcatN/7dRpPTRm+dcHiTIWnid16kwioifUryV4kWC
nUUn29tVI0hO70fe474kCGVVcrfmH0H4vW/NvvQngUgg+TWf3zCSLIDP5Qsg
ATfuc3/JgWGEvcvLPiOIBHH6b1lVrgwhUa5MUidCSOCcEzP2o2MQoT+evJ4V
RgKfGYEMlbODiH+LSLVQJAlsxK/f7e4cQJwPq4JoHAnSsh69ftfdj+hXhOhJ
pZCA8cy07WDTN6TbjJO7JJUEdBXS4ukzXxFVxpwJ2VcksN/8cest8hVpKpLL
LM8gwSuB2EpNv15E8WbrXfksEtwScD5IVexBSv/oilXnkKBmO8zm7tNuRKJg
jqyYT4L+vbxbB39/Qfh//fO6VEgCjal/SbJxn5GUzKcXcUUkwFYOShmkfUI4
1E/8Q0tIIL/JLNVJ7EKivhe3t5SRgIHhbqdxYRey7yUapVxJgsjDYjynxj8i
hIsBadebSDA+3v17LL4DsVpktexuIUE5y9+R0z7tyERsurB2O81fsYNrwwbt
iIG8JPFrJwlk8qf2X4lrQ3qmGop0P5Hg7HKCGZ7ciqiFaz4Y+EKCm0H9Hurt
rUiz1KSCYS8J4l0QrwfHW5ELI46/h7+RwHiibov1eQtSHvi7yWiABHlkOrdt
oRbkzOmY0PEhElzQ/k6XENCM5H3jUTcbJYHSUHxF+0YTIuD7jnV6nMZvh7pD
6SwOeXFSqd9iigSxdDPuNt2NCObzp+S5GRJsNmvTS3E1IjEPjE2t50lwqGSi
NCOoHmHgJQosLZJAmvFh+GPWBuRRm8+iLZ4EMasK3+9o1iGbjgfeEogk4Cwd
+auTW4e4HHnh5ECi8cOm7hcnXosQG0TlSBQSFPhT7t8arUHu2FRvOn0nwT80
FD9kU4NMsKrVUzdIUBVolXkushoxrBoOdNuk6bGw/oPzXBXSa26rsvGLBMnq
Jir8K5WI2v7NA56/SUC6EL/EmVSJtBSH9WzukSD/J8/+4/oViJIR13OffyQY
M3Rrsc2oQMr/5d7coSeDidqfF2xK5Yjk23O8DxnJYPTgIzP2ezmSr9s+s7ef
DMmBz74YVpUhAjv6uYGHyCB1OchRzbwMSc1esKNjJcPlAy4nsOOlyGENd8kQ
djLtvnctYkesFMlq5WC5eJgMEdx43QvKxYis0oeV9SNkaLGykArhLEaaSzU+
veMmA1fvnF6WxQdER4xYcIeHDEdqMkx8a94j05nh4Tz8ZHDNrasj5hUhTseE
bfoFyFCcEoYTWC5EduNblKMFyRB10e3L1rs3SMx+C8ErImQIqjddIvW+Q3gC
d/9ti5Ihei7BoK2+AHm7mTpTKk6GA0oTWmS3t8gF5/M4e0kyfFFlmjC9/Qbp
Whp8dVKGDFccV8Zam/ORW7cf+I/JkYHs0hnekpmP4AfZTZ7Jk8FnaOD1s6hs
xEuzSFFdkQxmVzjtpmZyEcb269x0F8kg2m38sLUgF0m8SPhZc5nGr+nRQHPZ
HESoPGzQFcjg+fQA9fKlHKRMXKj8tDIZ3Na96SdXsxFsdvOzWVUyNBODvL08
MpFvx81dX1wjwzZ3r/VBvmzE4tlv7RsaZKAO/W23MnqNUA+kSh7QJsOsxkW9
5BevkYAgBZbmG2Sgs1Tn4+h6hbD+Gljx1icDMtx7oedZOpLu4vZJ+iYZNMMD
B14+S0bO4Nne4I3IcJQbTwzAJiP15u/DX5uS4aeXwPno5HTk+rC6zS1zMgT6
PxSWvZ6OjGnhldmtyGDxtdr5k8MLxK4jVPCjNRleJVA55VwTka1LgnSBtjS/
fCZZ1Zx+gYRXNM0o2JNB5FDm2JpvCsJ15jaO4kiGj1kVy99NnyN5OTuv8p3J
8ObbSDQnJCLneF/4m7uRgcHLWnWWMwVpey5vctSDDMEGlra1LxIQ/UMDir1e
ZNAamCWu7n+GzAe7cof7kiG95HjnTZ0ExG2bdfPyQzL8UU6lE6lLQP65Fg7+
DCCD3Sf6ov2d4Ug84Vp5UTCNHxVmR0XPKOQ/y+VnNqFkmAk3IN+we4YUjYS4
8keQoeN6f3ff+Vjkks5JnaEoMmSmqyeyOMYhXzpxknGxZPDIYER+Lj9FTBEz
FtV4mt82lAIkP8ciK5XbK7vPyFDu2YE6mYcjvpIpnyoSyaATOrjqcywKOZh3
7s39FDIoEU+zB00/Q17w9YcLvySDkMvltCd9cYhooovN5CsyqB4R+NmpHIVU
MbOqJL4mg6kU8zv++XhENeSdoGY2GXrxZrqXjEORwR01OoY8MkxNFWceaotB
rB8szdQXkCGt/5XlwYEYZJ34GOf+jgyC/rWbdA9DkWCrE+kSRWSoNzzhP/Il
GMGMNfovFJPhif7d2kD6ECTzhqlJWhnNX4RPT99teyHSXb8U9SvJcHfxssIy
zhFpQpO5mWvIwCZtrdwZEYJoV5/dbK2j6ccmiamQDEGmpPoG/RrJ4MjgoHxq
2xvJJB0OYGgmg2XlOYeTU48R63cGok9ayXDq6cG1qWJPRNQu+Rt3BxnGAxK4
/wg/RlZERn2zPtL0+f9P0cJxIYnPNL5ajykFMdkjblmm3RXdtHmwLeQjPe2J
nLNI90S+kuESuxLTIDEM2eKb+a+rj9avklxX2hgCkPrxE126g2RgLGzPkaGz
RQJe3HGbGCaDwNHQZFWCH4K9mctjM0aGg/L1rHWbfgjjkeU2ygQZNtrNTY7x
hSJdfaJOPtNksC9IO1vP6Y/ExNsfpZ8jwwU/XVWxYh9ER6uwKWaBDN9TTPqW
cj2Qw8xkO65lMrjkaNhnfPJBhrqkDr8mkGGP5RD74rAPkhruWn96lQzKLOnm
Yx0GODOVsrtlZDIc3jwTEeVtiwjQ/2C9tEbbDx/7JiTEC1lokq/uWKfpuS/z
HAPeA8l/5G2p85MMd6gRWDv+UMT+Yu3BsS0yhBgPHF/Ss0Ykt3fK7uzQ/H6c
zAuH/JC1qktmpF0yoPfbvydwGiLlHgGMXn/JEFvl9yzLzR3xlmv+8JeOAiwn
Ps5KhBshSmt0RlEMFCA5wuz+GxHIXpEyHed+CnQ9TRNMFA7BtTiGvXt1kAJs
2+oKTCu6uFCxj/qnWCjQ53hoJfK/+4ga/sBeMRsFHHDd+0so3sihvOv5FzAU
2J2sjzRwf4z03InVaeOkwJlZhlRx8Wjk2YneX5pHKfBEh+XYEYVHiME0e/bw
MQpMXL5X1nD1HsL9SlfDkpcCZZ5OD6sPGSMTxgk/iPwUuHXsL8k3KATJ4B5K
dz9BgXQRl7zsMhvEauio2p4gBbAyKhmln/0RkQSjtXARCswx+L5o+WSII9x4
mcpxmgINs8onssweIIVsk1deilNAgJJnuTPribh085OEJCmg751fbXXND5GL
tkgqkqbAUqi88eibUOSnWhZyXo4CY1sWBpnW7kgt4wK++RwFjvdj+gK1Q5GH
bcLPrp+nQIR/jtxmZTCCBtsqDV6gwMF6/Pgb1TBkH/pm4fYlCjzdHbafd/ZA
OneJsXiEAvV+13L6p1xxUXUSCm5YCqwr2iXMcfggWj5OMzvKFPA7ei/2pFII
wqFQHBl6lQIj2tx/mUIu4wY21mTZ1Cnw3+CrSOpzSSSlVG4iRYMCmKM6m3Z+
XoiJi0foSW0KeJu4Xpko00L4JaskC29Q4N+l7qdfJx8icytbw+f0aXprVLsV
KfohuW8uBOEMKdA9PlgiUOqC3LP1F7tmRAFbq5uxohneiIRwY3+fCQUeXzNb
fqcdjqPM/fE3vU0ByusLLJ6c5rjS1yCyZEEBxhl/qQ9CzsgP/x8H7tyhQIgB
OuNUGYKcN3pDmr5LgYFUgTyVNBPE95zZN9N7FJAaC838JOaJNHBwVIzaU4BT
5VTww0g35C+pLcXwPgXU6Vmqyuz0cdhP3v79zhTAr7lN5xXeR0LzJCx03CiQ
c2Nvso/XB/kYPHOl253mr3XJv4TSCOSgecIpdS8KXLhdXbe2Z4LTVFI71OlD
gfgJTkKFfgQSf/Q3+Yo/BQzi6dJkuqyQvvUPfU2PKMDHZhuTVeyOHPl6p/JS
EAUu7UrqXz3qhLtVeDS19jEFzkU90Fpn1MGlRnx+qBBGy6eavqRM3xGZtA6w
LI+ggM/78b5c+Sc4AZBTkYmmgEmIQY4lMQax4lsWLYqlwN/eLu6nL+2R3F+p
zOLxFLDPvnvIVcANhx/UouY/o4D5ZkUqtjUSESulGxBKpIBi2EvxKrwX7n5c
ZVVmMgXWenxMdaJRXLG9/Uv+VAoMLzH6tH2MQb6r8ge8TKPAHaH7auwnafNR
sM+KO4MCn0UcrfNZfRDvP6GqiZm0fggh/WfU44KrHVcUw+RQ4FvWtcLTV8Jw
u1Uklid5FBicm/Fetb2DQxMy1w69oQB9a3Grzo1wJNjFYDDiHY2Pl6dmvVR9
kXaNAzUMRRSQ4FWya9Tzxe0/3ZAWXEzjhzc8YVvOEnedwTXwTyktH2Gn32ru
13Bxs0LW/hUU+E3Q+PHa4T7ytWHk6q8qCmRk/Zfe+yEYdzg1RtyzlvZ740Nf
12xbnKEnyrZeT4Hv2/RxP64EIym6G9+dcRT4QG7LQYr8cOOSBUOrzRS494Kr
eF+nLcJ/yLTWro0Cs+nZjLc/OSCWy2zpSx0UgEdG5LmeICSntTXoThcFUlq/
LhOtniBLGV53Zz5TYLqTsaZp3Qw57S9+zayHAnkHt10X6IxxjremJca+0uLz
W9ExsqsjRWefs9/sp/nXq75Zkk8dWWO/utE/SAE1pgXWnyc8kLOk7WGdEQok
HfsuGPU+FPHqKqrrHqPNR8GfWz4Xw5HaXKsM9UkKOHXrzx/T9UV+B3E97pym
wJu0jt+D2mE45PYnG+U5Cry2zPNcM/bEBV94pN68QAHkll1J8r9oXBuXrOTl
Zdr8ks8R+G2si2NaX+SoI1DAN26TPzw4HFHvffFDYZUCqa5tCtboE1zMO83R
cjIFrNWrDot1JCC94f/qZdZo/rsWbsGVbojDWFe8Llqn1VvIVxt9Jhynj9qF
iP+k8ZNo8lBAMRyXzMt3r2CLAkNyZWd8KX7I2NbX68I7FBD9WT7Onu2G4x0M
kcrapUBHcKBrp7g5zrzk/OH//lIgxkL44dUKLFJtus3eR0eFU5TGt07n7uPY
99ezhjJQoTmDRbBYwgSxK3vIfH4/FZIzXC9y9esiLbeRgysHqWC4GOWrIBWJ
HD/4jymdhQoHrz1WLJD0Rh5UtDDcYKeCnG2E1PE1K9wXixD6fYep0FrdzqZx
3AMnxKz6r/IIFbJ0SjWyPX1x/lVMf+y4qaCHX9jRGTVHBq26fvPyUKHzlpFQ
zNJzRJI1eruXjwqCW5OBuw5euLAaja1gASqYHWi6u3nXEzdlzfrznCAVWJNi
d1xCvXAK7F/X8cJUWNH1bj67PxwXX/d07aUoFfjN0eEKj0Qc3kaPoiVOhab3
V5iZvgTjUMwR0r8zVJjxO4TJ6vHGvWgYIpZLU0FcIvHZk5/Pke/3UvC2clRg
NHzoG9TnhahzGi8dl6dCRCDPxh2HCCQLx7PQfZ4KaSd340K0HJEd+8nZQCVa
vHrK7O3qKJw+V8a03GUqVHtw9K2oJOIKmy0ml1AqzF8zZLDlfYzbd//k+Isr
VFD7wUadPheHmHEvjGio0vjsuz9eK/0YqWzNHfqjRoVR17KSl4uROFZn24HS
61QoOTL0KeJNAs7m+Om+u1pUcEpTJN3ue4rg2om93Ddo+tisSOpOaOC4XQu7
P+tRQWv1bOmEQCbiwuv0+ZEhFZ4xLFxQ9cvEfeyU6pIxogKbd0dq30o0cuLB
WseCCRWuXdBQfReajvjyl7Ul36aCf+807x2J+7i+LvcWdUsqNLalfZ6774kT
85Bv2r1Dq/+DAUuX3FncY4GthmIbKth/a/iUePksMvG5pu6OHRVMRnKEfu65
4s56+dVwOVIBAa5XRa3hSMzJS1VdTlTYELihy26fjlvs3iv3d6XCsXEDI7Xi
YNxln6ZSKXcq+C7uIgIsyUiSUHDxnCdNj4ynLovur3CU3itFiT5UuOslPNme
54+o+TEUqvlTYdhaIsyWNo9ei3S+2XlEhc+Cs07P3VJxv75F5BcFUWH9gNAc
cSYd0X2onmsZQoWE5yEeTzke4d6KMmdzhtP0yPP+KdISgtAPdL/ujKTCWvDk
7bt6ETjTgCfpvjFUKBinfr0kF44rF7uRduYJFUiPxWQP/XuOsAxhUmeeUkH+
y/MoxqbniE3QQPLzBCr0PVcNG2J5gjRKJCWqJlMhJVDCrJs5GOEaufn81wsa
bjS5OWiai3N+fOxpYRoVuLOD3r2vDsZ9lByPM8+gwsLAccpMzSNEYCwtBpNF
hddDUXqXmHNx3qG3o9pzqMCTYx5Ld9kD+SYtEOGdT+PfwXfrJCkdJzYxGyr+
lgru0ldbPCiJSHB49uOpQiq0eFaEMJ7Mw7H5HNC484EK8U8unrpe/AyXZu/M
iS+hgvdjKZ8EukycqOnghGM5jX/Tm+W3Y1JwFZpKuWuVVDgS9+6q18ZLHBbJ
vO9ZQ4Uw8T9ULYsMpEeaSX6njta/ms1lwyuRiMnJ+3sBjTS/Hf7HOvo4GYc/
3N+xr5kKxhW1UwUQjbgzKD6JbKXCZlrB+KvTsci//zVc7vFQZ28cJ/VLarSb
Syr3ELO1aYRKp0cJkW4yUSr3SG6bS1dtdBs1NXKZcR3E2F0hyZLL6eJWKpVQ
doq2aSst5uGnUoj9/vn8dT7P5/V5f845n7K4sxqZPPdw2kavZRP++ym6l5sZ
P+f3C67vTyBaXUHvNVrk8CQ2BnbZZVFJy+PSjIcMb2Idsy9+mZRTu/yQ3mM5
sEe6Cw0iD5BbxRlQ8JTRH/85uVwxim4UKyibtcvB3bP3DltNTLsE+56WdDJ9
l9BqUI751D/uURqnSw7H1bjNUxZGkaGDHJ8qKePfCc/4m/xT9IR/mtnqboan
uMQ5MkkaVdkxMXTntRwMA98dKzvE/Bcd/WvsZXLgTmazGrdEEaOVD+If/COH
H4WSN0qey0kZ23zjlg9yeO7ROXNt83lKtIVqHR+Z/MikomHNPPqANf7So18O
67qHLPbU7iU7Jn0KuuUMf6LOlMm3+fTt4L0Q3yE5+Hj4/rZY8QqNkC2x/DAs
h+7oq1tfHOfR8fbk7we+MHo5paGtgUkkoelb0+BXpt9zaqRn3HOpZpXXpegx
Zj6SvVfjvoDm/960Y/S7HDaXSG3ttxcR84yf9H5VQLgl2gkqI9m07sLlD0pK
CBohu5X9q/nUKXbkGm8awj1Tee09l2TyPGzPYZYywiGZrN/sXx719W6wTVJB
sLnFEqupJhPcZjZjLgvBpGVBwtnMX8lxO0Fb5myElkbv3bpB6WSG5ed0/TkI
+sN+RMRj3g8mnr4SdQTPvjyvgxwRNdS6y2bPRdALWDa2YCCSXpuxaLh0HsLR
FjvBstyjZPUYv9ZCG6HAwS8qzCOf3u///6mbugiV38PnONelEW6PhwsxQGi4
ZKwuCz1FZE9uqdcvRPDbw+9UT8gi4XeNuh1MEIIH04vEUwvoePl5yUNThNns
8SjXQRHlFQyGbv0J4WH9Cn7paBnREO6w6lyCMK7yg2LY0uv0yrm6iZ3mzGyh
ojg7PIj8fMTwXg8HYTs3vaHbSUBqg3kCP0uEnb3dig1jErpht9y91xphpXbi
1pnqcaRjk5t+6CqErTuWvnDttSQ+UNM7tBphA6vYtm77OSI3178eA4xfROdV
pGkiPWp49sjYWoRM517X1lmFdLp6/9qT6xH2Zfq+TD56jqZMc1WZ5oiQJ7w7
qFp/keqPVD1LcEK4drtydPuBSFLSq5Op6oJQoSGNd1uQSXjZZ7x7NjPnJ4x4
bfnfServOmBcug3BLk0pqGE4hdhO5/bFuiGwpdYFJvMTqXZdXdkmd4SMFMjm
BUro1wijGJ1dCPF6GY8DC5JouzHfZmA3k4e2CXvNPiEtlQ4rUC+EGvcHQ83i
GHJe4NnM90Uo3bxZcqf+Itm3vuHC7gAEVnCT1e3Ma2TdN/a2xUEIbRYGUqVv
YqJbmqQ5Hoxw4X2t38cXceSb7+jLh6GM/puq7bUxqaRjrm9eZgRC0Lwctcfq
FaTsUcu+A5EIjjKW1qy12yg/btlimxgEF57ysylmhSTIKn1I5QgCTQ2PvS3g
kfV9ClXSYwjNaidW/dMeT/Ryg44XnUDwUXNM7mqW0FG3p2uPxiF8bBNbeNWd
pM9nrJjufJrZvyX3tDr7D1p+K+fRvHMIHFlG1ipROrkUOT3pYwLC5TXEUTNH
QoJNw92r+QiXyhWMnZenEPvu59oJAgSrjFmsvQ4lRD9pjcwjidn32JYPZqqV
dNyh8DfTVIQwAy3v1thi0jXGCv0qYvJzrKy+nJtBKsqiOfczEBaN7Nr/REdM
EwO6R0TZCOBjujNYKiIH5tvTwFyGH9f7GlrK6cThSXG8dT7CifB3A2HRAmJ4
Wn3D9EKE4i9Cn9WpV+jEiuOsF78zPHOX5tqvo+SvgbfPCq8iJBseC/db4Eor
rmxMiyll9JzsiM6RS0ii+409DtcRXq35YV6l81USMmvBQs0KhGiyyfprVSLZ
cDe+910lgk5emoa/WzQxivm35M9qBNtgS/UsaTKdZLtGnqlDCLexmyJcl06l
r6tXcG8juJW5pwpL6khlisGEUT3Cqdh+xUKTHJLklNDwqRFhquj8G65vLgmb
GOQ13kMQdiZeqlp6iDrf8Nic8gDBSWow5O+eQYyD7qj5tzL9dfGK42B8NlXQ
Mf3L4inCsF5xreeiMvKqTSBWakeozkudWK57ld48O+LX3okwx74p9Gl1CUmx
8TLL70K42TCxp/lTNI0YbJYffImwnlMpfrKpkmyU/FyxrofJa5/VoNCWMvej
8MicNwzvLvw3JnZFdMrsiTWytwjexkt0JVFVpKchYGr5e4TGmuAl5QH7ac3h
1pa4jwgLteBrUVAZES6xFGzrR+hpd/rW1i+iv8iy3AwQ4ctbn4DToyXURTR1
/tAQwo/WlkUc7g1q6hLy+s4nhGmtWdWHta+SqYodBYkjTH8N/D2q659N//7T
Jth7FEFtzMIopGMlqQvOX2r+HYH/qoNd41ZCRHozP09OIpgqbw+0jLhM/wNn
WLS7
         "]]}, Annotation[#, "Charting`Private`Tag$25975#1"]& ], 
      TagBox[{
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
/wHIB7Im
         "]]}, Annotation[#, "Charting`Private`Tag$25975#1"]& ]}, {{{}, {
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
             
             Offset[{1.900750481071642, -2.321022966001397}, {
              1.12, -3.96501374653578*^-12}], 
             Offset[{0, 0}, {1.1785820447502409`, -2.314922685018407}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.1785820447502409`, -2.314922685018407}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1785820447502409`, -2.314922685018407}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1785820447502409`, -2.314922685018407}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
             
             Offset[{1.900750481071642, -2.321022966001397}, {
              1.12, -3.96501374653578*^-12}], 
             Offset[{0, 0}, {1.1785820447502409`, -2.314922685018407}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.1785820447502409`, -2.314922685018407}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1785820447502409`, -2.314922685018407}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1785820447502409`, -2.314922685018407}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{21., 6.500000000000004}, {
              1.1785820447502409`, -2.314922685018407}], 
             
             Offset[{21., -6.499999999999996}, {
              1.1785820447502409`, -2.314922685018407}], 
             
             Offset[{10.000000000000002`, -6.499999999999997}, {
              1.1785820447502409`, -2.314922685018407}], 
             
             Offset[{9.999999999999998, 6.500000000000003}, {
              1.1785820447502409`, -2.314922685018407}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"0\"", BoxRotation -> 0.], StripOnInput -> False, 
            LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 1, 
            Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{15.5, 3.4416913763379853`*^-15}, {
            1.1785820447502409`, -2.314922685018407}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}], 
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
             
             Offset[{2.7786373880022666`, -1.1310058647044858`}, {
              1.12, -3.96501374653578*^-12}], 
             Offset[{0, 0}, {1.1785820447502409`, -0.7716407313969694}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.1785820447502409`, -0.7716407313969694}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1785820447502409`, -0.7716407313969694}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1785820447502409`, -0.7716407313969694}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
             
             Offset[{2.7786373880022666`, -1.1310058647044858`}, {
              1.12, -3.96501374653578*^-12}], 
             Offset[{0, 0}, {1.1785820447502409`, -0.7716407313969694}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.1785820447502409`, -0.7716407313969694}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1785820447502409`, -0.7716407313969694}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1785820447502409`, -0.7716407313969694}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{21., 6.500000000000004}, {
              1.1785820447502409`, -0.7716407313969694}], 
             
             Offset[{21., -6.499999999999996}, {
              1.1785820447502409`, -0.7716407313969694}], 
             
             Offset[{10.000000000000002`, -6.499999999999997}, {
              1.1785820447502409`, -0.7716407313969694}], 
             
             Offset[{9.999999999999998, 6.500000000000003}, {
              1.1785820447502409`, -0.7716407313969694}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"1\"", BoxRotation -> 0.], StripOnInput -> False, 
            LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 1, 
            Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{15.5, 3.4416913763379853`*^-15}, {
            1.1785820447502409`, -0.7716407313969694}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}], 
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
             
             Offset[{2.7786373880012523`, 1.1310058647069772`}, {
              1.12, -3.96501374653578*^-12}], 
             Offset[{0, 0}, {1.1785820447502409`, 0.7716407313910219}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.1785820447502409`, 
              0.7716407313910219}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1785820447502409`, 
              0.7716407313910219}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1785820447502409`, 
              0.7716407313910219}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
             
             Offset[{2.7786373880012523`, 1.1310058647069772`}, {
              1.12, -3.96501374653578*^-12}], 
             Offset[{0, 0}, {1.1785820447502409`, 0.7716407313910219}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.1785820447502409`, 
              0.7716407313910219}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1785820447502409`, 
              0.7716407313910219}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1785820447502409`, 
              0.7716407313910219}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{21., 6.500000000000004}, {1.1785820447502409`, 
              0.7716407313910219}], 
             
             Offset[{21., -6.499999999999996}, {1.1785820447502409`, 
              0.7716407313910219}], 
             
             Offset[{10.000000000000002`, -6.499999999999997}, {
              1.1785820447502409`, 0.7716407313910219}], 
             
             Offset[{9.999999999999998, 6.500000000000003}, {
              1.1785820447502409`, 0.7716407313910219}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"2\"", BoxRotation -> 0.], StripOnInput -> False, 
            LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 1, 
            Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{15.5, 3.4416913763379853`*^-15}, {1.1785820447502409`, 
            0.7716407313910219}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}], 
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., 1.7898561121996317`*^-21}], 
             
             Offset[{1.9007504810726168`, 2.3210229660005988`}, {1.12, 
              1.7898561121996317`*^-21}], 
             Offset[{0, 0}, {1.1785820447502409`, 2.3149226850124593`}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.1785820447502409`, 
              2.3149226850124593`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1785820447502409`, 
              2.3149226850124593`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1785820447502409`, 
              2.3149226850124593`}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., 1.7898561121996317`*^-21}], 
             
             Offset[{1.9007504810726168`, 2.3210229660005988`}, {1.12, 
              1.7898561121996317`*^-21}], 
             Offset[{0, 0}, {1.1785820447502409`, 2.3149226850124593`}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.1785820447502409`, 
              2.3149226850124593`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1785820447502409`, 
              2.3149226850124593`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1785820447502409`, 
              2.3149226850124593`}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{55., 6.500000000000012}, {1.1785820447502409`, 
              2.3149226850124593`}], 
             
             Offset[{55., -6.499999999999988}, {1.1785820447502409`, 
              2.3149226850124593`}], 
             
             Offset[{10., -6.499999999999998}, {1.1785820447502409`, 
              2.3149226850124593`}], 
             
             Offset[{10., 6.500000000000002}, {1.1785820447502409`, 
              2.3149226850124593`}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"NDSolve\"", BoxRotation -> 0.], StripOnInput -> 
            False, LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 
            1, Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{32.5, 7.216449660063518*^-15}, {1.1785820447502409`, 
            2.3149226850124593`}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}]}}, {}}}, AspectRatio -> NCache[
      Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    ImagePadding -> {{All, 98.29102237512035}, {All, All}}, 
    ImageSize -> {789.5, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {-10., 10.}}, 
    PlotRangeClipping -> False, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
    Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"1\"", "\"2\"", "\"NDSolve\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9104865511219406`*^9, 3.9104877827185555`*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"5c7bc6b9-2a88-419f-b49f-2550cf0b3f78"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"selCoef", ",", " ", "genVar", ",", " ", "soln"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genVar", " ", "=", " ", "0.007050979"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9104409339464197`*^9, 3.910440934322338*^9}, 
   3.9104414376885943`*^9, {3.910468296420635*^9, 3.910468297175737*^9}, {
   3.9104684126755915`*^9, 3.910468413916339*^9}, {3.910468450698928*^9, 
   3.910468480628004*^9}, 3.9104792331159897`*^9},
 CellLabel->
  "In[160]:=",ExpressionUUID->"3ba61e80-06ac-4338-a2d4-4b785ff46810"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SimplifiedHayward50", "[", "k", "]"}], "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "\[Rule]", "start"}], ",", 
           RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
           RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",",
            " ", 
           RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
           RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
           RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
           RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", " ", "2"}], "}"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.910468422400401*^9, 
   3.9104684303243494`*^9}, {3.910479437308853*^9, 3.910479440388759*^9}, {
   3.9104797735518637`*^9, 3.9104797828580613`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"f62d6ba6-297e-4908-8ddf-8069bb44a23e"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 163, 44, 28766774182623955770, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910479747431768*^9, 3.910479784682912*^9, 
  3.9104865512373476`*^9, 3.9104877828655233`*^9},
 CellLabel->
  "During evaluation of \
In[163]:=",ExpressionUUID->"e06672c0-e94f-40d1-9513-e5315281eb3e"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 163, 45, 28766774182623955770, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910479747431768*^9, 3.910479784682912*^9, 
  3.9104865512373476`*^9, 3.9104877829107423`*^9},
 CellLabel->
  "During evaluation of \
In[163]:=",ExpressionUUID->"adb472b9-e7a4-4581-9405-84d260c670f2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
6H+EiMKj
         "]]}, Annotation[#, "Charting`Private`Tag$26298#1"]& ], 
      TagBox[{
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
zOsIuA==
         "]]}, Annotation[#, "Charting`Private`Tag$26298#1"]& ], 
      TagBox[{
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
HzFUWKI=
         "]]}, Annotation[#, "Charting`Private`Tag$26298#1"]& ], 
      TagBox[{
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
/wHIB7Im
         "]]}, Annotation[#, "Charting`Private`Tag$26298#1"]& ]}, {{{}, {
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
             
             Offset[{2.7786373880026662`, -1.1310058647035042`}, {
              1.12, -3.96501374653578*^-12}], 
             Offset[{0, 0}, {1.178582044749838, -0.7716407313908835}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.178582044749838, -0.7716407313908835}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044749838, -0.7716407313908835}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044749838, -0.7716407313908835}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
             
             Offset[{2.7786373880026662`, -1.1310058647035042`}, {
              1.12, -3.96501374653578*^-12}], 
             Offset[{0, 0}, {1.178582044749838, -0.7716407313908835}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.178582044749838, -0.7716407313908835}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044749838, -0.7716407313908835}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044749838, -0.7716407313908835}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{21., 6.500000000000004}, {
              1.178582044749838, -0.7716407313908835}], 
             
             Offset[{21., -6.499999999999996}, {
              1.178582044749838, -0.7716407313908835}], 
             Offset[{10.000000000000002`, -6.499999999999997}, {
              1.178582044749838, -0.7716407313908835}], 
             
             Offset[{9.999999999999998, 6.500000000000003}, {
              1.178582044749838, -0.7716407313908835}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"0\"", BoxRotation -> 0.], StripOnInput -> False, 
            LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 1, 
            Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{15.5, 3.4416913763379853`*^-15}, {
            1.178582044749838, -0.7716407313908835}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}], 
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -2.203809966097794*^-11}], 
             
             Offset[{1.9007504810756934`, -2.321022965998079}, {
              1.12, -2.203809966097794*^-11}], 
             Offset[{0, 0}, {1.178582044749838, -2.314922685012321}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.178582044749838, -2.314922685012321}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044749838, -2.314922685012321}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044749838, -2.314922685012321}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -2.203809966097794*^-11}], 
             
             Offset[{1.9007504810756934`, -2.321022965998079}, {
              1.12, -2.203809966097794*^-11}], 
             Offset[{0, 0}, {1.178582044749838, -2.314922685012321}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.178582044749838, -2.314922685012321}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044749838, -2.314922685012321}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.178582044749838, -2.314922685012321}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{21., 6.500000000000004}, {
              1.178582044749838, -2.314922685012321}], 
             
             Offset[{21., -6.499999999999996}, {
              1.178582044749838, -2.314922685012321}], 
             
             Offset[{10.000000000000002`, -6.499999999999997}, {
              1.178582044749838, -2.314922685012321}], 
             
             Offset[{9.999999999999998, 6.500000000000003}, {
              1.178582044749838, -2.314922685012321}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"1\"", BoxRotation -> 0.], StripOnInput -> False, 
            LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 1, 
            Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{15.5, 3.4416913763379853`*^-15}, {
            1.178582044749838, -2.314922685012321}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}], 
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., 3.845141237919582*^-11}], 
             Offset[{1.9007504810807008`, 2.3210229659939783`}, {1.12, 
              3.845141237919582*^-11}], 
             Offset[{0, 0}, {1.178582044749838, 2.314922685018545}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.178582044749838, 
              2.314922685018545}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044749838, 
              2.314922685018545}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044749838, 
              2.314922685018545}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., 3.845141237919582*^-11}], 
             
             Offset[{1.9007504810807008`, 2.3210229659939783`}, {1.12, 
              3.845141237919582*^-11}], 
             Offset[{0, 0}, {1.178582044749838, 2.314922685018545}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.178582044749838, 
              2.314922685018545}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044749838, 
              2.314922685018545}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044749838, 
              2.314922685018545}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{21., 6.500000000000004}, {1.178582044749838, 
              2.314922685018545}], 
             
             Offset[{21., -6.499999999999996}, {1.178582044749838, 
              2.314922685018545}], 
             
             Offset[{10.000000000000002`, -6.499999999999997}, {
              1.178582044749838, 2.314922685018545}], 
             
             Offset[{9.999999999999998, 6.500000000000003}, {
              1.178582044749838, 2.314922685018545}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"2\"", BoxRotation -> 0.], StripOnInput -> False, 
            LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 1, 
            Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{15.5, 3.4416913763379853`*^-15}, {1.178582044749838, 
            2.314922685018545}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}], 
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., 1.7898561121996317`*^-21}], 
             
             Offset[{2.7786373879974513`, 1.1310058647163157`}, {1.12, 
              1.7898561121996317`*^-21}], 
             Offset[{0, 0}, {1.178582044749838, 0.7716407313971078}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.178582044749838, 
              0.7716407313971078}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044749838, 
              0.7716407313971078}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044749838, 
              0.7716407313971078}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., 1.7898561121996317`*^-21}], 
             
             Offset[{2.7786373879974513`, 1.1310058647163157`}, {1.12, 
              1.7898561121996317`*^-21}], 
             Offset[{0, 0}, {1.178582044749838, 0.7716407313971078}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.178582044749838, 
              0.7716407313971078}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044749838, 
              0.7716407313971078}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.178582044749838, 
              0.7716407313971078}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{55., 6.500000000000012}, {1.178582044749838, 
              0.7716407313971078}], 
             
             Offset[{55., -6.499999999999988}, {1.178582044749838, 
              0.7716407313971078}], 
             
             Offset[{10., -6.499999999999998}, {1.178582044749838, 
              0.7716407313971078}], 
             
             Offset[{10., 6.500000000000002}, {1.178582044749838, 
              0.7716407313971078}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"NDSolve\"", BoxRotation -> 0.], StripOnInput -> 
            False, LineOpacity -> 1, FrontFaceOpacity -> 1, BackFaceOpacity -> 
            1, Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{32.5, 7.216449660063518*^-15}, {1.178582044749838, 
            0.7716407313971078}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}]}}, {}}}, AspectRatio -> NCache[
      Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    ImagePadding -> {{All, 98.29102237491902}, {All, All}}, 
    ImageSize -> {783.5, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {-10., 10.}}, 
    PlotRangeClipping -> False, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
    Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"1\"", "\"2\"", "\"NDSolve\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910479797342494*^9, 3.910486567232815*^9, 
  3.9104877979672794`*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"5efb5ef6-4bd5-4f24-b2ba-7a62f8925341"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
             "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
     "**"}], "**"}], "*******)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.910480471917904*^9, 3.9104804808100014`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"7d8f477b-2d8d-455a-a8a5-844577aad488"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"selCoef", ",", " ", "genVar", ",", " ", "soln"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genVar", " ", "=", " ", "0.007050979"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9104409339464197`*^9, 3.910440934322338*^9}, 
   3.9104414376885943`*^9, {3.910468296420635*^9, 3.910468297175737*^9}, 
   3.910477223005858*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"65dff44f-f533-473b-aa43-963aa4e87680"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"y", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
               RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
            "x"}], ")"}]}], "]"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", 
           SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
           RowBox[{"\[CapitalLambda]", " ", "/", " ", 
            SuperscriptBox["W", "2"]}]}], ")"}], "1"], 
        RowBox[{"scen2", "[", "1", "]"}]}], "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"y", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
               RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
            "x"}], ")"}]}], "]"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", 
           SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
           RowBox[{"\[CapitalLambda]", " ", "/", " ", 
            SuperscriptBox["W", "2"]}]}], ")"}], "1"], 
        RowBox[{"old", "[", "1", "]"}]}], "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.007050979\>\"", ",", "\[IndentingNewLine]", 
       "\"\<OldVG=0.007050979\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.007050979\>\"", ",", "\[IndentingNewLine]", 
       "\"\<OldVG=0.007050979\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9104772279825993`*^9, 3.910477244141781*^9}, {
   3.9104773148134985`*^9, 3.910477344133008*^9}, 3.9104789959555387`*^9, {
   3.910487971393759*^9, 3.9104880204759665`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"86f542d1-a6d4-4e87-836d-84d8babd5223"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 179, 52, 28766774182623955770, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.910478318329549*^9, 3.9104794323839087`*^9, 3.9104865673616076`*^9, 
   3.9104877980781302`*^9, {3.9104879795931787`*^9, 3.9104880228021526`*^9}},
 CellLabel->
  "During evaluation of \
In[179]:=",ExpressionUUID->"2171f61a-5d95-43e7-bd8d-70d7bec70a65"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 179, 53, 28766774182623955770, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.910478318329549*^9, 3.9104794323839087`*^9, 3.9104865673616076`*^9, 
   3.9104877980781302`*^9, {3.9104879795931787`*^9, 3.9104880228485146`*^9}},
 CellLabel->
  "During evaluation of \
In[179]:=",ExpressionUUID->"396c35ad-a9ae-4873-8c7a-f8781014912a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
xrsrZC7iQf8fXiaDOg==
         "]]}, Annotation[#, "Charting`Private`Tag$28921#1"]& ], 
      TagBox[{
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAASmXo0cDpVT5CuVKHlbCpPwRDGnDf
GTQ/siwTphFKqj8zn5icsxlEP0lcTXnG5Ko/S83Xsp0ZVD8EP5Hv1B2sP1dk
972SGWQ/sTkJ+l6erj/dL4dDjRl0P6iM4ufz67E/oBVPhooZhD/8qXnp+JC3
P3vNl8RWuoQ/OJglhNDvtz9WheACI1uFP0BlbT0rT7g/DPVxf7uchj/JqVhm
Zg+5P3jUlHjsH4k/J3yhsNmVuj9Rk9pqTiaOPygCJAjgub0/gQizJ4kZlD+j
8IEnwCvCPypHkYiycJQ/4jxveAlnwj/ShW/p28eUP3TrYwyNosI/JAMsqy52
lT81btA/QBrDP8b9pC7U0pY/6pFVgUMMxD8M85Y1H4yZP7JbqNsg+sU/KV8/
9ZybnT8Dm64c+PPIP06JkbM=
         "]], 
        LineBox[CompressedData["
1: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

         "]]}, Annotation[#, "Charting`Private`Tag$28921#1"]& ]}, {{{}, {
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -8.248843680779277*^-18}], 
             
             Offset[{2.0395809480071936`, 2.2000248990695708`}, {
              1.12, -8.248843680779277*^-18}], 
             Offset[{0, 0}, {1.1678456746236197`, 0.016279079722492807`}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.1678456746236197`, 
              0.016279079722492807`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1678456746236197`, 
              0.016279079722492807`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1678456746236197`, 
              0.016279079722492807`}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -8.248843680779277*^-18}], 
             
             Offset[{2.0395809480071936`, 2.2000248990695708`}, {
              1.12, -8.248843680779277*^-18}], 
             Offset[{0, 0}, {1.1678456746236197`, 0.016279079722492807`}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {1.1678456746236197`, 
              0.016279079722492807`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1678456746236197`, 
              0.016279079722492807`}], 
             
             Offset[{10., 2.220446049250313*^-15}, {1.1678456746236197`, 
              0.016279079722492807`}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{117., 6.500000000000026}, {1.1678456746236197`, 
              0.016279079722492807`}], 
             
             Offset[{117., -6.499999999999974}, {1.1678456746236197`, 
              0.016279079722492807`}], 
             
             Offset[{10., -6.499999999999997}, {1.1678456746236197`, 
              0.016279079722492807`}], 
             
             Offset[{10., 6.500000000000003}, {1.1678456746236197`, 
              0.016279079722492807`}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"New:VG=0.007050979\"", BoxRotation -> 0.], 
            StripOnInput -> False, LineOpacity -> 1, FrontFaceOpacity -> 1, 
            BackFaceOpacity -> 1, Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{63.5, 1.4099832412739488`*^-14}, {1.1678456746236197`, 
            0.016279079722492807`}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}], 
        GraphicsGroupBox[{{
           GrayLevel[1], 
           AbsoluteThickness[4], 
           Opacity[
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           CapForm["Butt"], 
           JoinForm["Round"], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -1.8255073850074173`*^-11}], 
             
             Offset[{2.039171699791247, -2.2004042307654466`}, {
              1.12, -1.8255073850074173`*^-11}], 
             Offset[{0, 0}, {1.1678456746236197`, -0.01628515427134595}], 
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.1678456746236197`, -0.01628515427134595}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1678456746236197`, -0.01628515427134595}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1678456746236197`, -0.01628515427134595}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           BSplineCurveBox[{
             Offset[{3, 0}, {1., -1.8255073850074173`*^-11}], 
             
             Offset[{2.039171699791247, -2.2004042307654466`}, {
              1.12, -1.8255073850074173`*^-11}], 
             Offset[{0, 0}, {1.1678456746236197`, -0.01628515427134595}], 
             
             Offset[{5., 1.1102230246251565`*^-15}, {
              1.1678456746236197`, -0.01628515427134595}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1678456746236197`, -0.01628515427134595}], 
             
             Offset[{10., 2.220446049250313*^-15}, {
              1.1678456746236197`, -0.01628515427134595}]}]}, {
           EdgeForm[None], 
           FaceForm[{
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
           PolygonBox[{
             
             Offset[{110., 6.500000000000024}, {
              1.1678456746236197`, -0.01628515427134595}], 
             
             Offset[{110., -6.499999999999976}, {
              1.1678456746236197`, -0.01628515427134595}], 
             
             Offset[{10., -6.499999999999997}, {
              1.1678456746236197`, -0.01628515427134595}], 
             
             Offset[{10., 6.500000000000003}, {
              1.1678456746236197`, -0.01628515427134595}]}]}, {
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[1.25], 
           EdgeForm[None]}, {}, 
          InsetBox[
           StyleBox[
            RotationBox["\"OldVG=0.007050979\"", BoxRotation -> 0.], 
            StripOnInput -> False, LineOpacity -> 1, FrontFaceOpacity -> 1, 
            BackFaceOpacity -> 1, Opacity -> 1, FontOpacity -> 1], 
           
           Offset[{60., 1.3322676295501878`*^-14}, {
            1.1678456746236197`, -0.01628515427134595}], 
           NCache[
            ImageScaled[{
              Rational[1, 2], 
              Rational[1, 2]}], 
            ImageScaled[{0.5, 0.5}]]]}]}}, {}}}, AspectRatio -> NCache[
      Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    ImagePadding -> {{All, 154.9228373118098}, {All, All}}, 
    ImageSize -> {845.75, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, 
    PlotRange -> {{0, 1}, {-1.8255073850074173`*^-11, 0.19494534874430522`}}, 
    PlotRangeClipping -> False, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
    Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"New:VG=0.007050979\"", "\"OldVG=0.007050979\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.910478338268569*^9, 3.9104794535705023`*^9, 3.9104865865708733`*^9, 
   3.9104878164388084`*^9, {3.9104879896615257`*^9, 3.910488004242239*^9}, 
   3.9104880374138155`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"ea437077-106e-4fb6-bc36-47d9e7e49aef"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", "\"\<newSimTest.m\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9105350266310387`*^9, 3.910535032003242*^9}, 
   3.9105350772257924`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"c2ffedb1-b6d8-4f36-a5c5-4118de46e5f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
       RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"y", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
          RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}], 
      ")"}]}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", 
      SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
      RowBox[{"\[CapitalLambda]", " ", "/", " ", 
       SuperscriptBox["W", "2"]}]}], ")"}], "1"], 
   RowBox[{"new", "[", "1", "]"}]}], "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "start"}], ",", 
    RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
    RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", " ", 
    RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
    RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
    RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
    RowBox[{"VG", "->", "genVar"}], ",", " ", 
    RowBox[{"y", " ", "->", " ", "0.1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.910535155016691*^9, 3.9105351672169175`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"961f56ed-4ead-4802-b22c-c9e0eb0d3136"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"{", "0.5805829933698915`", "}"}], "}"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.91053515688855*^9, 3.9105351682380943`*^9}, 
   3.9105352132890596`*^9, 3.9105388267223454`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"0602cc62-54af-441e-a94c-169b404dbd88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
       RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"y", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
          RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}], 
      ")"}]}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", 
      SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
      RowBox[{"\[CapitalLambda]", " ", "/", " ", 
       SuperscriptBox["W", "2"]}]}], ")"}], "1"], 
   RowBox[{"scen2", "[", "1", "]"}]}], "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "start"}], ",", 
    RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
    RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", " ", 
    RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
    RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
    RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
    RowBox[{"VG", "->", "genVar"}], ",", " ", 
    RowBox[{"y", " ", "->", " ", "0.1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9104880759683723`*^9, 3.9104880901586757`*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"3573b436-ca84-4557-86fd-b095e818a118"],

Cell[BoxData["1.0849487011712706`*^-13"], "Output",
 CellChangeTimes->{{3.9104880903826942`*^9, 3.9104881002338524`*^9}},
 CellLabel->
  "Out[184]=",ExpressionUUID->"58706799-0e27-464e-aeff-f90471b62a3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
       RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"y", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
          RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}], 
      ")"}]}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", 
      SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
      RowBox[{"\[CapitalLambda]", " ", "/", " ", 
       SuperscriptBox["W", "2"]}]}], ")"}], "1"], 
   RowBox[{"old", "[", "1", "]"}]}], "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "start"}], ",", 
    RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
    RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", " ", 
    RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
    RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
    RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
    RowBox[{"VG", "->", "genVar"}], ",", " ", 
    RowBox[{"y", " ", "->", " ", "0.1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9104880804966245`*^9, 3.9104880953348093`*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"ebcf3c6c-128e-4553-b0ce-884ab3343047"],

Cell[BoxData["0.5884877346179259`"], "Output",
 CellChangeTimes->{3.910488100317881*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"6bc80d70-9338-4d6c-90d0-3c0b2671eb9b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"new", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.9105352412678103`*^9, 3.9105352419679513`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"d0574a7b-bd24-4369-9f8e-2403f3ca5b1b"],

Cell[BoxData[
 RowBox[{"pew", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.9105360610571766`*^9, 3.910536062198848*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"02cf2a99-4837-4c59-be03-05a25ab7db5a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scen2", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.9104880519023657`*^9, 3.9104880538311787`*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"c94c986e-5502-4ec9-b460-c6a30b0ada0f"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
       RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
       RowBox[{"(", 
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"4.530999307336033`*^-13", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "15"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.050979`"}], " ", "t"}]]}], ")"}]}], "+", 
           RowBox[{"1.0033734126968555`*^-11", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "10"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.050979`"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{"4.350211305048301`*^-11", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "6"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.050979`"}], " ", "t"}]]}], ")"}]}], "+", 
           RowBox[{"6.779550085789557`*^-11", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.050979`"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{"3.389775042894779`*^-11", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.050979`"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{"3.4288358808214113`*^-13", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "21"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "5.050979`"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{"2.5300426681671742`*^-12", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "15"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "5.050979`"}], " ", "t"}]]}], ")"}]}], "+", 
           RowBox[{"2.4193425468893956`*^-11", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "10"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "5.050979`"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{"6.072733336934913`*^-11", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "6"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "5.050979`"}], " ", "t"}]]}], ")"}]}], "+", 
           RowBox[{"6.309333337075232`*^-11", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "5.050979`"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{"2.366000001403212`*^-11", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "5.050979`"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{"1.1487423615467673`*^-13", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "21"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "10.050979`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", 
                   FractionBox["3", "2"]}], "+", 
                 RowBox[{
                   FractionBox["15", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "2"]}]}], ")"}]}], "-", 
           RowBox[{"8.476250513186404`*^-13", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "15"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "10.050979`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", 
                   FractionBox["3", "2"]}], "+", 
                 RowBox[{
                   FractionBox["15", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "2"]}]}], ")"}]}], "+", 
           TemplateBox[{"24615"}, "OutputSizeLimit`Skeleton"], "+", 
           RowBox[{"1.2663921018147521`*^-7", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "1081"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"88.898042`", " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox[
                  RowBox[{"20146690401016725", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "70368744177664"], 
                 "-", 
                 FractionBox[
                  RowBox[{"1067774591253886425", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"270146971587233265525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "5"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"8065816723104536070675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "7"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"1110394102214057799062925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "9"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"6157640021368865976621675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "11"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"188992182194321348051696025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "13"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"1052956443654076082002306425", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "15"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"70548081724823097494154530475", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "17"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"28466769818788267409922003525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "19"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"288734379590566712300637464325", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "21"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"583174972216520118520259858775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "23"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"7581274638814761540763378164075", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "25"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"4989385873408005458451112125075", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "27"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"21358504059071708095537026781725", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "29"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"18602568051449552212241926551825", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "31"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"421094494982812590986203610127675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "33"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"60156356426116084426600515732525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "35"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"110015678869383469717116258501825", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "37"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"39641277001518740100499380593775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "39"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"87984297735078179247449844732525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "41"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"9061505746802071616846993975775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "43"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"5217230581492101840002814713325", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "45"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"468151125258773245587671625525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "47"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"315285451704888104171289053925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "49"]}], 
                  "70368744177664"]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "+", 
           RowBox[{"8.29379503182153`*^-9", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "990"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"88.898042`", " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox[
                  RowBox[{"20146690401016725", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "70368744177664"], 
                 "-", 
                 FractionBox[
                  RowBox[{"1067774591253886425", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"270146971587233265525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "5"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"8065816723104536070675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "7"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"1110394102214057799062925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "9"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"6157640021368865976621675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "11"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"188992182194321348051696025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "13"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"1052956443654076082002306425", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "15"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"70548081724823097494154530475", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "17"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"28466769818788267409922003525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "19"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"288734379590566712300637464325", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "21"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"583174972216520118520259858775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "23"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"7581274638814761540763378164075", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "25"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"4989385873408005458451112125075", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "27"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"21358504059071708095537026781725", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "29"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"18602568051449552212241926551825", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "31"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"421094494982812590986203610127675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "33"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"60156356426116084426600515732525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "35"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"110015678869383469717116258501825", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "37"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"39641277001518740100499380593775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "39"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"87984297735078179247449844732525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "41"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"9061505746802071616846993975775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "43"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"5217230581492101840002814713325", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "45"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"468151125258773245587671625525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "47"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"315285451704888104171289053925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "49"]}], 
                  "70368744177664"]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "-", 
           RowBox[{"9.607906959561554`*^-7", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "55"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "14.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "+", 
           RowBox[{"0.00003125398724625776`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "36"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "14.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "-", 
           RowBox[{"0.000037010827410621734`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "21"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "14.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "-", 
           RowBox[{"0.00017973449140140432`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "10"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "14.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "+", 
           RowBox[{"0.0002024037065331129`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "14.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "-", 
           RowBox[{"2.6913431310671793`*^-6", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "78"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "-", 
           RowBox[{"6.8016788522354866`*^-6", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "55"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "+", 
           RowBox[{"0.00009308892325452978`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "36"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "-", 
           RowBox[{"0.00006188658142650225`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "21"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "-", 
           RowBox[{"0.00019418941601795857`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "10"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}], "+", 
           RowBox[{"0.0001607606560655122`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             SuperscriptBox["\[Alpha]", "5"], " ", 
             SuperscriptBox["\[CapitalLambda]", "5"]}]}], ")"}]}], 
     Short[#, 32]& ], "line" -> 182, "sessionID" -> 28766774182623955770, 
   "byteCount" -> 161732368, "size" -> 32, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.910488059713747*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"ddf97f4c-49ac-4ac8-8d0b-cd900d94e108"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"old", "[", "1", "]"}], " ", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"VG", "->", "genVar"}], ",", 
    RowBox[{"Ne", "->", "selectedNe"}], ",", " ", 
    RowBox[{"W", "->", "fitVar"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9104881128678455`*^9, 3.9104881386377935`*^9}, {
  3.9104885870726857`*^9, 3.9104886061131325`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"cf0a72f1-770c-40cf-852f-21f5489df541"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
       RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
       RowBox[{"(", 
         RowBox[{
           RowBox[{
             FractionBox["3", "500"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.050979`"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{"0.0067006216418638844`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "5.050979`"}], " ", "t"}]]}], ")"}]}], "-", 
           RowBox[{"0.0022448691615015812`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "10.050979`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", 
                   FractionBox["3", "2"]}], "+", 
                 RowBox[{
                   FractionBox["15", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{"0.007700000000000002`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "6"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.050979`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", 
                   FractionBox["3", "2"]}], "+", 
                 RowBox[{
                   FractionBox["15", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "2"]}]}], ")"}]}], "-", 
           RowBox[{"0.006840721565110746`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "10"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "3.050979`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", 
                   FractionBox["3", "2"]}], "+", 
                 RowBox[{
                   FractionBox["15", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "2"]}]}], ")"}]}], "-", 
           RowBox[{"0.002105535690548322`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "6"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "11.050979`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["15", "2"]}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "+", 
                 RowBox[{
                   FractionBox["35", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}]}], ")"}]}], "+", 
           TemplateBox[{"424"}, "OutputSizeLimit`Skeleton"], "+", 
           RowBox[{"0.0045681763257883826`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "1225"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "14.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox["395033145117975", "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"60440071203050175", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "2"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"24558815598839387775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "4"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"990538895819855306925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "6"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"169382151185195257484175", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "8"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"1110394102214057799062925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "10"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"38998386802002817851937275", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "12"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"242989948535556018923609175", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "14"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"17900259542119293394039209225", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "16"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"7838675747202566388239392275", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "18"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"85400309456364802229766010575", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "20"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"183740059739451544191314750025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "22"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"2527091546271587180254459388025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "24"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"1749524916649560355560779576325", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "26"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"7840463515355437148994604767975", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "28"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"7119501353023902698512342260575", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "30"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"167423112463045969910177338966425", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "32"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"24770264410753681822717859419275", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "34"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"46788277220312510109578178903075", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "36"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"17370896663586863639544672395025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "38"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"39641277001518740100499380593775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "40"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"4189728463575151392735706892025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "42"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"2471319749127837713685543811575", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "44"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"226836112238787036521861509275", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "46"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"156050375086257748529223875175", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "48"]}], 
                  "70368744177664"]}], ")"}], " ", "\[Alpha]", " ", 
             "\[CapitalLambda]"}], "-", 
           RowBox[{"0.0009115040911057491`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "1326"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"86.898042`", " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox["395033145117975", "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"60440071203050175", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "2"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"24558815598839387775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "4"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"990538895819855306925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "6"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"169382151185195257484175", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "8"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"1110394102214057799062925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "10"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"38998386802002817851937275", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "12"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"242989948535556018923609175", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "14"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"17900259542119293394039209225", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "16"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"7838675747202566388239392275", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "18"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"85400309456364802229766010575", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "20"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"183740059739451544191314750025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "22"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"2527091546271587180254459388025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "24"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"1749524916649560355560779576325", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "26"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"7840463515355437148994604767975", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "28"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"7119501353023902698512342260575", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "30"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"167423112463045969910177338966425", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "32"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"24770264410753681822717859419275", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "34"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"46788277220312510109578178903075", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "36"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"17370896663586863639544672395025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "38"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"39641277001518740100499380593775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "40"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"4189728463575151392735706892025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "42"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"2471319749127837713685543811575", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "44"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"226836112238787036521861509275", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "46"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"156050375086257748529223875175", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "48"]}], 
                  "70368744177664"]}], ")"}], " ", "\[Alpha]", " ", 
             "\[CapitalLambda]"}], "-", 
           RowBox[{"0.0009014615883756028`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "1176"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "113.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox[
                  RowBox[{"20146690401016725", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "70368744177664"], 
                 "-", 
                 FractionBox[
                  RowBox[{"1067774591253886425", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"270146971587233265525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "5"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"8065816723104536070675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "7"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"1110394102214057799062925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "9"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"6157640021368865976621675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "11"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"188992182194321348051696025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "13"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"1052956443654076082002306425", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "15"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"70548081724823097494154530475", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "17"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"28466769818788267409922003525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "19"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"288734379590566712300637464325", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "21"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"583174972216520118520259858775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "23"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"7581274638814761540763378164075", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "25"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"4989385873408005458451112125075", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "27"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"21358504059071708095537026781725", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "29"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"18602568051449552212241926551825", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "31"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"421094494982812590986203610127675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "33"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"60156356426116084426600515732525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "35"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"110015678869383469717116258501825", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "37"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"39641277001518740100499380593775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "39"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"87984297735078179247449844732525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "41"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"9061505746802071616846993975775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "43"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"5217230581492101840002814713325", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "45"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"468151125258773245587671625525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "47"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"315285451704888104171289053925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "49"]}], 
                  "70368744177664"]}], ")"}], " ", "\[Alpha]", " ", 
             "\[CapitalLambda]"}], "-", 
           RowBox[{"0.00579460032117434`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "1275"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "14.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox[
                  RowBox[{"20146690401016725", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "70368744177664"], 
                 "-", 
                 FractionBox[
                  RowBox[{"1067774591253886425", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"270146971587233265525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "5"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"8065816723104536070675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "7"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"1110394102214057799062925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "9"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"6157640021368865976621675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "11"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"188992182194321348051696025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "13"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"1052956443654076082002306425", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "15"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"70548081724823097494154530475", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "17"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"28466769818788267409922003525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "19"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"288734379590566712300637464325", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "21"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"583174972216520118520259858775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "23"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"7581274638814761540763378164075", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "25"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"4989385873408005458451112125075", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "27"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"21358504059071708095537026781725", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "29"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"18602568051449552212241926551825", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "31"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"421094494982812590986203610127675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "33"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"60156356426116084426600515732525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "35"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"110015678869383469717116258501825", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "37"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"39641277001518740100499380593775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "39"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"87984297735078179247449844732525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "41"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"9061505746802071616846993975775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "43"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"5217230581492101840002814713325", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "45"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"468151125258773245587671625525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "47"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"315285451704888104171289053925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "49"]}], 
                  "70368744177664"]}], ")"}], " ", "\[Alpha]", " ", 
             "\[CapitalLambda]"}], "-", 
           RowBox[{"0.001365150689156583`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "1378"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"88.898042`", " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox[
                  RowBox[{"20146690401016725", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "70368744177664"], 
                 "-", 
                 FractionBox[
                  RowBox[{"1067774591253886425", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"270146971587233265525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "5"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"8065816723104536070675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "7"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"1110394102214057799062925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "9"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"6157640021368865976621675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "11"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"188992182194321348051696025", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "13"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"1052956443654076082002306425", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "15"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"70548081724823097494154530475", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "17"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"28466769818788267409922003525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "19"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"288734379590566712300637464325", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "21"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"583174972216520118520259858775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "23"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"7581274638814761540763378164075", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "25"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"4989385873408005458451112125075", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "27"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"21358504059071708095537026781725", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "29"]}], 
                  "8796093022208"], "-", 
                 FractionBox[
                  RowBox[{"18602568051449552212241926551825", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "31"]}], 
                  "4398046511104"], "+", 
                 FractionBox[
                  RowBox[{"421094494982812590986203610127675", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "33"]}], 
                  "70368744177664"], "-", 
                 FractionBox[
                  RowBox[{"60156356426116084426600515732525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "35"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"110015678869383469717116258501825", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "37"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"39641277001518740100499380593775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "39"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"87984297735078179247449844732525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "41"]}], 
                  "35184372088832"], "-", 
                 FractionBox[
                  RowBox[{"9061505746802071616846993975775", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "43"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"5217230581492101840002814713325", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "45"]}], 
                  "17592186044416"], "-", 
                 FractionBox[
                  RowBox[{"468151125258773245587671625525", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "47"]}], 
                  "8796093022208"], "+", 
                 FractionBox[
                  RowBox[{"315285451704888104171289053925", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "49"]}], 
                  "70368744177664"]}], ")"}], " ", "\[Alpha]", " ", 
             "\[CapitalLambda]"}], "-", 
           RowBox[{"0.24312733228757516`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "14.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", "\[Alpha]", " ", 
             "\[CapitalLambda]"}], "+", 
           RowBox[{"0.17862277256095144`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "10"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "7.101958`"}], " ", "t"}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", "\[Alpha]", " ", 
             "\[CapitalLambda]"}]}], ")"}]}], Short[#, 64]& ], "line" -> 191, 
   "sessionID" -> 28766774182623955770, "byteCount" -> 1488144, "size" -> 64, 
   "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.9104881314250107`*^9, 3.91048813917594*^9}, 
   3.9104886078527765`*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"42f172c6-95a9-4123-89da-afa40029403b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"scen2", "[", "1", "]"}], " ", "===", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"old", "[", "1", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{"VG", "->", "genVar"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9104881732875395`*^9, 3.910488211720763*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"5036b3a5-e91d-4b49-aae9-4af4c14c1ff9"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.910488179869882*^9, 3.9104882141017036`*^9}},
 CellLabel->
  "Out[190]=",ExpressionUUID->"850625fa-f48a-4fc3-94dd-c168f7e7c53f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"scen2", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9105441670348663`*^9, 3.9105441776733766`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"94295a71-364f-40ae-9c3a-b4664f249a92"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.9106989714038763`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"043c53c0-20ad-4c9f-ba39-31a2b943081c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Save", "[", 
  RowBox[{"\"\<fullSimplifyTest.m\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.9105739723081875`*^9, 3.910573974932397*^9}, 
   3.910574007629169*^9},ExpressionUUID->"f352d0bc-78f5-4103-99b7-\
9ec77d46c2dd"]
},
WindowSize->{1440., 747.75},
WindowMargins->{{Automatic, 1434}, {Automatic, -6}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1c4cfac5-96db-44cf-9d18-7ead38c2ff30"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4041, 110, 152, "Input",ExpressionUUID->"29e19224-63bf-46b3-898f-c964c55548fe"],
Cell[4602, 132, 758, 17, 67, "Input",ExpressionUUID->"47daf7f6-884c-44ff-8bfc-b7974af13747"],
Cell[CellGroupData[{
Cell[5385, 153, 205, 3, 28, "Input",ExpressionUUID->"f97aad94-4119-435e-bf65-e1fcffb1a067"],
Cell[5593, 158, 3430, 81, 87, "Output",ExpressionUUID->"401e3363-558b-4fde-8712-d294be7968ac"]
}, Open  ]],
Cell[9038, 242, 312, 5, 28, "Input",ExpressionUUID->"971b5410-e78b-4219-a500-e30e00871f9f"],
Cell[9353, 249, 190, 4, 28, "Input",ExpressionUUID->"2a34f0cd-b329-474c-9d7e-7c42a3aac229"],
Cell[9546, 255, 961, 25, 28, "Input",ExpressionUUID->"eb0b9733-2f16-4305-b362-be402cbe9214"],
Cell[10510, 282, 1884, 46, 75, "Input",ExpressionUUID->"6ab06e22-7ec7-44bb-92f9-0a4741e08ed1"],
Cell[12397, 330, 758, 17, 67, "Input",ExpressionUUID->"994830d3-14bb-4413-a139-72cab4dba8ad"],
Cell[CellGroupData[{
Cell[13180, 351, 357, 5, 28, "Input",ExpressionUUID->"b5c017cd-da54-4b42-b0c2-e5d2a480daf6"],
Cell[13540, 358, 11686, 273, 181, "Output",ExpressionUUID->"b21dc3af-8d2b-410f-8eb4-fb9156eef4f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25263, 636, 203, 3, 28, "Input",ExpressionUUID->"ea1448e1-f4ca-4a09-b121-402807e48ff7"],
Cell[25469, 641, 3357, 80, 87, "Output",ExpressionUUID->"cdddc191-33ed-4a69-aa7a-157c5ebcf119"]
}, Open  ]],
Cell[28841, 724, 211, 3, 28, "Input",ExpressionUUID->"8738b2bd-530c-4240-b6d5-1cf509336971"],
Cell[29055, 729, 1647, 41, 95, "Input",ExpressionUUID->"735cf53c-afe1-4756-9381-ce7fa2626a01"],
Cell[30705, 772, 617, 14, 67, "Input",ExpressionUUID->"bb357ef9-3d93-46a3-84bc-841268265728"],
Cell[CellGroupData[{
Cell[31347, 790, 205, 3, 28, "Input",ExpressionUUID->"0cf82375-5cda-4422-8163-9c1981f67cbd"],
Cell[31555, 795, 4492, 106, 132, "Output",ExpressionUUID->"aedea820-53fd-41e4-a297-1120ad3b095c"]
}, Open  ]],
Cell[36062, 904, 209, 3, 28, "Input",ExpressionUUID->"f8bb49f4-eaab-49db-8532-3045efb6f3d5"],
Cell[36274, 909, 2646, 77, 67, "Input",ExpressionUUID->"08af805f-04bf-4a82-9e15-b1cc12743de6"],
Cell[38923, 988, 820, 18, 124, "Input",ExpressionUUID->"e669f754-fb39-4a44-bec1-039e413fd17d"],
Cell[39746, 1008, 533, 11, 67, "Input",ExpressionUUID->"9a77c101-05f4-4a9e-89a8-87eeb75a3d77"],
Cell[CellGroupData[{
Cell[40304, 1023, 5543, 146, 276, "Input",ExpressionUUID->"9f9552d7-7c12-4355-bddf-136a5b1647f8"],
Cell[45850, 1171, 531, 12, 28, "Message",ExpressionUUID->"effe38d6-8b5c-4432-a336-082d235cf7bc"],
Cell[46384, 1185, 561, 12, 28, "Message",ExpressionUUID->"53e47015-f9bf-4ce8-8f74-126c454ce874"],
Cell[46948, 1199, 115528, 2070, 384, "Output",ExpressionUUID->"da46721f-b74a-461a-8eb0-70072470d078"]
}, Open  ]],
Cell[162491, 3272, 2650, 78, 67, "Input",ExpressionUUID->"26b67c2a-cbb2-4905-aa74-739111cec4f6"],
Cell[165144, 3352, 667, 14, 67, "Input",ExpressionUUID->"19adb1d3-8c46-40b2-b28a-2ec76f60b81a"],
Cell[CellGroupData[{
Cell[165836, 3370, 5599, 147, 276, "Input",ExpressionUUID->"8dcf18cc-944e-483b-9d78-22187b08a293"],
Cell[171438, 3519, 533, 12, 28, "Message",ExpressionUUID->"447607f7-1b40-497f-97e3-044cc86ab101"],
Cell[171974, 3533, 561, 12, 28, "Message",ExpressionUUID->"45ceed30-dc14-4fc7-9980-ccb5a3f5c8bf"],
Cell[172538, 3547, 114930, 2064, 229, "Output",ExpressionUUID->"350a5202-a224-45d9-ac3c-0060734d85b9"]
}, Open  ]],
Cell[287483, 5614, 2650, 78, 67, "Input",ExpressionUUID->"69297143-db1a-4e31-bc90-1550e7b8b2de"],
Cell[290136, 5694, 642, 14, 67, "Input",ExpressionUUID->"ae210d91-3cdb-48a0-9739-446598227f45"],
Cell[CellGroupData[{
Cell[290803, 5712, 5599, 147, 276, "Input",ExpressionUUID->"1206eccc-e472-4666-a5a5-15800d0f3be9"],
Cell[296405, 5861, 531, 12, 28, "Message",ExpressionUUID->"de63f277-b043-4575-b1d2-fa153675d5c7"],
Cell[296939, 5875, 561, 12, 28, "Message",ExpressionUUID->"d0208aef-8c0b-4464-8102-9d444bb4f62b"],
Cell[297503, 5889, 116370, 2086, 229, "Output",ExpressionUUID->"bb0eb51e-fc7c-4c60-b4f9-52a0295bc9eb"]
}, Open  ]],
Cell[413888, 7978, 2650, 78, 67, "Input",ExpressionUUID->"aff6a79c-100e-476c-ac13-b1211fac1f80"],
Cell[416541, 8058, 505, 11, 48, "Input",ExpressionUUID->"3c64a6c9-1a96-483a-96cb-5f49e11e73f7"],
Cell[CellGroupData[{
Cell[417071, 8073, 8955, 218, 398, "Input",ExpressionUUID->"e87e1798-d41f-48fd-a978-6f6da60f1e81"],
Cell[426029, 8293, 731, 15, 28, "Message",ExpressionUUID->"35a6d02e-56c8-4ddd-96cd-dccb34c22713"],
Cell[426763, 8310, 758, 15, 28, "Message",ExpressionUUID->"c3ab1d7e-9d08-4aeb-9a95-46755bc6b58d"],
Cell[427524, 8327, 88237, 1583, 365, "Output",ExpressionUUID->"228ff785-0a9a-4cd7-8e0c-c3e8716fc179"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515798, 9915, 1378, 36, 31, "Input",ExpressionUUID->"a33a2ecc-cb3d-4b9c-a247-ebb0bce850df"],
Cell[517179, 9953, 245, 4, 32, "Output",ExpressionUUID->"d34626a3-c11c-451f-ac11-e1264947fcd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517461, 9962, 1409, 36, 31, "Input",ExpressionUUID->"06b78727-417c-4f71-854a-111154b39681"],
Cell[518873, 10000, 295, 5, 32, "Output",ExpressionUUID->"c8accdc4-9712-4ebf-b563-031867c54f1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[519205, 10010, 1430, 36, 31, "Input",ExpressionUUID->"cdfc3bba-f8cc-4134-8797-910e0a3c51b4"],
Cell[520638, 10048, 246, 4, 32, "Output",ExpressionUUID->"9954422f-0056-4165-b70f-1728fc821d8f"]
}, Open  ]],
Cell[520899, 10055, 2646, 77, 67, "Input",ExpressionUUID->"0af761c2-f0b7-4a20-83ab-be5c27d6c00e"],
Cell[523548, 10134, 666, 13, 67, "Input",ExpressionUUID->"39ed7bf1-411f-4e64-88c2-c804da89c095"],
Cell[CellGroupData[{
Cell[524239, 10151, 5748, 149, 276, "Input",ExpressionUUID->"40ee0599-d3b0-4466-b396-2c05a9609be2"],
Cell[529990, 10302, 502, 11, 28, "Message",ExpressionUUID->"485f0327-82c8-4cab-8f7c-46bc046f07b5"],
Cell[530495, 10315, 532, 11, 28, "Message",ExpressionUUID->"600c069b-c65d-4d01-9b04-17bed0a155fe"],
Cell[531030, 10328, 115565, 2071, 373, "Output",ExpressionUUID->"5c7bc6b9-2a88-419f-b49f-2550cf0b3f78"]
}, Open  ]],
Cell[646610, 12402, 670, 14, 67, "Input",ExpressionUUID->"3ba61e80-06ac-4338-a2d4-4b785ff46810"],
Cell[CellGroupData[{
Cell[647305, 12420, 5699, 148, 276, "Input",ExpressionUUID->"f62d6ba6-297e-4908-8ddf-8069bb44a23e"],
Cell[653007, 12570, 553, 12, 28, "Message",ExpressionUUID->"e06672c0-e94f-40d1-9513-e5315281eb3e"],
Cell[653563, 12584, 583, 12, 28, "Message",ExpressionUUID->"adb472b9-e7a4-4581-9405-84d260c670f2"],
Cell[654149, 12598, 114767, 2059, 370, "Output",ExpressionUUID->"5efb5ef6-4bd5-4f24-b2ba-7a62f8925341"]
}, Open  ]],
Cell[768931, 14660, 2650, 78, 67, "Input",ExpressionUUID->"7d8f477b-2d8d-455a-a8a5-844577aad488"],
Cell[771584, 14740, 566, 12, 67, "Input",ExpressionUUID->"65dff44f-f533-473b-aa43-963aa4e87680"],
Cell[CellGroupData[{
Cell[772175, 14756, 6768, 171, 300, "Input",ExpressionUUID->"86f542d1-a6d4-4e87-836d-84d8babd5223"],
Cell[778946, 14929, 609, 13, 28, "Message",ExpressionUUID->"2171f61a-5d95-43e7-bd8d-70d7bec70a65"],
Cell[779558, 14944, 639, 13, 28, "Message",ExpressionUUID->"396c35ad-a9ae-4873-8c7a-f8781014912a"],
Cell[780200, 14959, 36646, 702, 371, "Output",ExpressionUUID->"ea437077-106e-4fb6-bc36-47d9e7e49aef"]
}, Open  ]],
Cell[816861, 15664, 268, 5, 28, "Input",ExpressionUUID->"c2ffedb1-b6d8-4f36-a5c5-4118de46e5f1"],
Cell[CellGroupData[{
Cell[817154, 15673, 1366, 35, 31, "Input",ExpressionUUID->"961f56ed-4ead-4802-b22c-c9e0eb0d3136"],
Cell[818523, 15710, 342, 8, 32, "Output",ExpressionUUID->"0602cc62-54af-441e-a94c-169b404dbd88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[818902, 15723, 1370, 35, 31, "Input",ExpressionUUID->"3573b436-ca84-4557-86fd-b095e818a118"],
Cell[820275, 15760, 204, 3, 32, "Output",ExpressionUUID->"58706799-0e27-464e-aeff-f90471b62a3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[820516, 15768, 1368, 35, 31, "Input",ExpressionUUID->"ebcf3c6c-128e-4553-b0ce-884ab3343047"],
Cell[821887, 15805, 171, 3, 32, "Output",ExpressionUUID->"6bc80d70-9338-4d6c-90d0-3c0b2671eb9b"]
}, Open  ]],
Cell[822073, 15811, 205, 3, 28, "Input",ExpressionUUID->"d0574a7b-bd24-4369-9f8e-2403f3ca5b1b"],
Cell[822281, 15816, 203, 3, 28, "Input",ExpressionUUID->"02cf2a99-4837-4c59-be03-05a25ab7db5a"],
Cell[CellGroupData[{
Cell[822509, 15823, 211, 4, 28, "Input",ExpressionUUID->"c94c986e-5502-4ec9-b460-c6a30b0ada0f"],
Cell[822723, 15829, 30826, 703, 499, "Output",ExpressionUUID->"ddf97f4c-49ac-4ac8-8d0b-cd900d94e108"]
}, Open  ]],
Cell[CellGroupData[{
Cell[853586, 16537, 452, 11, 28, "Input",ExpressionUUID->"cf0a72f1-770c-40cf-852f-21f5489df541"],
Cell[854041, 16550, 46545, 1057, 835, "Output",ExpressionUUID->"42f172c6-95a9-4123-89da-afa40029403b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[900623, 17612, 399, 10, 28, "Input",ExpressionUUID->"5036b3a5-e91d-4b49-aae9-4af4c14c1ff9"],
Cell[901025, 17624, 183, 3, 32, "Output",ExpressionUUID->"850625fa-f48a-4fc3-94dd-c168f7e7c53f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[901245, 17632, 246, 4, 28, "Input",ExpressionUUID->"94295a71-364f-40ae-9c3a-b4664f249a92"],
Cell[901494, 17638, 158, 2, 32, "Output",ExpressionUUID->"043c53c0-20ad-4c9f-ba39-31a2b943081c"]
}, Open  ]],
Cell[901667, 17643, 256, 5, 28, "Input",ExpressionUUID->"f352d0bc-78f5-4103-99b7-9ec77d46c2dd"]
}
]
*)

