(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1679163,      32522]
NotebookOptionsPosition[   1655800,      32176]
NotebookOutlinePosition[   1656236,      32193]
CellTagsIndexPosition[   1656193,      32190]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"kmax", " ", "=", " ", "3"}], ";"}]], "Input",
 CellChangeTimes->{{3.9108062820986047`*^9, 3.910806285519453*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a99218c7-fa7a-43a0-8b3c-3b5e8f9c0358"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<path-integrals.m\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Kimura", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_", ",", "n_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "m", "}"}], ",", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"4", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "m"}], "+", "1"}], ")"}], "*", "x", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"m", "+", "1"}], ")"}]}], ")"}]}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "x"}]}]}], "]"}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "y"}]}]}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], "*", "m", "*", 
         RowBox[{"(", 
          RowBox[{"m", "+", "1"}], ")"}], "*", "t"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"haywardVGMinus4", " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Kimura", "[", 
       RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
         RowBox[{
          RowBox[{"pints", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"haywardVGMinus3", " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Kimura", "[", 
       RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
         RowBox[{
          RowBox[{"pints", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"haywardVGMinus2", " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Kimura", "[", 
       RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
         RowBox[{
          RowBox[{"pints", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"haywardVGMinus1", " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Kimura", "[", 
       RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
         RowBox[{
          RowBox[{"pints", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "pints", "]"}]}], "Input",
 CellChangeTimes->{{3.91080630059159*^9, 3.9108063100324216`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"3413e537-263a-4028-9b58-b06451794b9c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<new1through5Sequential_50Kimura.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SimplifiedHayward50", " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", 
           SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", "*", " ", 
       RowBox[{"new", "[", "j", "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "0", ",", " ", "kmax"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.910441098479672*^9, 3.9104411460445724`*^9}, {
   3.9104655620267887`*^9, 3.9104655727661486`*^9}, {3.910801146850128*^9, 
   3.9108011553372817`*^9}, 3.910806315821726*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"bb40df93-4bf5-4677-bc11-90ccbb60a5b5"],

Cell[BoxData[
 RowBox[{"Clear", "[", "new", "]"}]], "Input",
 CellChangeTimes->{{3.9108011604998713`*^9, 3.910801162494501*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"85b961f4-da12-48e7-8a79-5d575914e8f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"styles", " ", "=", " ", 
   RowBox[{"Flatten", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<SouthwestColors\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "7"}], "}"}]}], "}"}], "]"}], "[", "1", "]"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<SouthwestColors\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "7"}], "}"}]}], "}"}], "]"}], "[", "3", "]"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<SouthwestColors\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "7"}], "}"}]}], "}"}], "]"}], "[", "5", "]"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<SouthwestColors\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "7"}], "}"}]}], "}"}], "]"}], "[", "7", 
         "]"}]}], "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9108063269555254`*^9, 3.9108063314516554`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"243893cb-6c17-498d-baec-9f9370a9287b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "fitVar", ",", " ", "selectedNe", ",", " ", "jumpSize", ",", " ", 
    "selCoef", ",", " ", "genVar", ",", " ", "start", ",", "time", ",", " ", 
    "soln"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitVar", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectedNe", " ", "=", " ", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jumpSize", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", " ", "=", " ", "0.05"}], ";"}]}], "Input",
 CellChangeTimes->{{3.910440697865986*^9, 3.9104406988182306`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"c0cefd7c-3c95-4f41-96b6-8c241b67f79b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"selCoef", ",", " ", "genVar", ",", " ", "soln"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9104409339464197`*^9, 3.910440934322338*^9}, 
   3.9104414376885943`*^9, {3.910468296420635*^9, 3.910468297175737*^9}, {
   3.9108013063152475`*^9, 3.9108013088124804`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"2a114194-2f16-4430-a98f-6b4cd0bcd21c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"VG", " ", "=", " ", "0.1"}], "*)"}]], "Input",
 CellChangeTimes->{{3.910801749023452*^9, 3.9108017522895365`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"727f8a25-25f0-437b-baf3-763489a71901"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "0.1"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardVGMinus1", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.1"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.10001"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.09999"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.1\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.10001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.09999\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.01\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.10001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.09999\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.910801926886571*^9, 
   3.9108019280777063`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"e0e4f817-9411-4da4-bac3-ff7a7f8f0a21"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 22, 1, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108031375292444`*^9, 3.910809432222494*^9, 
  3.9111158679341507`*^9, 3.9111434809663596`*^9, 3.9112413137217665`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"5613aba6-38b3-498b-a954-f0f433060521"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 22, 2, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108031375292444`*^9, 3.910809432222494*^9, 
  3.9111158679341507`*^9, 3.9111434809663596`*^9, 3.911241313775384*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"ce968ba5-5a7d-4276-8bcb-9db6e2ee0420"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
dQr/D3j7kYU=
          "]]}, Annotation[#, "Charting`Private`Tag$17753#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1: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
QIDbWw==
          "]]}, Annotation[#, "Charting`Private`Tag$17753#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1: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
MA==
          "]]}, Annotation[#, "Charting`Private`Tag$17753#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.35082, 0.595178, 0.853742]], 
         LineBox[CompressedData["
1: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
/R80Z9am
          "]]}, Annotation[#, "Charting`Private`Tag$17753#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.8628380688782926`*^-12}], 
               
               Offset[{2.07043352362874, 2.1710147452825552`}, {
                1.12, -1.8628380688782926`*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.6129117468465368}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.6129117468465368}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6129117468465368}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6129117468465368}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.8628380688782926`*^-12}], 
               
               Offset[{2.07043352362874, 2.1710147452825552`}, {
                1.12, -1.8628380688782926`*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.6129117468465368}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.6129117468465368}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6129117468465368}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6129117468465368}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{72., 6.500000000000016}, {1.1800000000000002`, 
                0.6129117468465368}], 
               
               Offset[{72., -6.499999999999984}, {1.1800000000000002`, 
                0.6129117468465368}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.6129117468465368}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.6129117468465368}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.1\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{41., 9.103828801926284*^-15}, {1.1800000000000002`, 
              0.6129117468465368}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.8718624622408726`*^-12}], 
               
               Offset[{2.920135093273347, 0.6876125631730859}, {
                1.12, -1.8718624622408726`*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.13763767321618717`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.13763767321618717`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.13763767321618717`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.13763767321618717`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.8718624622408726`*^-12}], 
               
               Offset[{2.920135093273347, 0.6876125631730859}, {
                1.12, -1.8718624622408726`*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.13763767321618717`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.13763767321618717`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.13763767321618717`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.13763767321618717`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.13763767321618717`}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.13763767321618717`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.13763767321618717`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.13763767321618717`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.10001\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.13763767321618717`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.7070110225821093`*^-12}], 
               
               Offset[{1.4196057690540738`, 2.6428619828641056`}, {
                1.12, -1.7070110225821093`*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.0881861421403198`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.0881861421403198`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.0881861421403198`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.0881861421403198`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.7070110225821093`*^-12}], 
               
               Offset[{1.4196057690540738`, 2.6428619828641056`}, {
                1.12, -1.7070110225821093`*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.0881861421403198`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.0881861421403198`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.0881861421403198`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.0881861421403198`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                1.0881861421403198`}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                1.0881861421403198`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                1.0881861421403198`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                1.0881861421403198`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.09999\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              1.0881861421403198`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 7.244449328054828*^-24}], 
               
               Offset[{1.0505617363596857`, 2.810039152413525}, {1.12, 
                7.244449328054828*^-24}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.5634617291767277`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.5634617291767277`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5634617291767277`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5634617291767277`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 7.244449328054828*^-24}], 
               
               Offset[{1.0505617363596857`, 2.810039152413525}, {1.12, 
                7.244449328054828*^-24}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.5634617291767277`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.5634617291767277`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5634617291767277`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5634617291767277`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                1.5634617291767277`}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                1.5634617291767277`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                1.5634617291767277`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                1.5634617291767277`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              1.5634617291767277`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 134.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-1.8718624622408726`*^-12, 6.020846736222112}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.01\"", "\"Old:VG=0.10001\"", "\"Old:VG=0.09999\"", 
       "\"NDSolve\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.35082, 0.595178, 0.853742]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910803972111827*^9, 3.910809458892129*^9, 
  3.911115918086282*^9, 3.911143510304435*^9, 3.9112413380601006`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"fbbce0ac-d5c2-4d23-8a5e-53486d34b1e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVGMinus1", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.1"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "1"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.10001"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.910804742634451*^9, 3.9108047521776905`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"15b6765f-addd-4244-9e7f-14c0cc529c29"],

Cell[BoxData["4.706272659735119`*^-6"], "Output",
 CellChangeTimes->{3.910804736654888*^9, 3.910806214595824*^9, 
  3.9108094769958067`*^9, 3.911115935654363*^9, 3.911143529747101*^9, 
  3.9112413551636724`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"15f5a7ef-4f50-46f8-924d-083166aec05b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVGMinus1", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.1"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "1"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.09999"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.910802122148862*^9}, {
   3.9108047588180637`*^9, 3.9108047613685884`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"9f99dcf8-e90e-4ded-aa3f-409b6ebfa74d"],

Cell[BoxData["4.707163836868242`*^-6"], "Output",
 CellChangeTimes->{3.9108062684962177`*^9, 3.9108094948405285`*^9, 
  3.911115953003065*^9, 3.91114354872439*^9, 3.9112413720384316`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"c5365aa0-1977-466d-8b61-f9eb701281e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVGMinus1", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.1"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "1"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108047753587003`*^9, 3.910804779760775*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"7593efa4-f98c-4987-b42b-33618232bc3a"],

Cell[BoxData[
 RowBox[{"{", "0.011349485191312625`", "}"}]], "Output",
 CellChangeTimes->{3.910804790360021*^9, 3.9108095157661343`*^9, 
  3.911115990985242*^9, 3.911143574612336*^9, 3.911241390800665*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"1ef260b1-37bf-492a-9a11-d431acfaba26"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"VG", "=", "0.01"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9108017637258387`*^9, 3.910801765800316*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"fbd3fba0-9253-47db-9085-19b991988d73"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "0.01"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardVGMinus2", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.01"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.01001"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00999"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.01\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.01001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00999\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.01\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.01001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00999\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"444350de-20b8-41ab-a879-df6cfd07e8b1"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 29, 3, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910809515854908*^9, 3.911115991209859*^9, 
  3.9111435747116013`*^9, 3.911241390902088*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"29a0742f-7849-4c27-9f2e-d20ae1ead61c"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 29, 4, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910809515854908*^9, 3.911115991209859*^9, 
  3.9111435747116013`*^9, 3.9112413909413953`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"2d1d4ac0-dfdc-467e-9d5d-c8cb2ce18152"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$18636#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1: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
NKxV
          "]]}, Annotation[#, "Charting`Private`Tag$18636#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1: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
xY9f8XMiV8M2xz+5YGo+6p7Xn0ijrYHbDVLsJGr+DOcud/Zz18Dlvy6zF6hM
Vqp03SdeA2Oc1754UvMdkCpzWB5R//sYlH6i+sFPV1D/4HoNnIs60/2V6pda
fQZbx5MaKAt4UtFN9XfyqFDZXngNXJxOSa6h+u/qm2gqnVYDUzrYlTddWFwK
RH+KbquBXsZjBIEOLE7+A9u15qkaWGHjKflKra/OvZfrG79q4KgwraB5Kxa3
XeurZCJQC+jUeU5Laj2+/m+HGCpdC00j9uWtzVjcSS/3iFqVWgh5+lBemFrP
Bpcfjh91qIVNWgfOdGq9F1SZPl6srQXvGukeQiUWd4V/SICvl9o+R5inuxyL
G/e83qhJqIXX3Q3lWdT1deCCBkc+Gx4C+jK0pAqxuLsVctmud/Cg/jAj1DsT
i/vLU6yb6YKH7v6zbitpWFzk41ObQ8F42DQTV9Cirufac8dVLhXigda4PnuM
uv4PlXJO0tJ+gfvRmt0akVjcrbDtG/M8X+Cy9oeGvTCq/1YLbV8lv8D3iNbw
1JdYnCT358+hN7/AXwVJlgrqfqP02DyWu/ALJG+fXOd2xeLkEo0yY07Xwc+l
vSa8PhZn/KJ9JvBiHQSlh8bZXcPinrkq/ueuWgc1cndTmbSwuHptiRhj0zpo
ratqwCphcdq7e35HgutAjK8w8dFpLM7CLPP2p8k6UJyWeXFzP9VvzcNv35Lq
YLdrOg5Lh8VlykX2h/yug8Mlq5p1OxjcCtsTLQfmemjsW9ujrGFwj7/oXDgr
Vw8pbMN86WMYXNjRda6aV/VQWqmg7JeLwZXPKrd3XW6AY81Vx7JUMLhBdb+1
V2oNwK4p1rWggMFt5ON5tK83wEKDhcOh8xjc+acXLL7dbwDZ5SeDxmIYXCX2
9Ebd6wYIi86ovX0Qg/uswn+0mNgAZr/2Flz7OHE1mT9cYmIaIefQRqP7TU5c
g+37w8YrTWAi8t/zR5ocuHVRBfY8hxb4RCwjxJ1jxdFt5XAcFmkFQ7V2o2Cl
/Ti5f+bl+vnt4FH6USOnhw7XHiDb+VW8Czq/z9j/q9mFi+xtdFHnuiA79Pl7
UuIufHprcd4U1wX3onsmFp/twvP88ORVgy5wvJT65agCtf0w0ZnXrwuuSCia
BuJ34JPE+0O2Q12wYewyLNy8DUok/8J9St3wCJQu/J3ZAsHI5a0sSjccP3/7
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
lbwfGXof99eTXwb+Iv9TP7j3I9v9vQ84lZehpf1u+GuOfajgQe3delVqPGHX
iTS9jOh326fbTurLcGDWuIErjhH5RPro9egsg8+C4/JDAUYUw3fqQtTNZQg6
5RHBLs+AaiVeMHE+XIayC5pMBm/okFz/oY7Xj5ap9/nho1es6VDhs49RXC7L
kMcqxvpTng6ldnzl5/VYht/B4SbqM7TohSPjKUH/ZaBIn+TilKZF10v89U7F
LUPx+feOd+v+KSxe9ErQwC9D+T/RXNmqvwrmc6x32uqWwQrTmfbvzl+F0dBE
YZ3GZZB6Mv7J59Bfhfbx6lzdb8vwbV8/sctpS6HY+y/eqJc6XzFo90r9UXjW
4D53j7AMdE+KK+HNugKnprOkP9sKJPxwSLl4+IdCcj07y0XOFeANv+R22XZV
QfpCHmkNuwLbR8ICWj5SFK6eJGZa8K1AVnqjXB4LWSFkn5mQ4vEVEN9gr0gZ
ICkwNGrw0FxcgcJpWUN/2jmFjUtCNN73ViBWullXQ61OIbAEP3nOZgUuDtr9
eNxVqcAlcauWbLsCUjv1tmRUqCDD/+bJ7UcrYEwZNCfjHyk8+sO6fvnpCmgu
9D2+RVtXSyr9Q9qOpPL8vBT7yZHa8VPdfZ41KxBd/knKpZ9S+2GZ04v+ywro
DbIFjy6s1lpm6Yu+ql+BEdrO5dmXP2pJx4c8kr+uAHH/z2eWRWu1G4cn/2vp
psa/sSS1R/hVy8m8cp9rYQXCVQ8ETYb+qb1C2L+Tf5AMv0OXPWyZaPEH0jUy
5DnIINQ8NP71Oi2+3SL0agOGDId4IgsH39Li9SfYUgYOkWE0jEYhEejw5v3c
V3aEyKDGkaU060SPf9ogHKkhR4YPBA1XrxFGfGESHJ83I8Ody1blEzHM+F9P
fu23sCDDFvP0i4lBZryc0cflibtkcDe1O/ngJAu+mp29ZMiGDAxqLEWfCljw
X30nFducyXDibURUE54Vz3T7tYi6GxmeKhG0bbgO4rUuXDnQ7E4GbGQZlkn3
IL57La8b/4wMoh+Lb8SPHMRjOy1KL/mQQT+aM2jzGBveMJs7vtKPDK78CR4Y
KzZ8fND3p+cCyHDa8n1UWQobfszS605xEBmUjQwU8tfZ8EfgjPLpl2Q41iJO
EeBjx5sfXhDNDSVDWx75jcNddjyhT5uSEUmG20c3nFnH2fE/VAS83iaQwUOm
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
G0GW9X//VmG8hS/X3VoV/Q9EaU2Y
          "]]}, Annotation[#, "Charting`Private`Tag$18636#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.35082, 0.595178, 0.853742]], 
         LineBox[CompressedData["
1:eJwVl3c8Vf8fx4lKknVRJGWGCFGSe877ZmVmJ2Qk9E1KVinJiszIzoisJCt7
71FG2Xuvey/32pRIv/v76zyej3M+7/F6vz/n8/7wWjno2RyioqLKp6Gi+v9T
3YbQU080RNE3jzvX8taAVpHryRSnDEj4feKI2lwD6eS4xCJOJdBl0M00v7oO
Gl1DhUmcBuDF9W/VpnEdjKx/1URwWsPVuOvV/MMbMCHxRjGU0wWkjhE1Io5t
Qwq7tn8Q52swLfxdQ/dqF7zpis4HckbBa/5bl/6g1DjRG+8CCp9EQYXG8PBP
G2pcr58DcawtCp6zPLuQFEKNE6AR+3LxaTT8MS//zT1KjWv9m36xvzcG3vXO
6aa7HMIxbMZcPhvyHhrqbAUffaLBxU28UCw5+ADXht3i56mO4K5zG6dPGibD
fqjJ2IDgEdySiexhutxkMLBSlvmqfgTHQ3p+L1c8BT5PP/wiEHUE5/DgiiDV
eArMN39S2hI8imO1zs/KuJoKPnldyIISHe628cf8tfV08B1Z1cp7RI9bHTOg
T+XKgLxAM7e/IfQ4f3M6G33FDIj50I+TzKHHFd1z4CqNyoDHObm1sESPY3yM
+LnLZsK3n/UsVDbHcS0+IyZHPD7BhbzrmAEDBtylHJYj3HTZAM9m9Wy5GXHf
L7ZYdklmw4dbn842yDLiLL+6Vb0yzoY/75yu7Oox4kJLp57MZGdDZKlKElUg
I45QnzuWqfUFykN2Sfc3GXEfBtS+SkXmQLvcotqzBibc8X/ed27w5IO/2qjf
QAozLu6BkbmYSj7E6deM7H1hxgn0i1myPM6HWKmE10xlzDj089C9sZp8UD5W
//WgkxlX8TmmpOxiATD+5bm694sZR9YnVWv8KAB3jfYL1uosOJljQwg6WwA3
7abZTA1YcC9qG2oldwrAtqi4AjVnwR0Via1n5/kKUq61JzsdWXC8B9ebpx59
ha2/3cYHsSw4w6zYDucThRD6tEq3apoFl2jmo2nLWwgkYlbXCyILbpb1Udft
y4VQ/Es5TWiDBefgofATMSuEnHY/dUUaVlygHrn3aG4hML96cSZcgBVXs68w
mqBZBFiVaX7Xe6w42kJx07eWRfCv3iHrtx0rTv3+qXEvlyI40XHR5D8nVtxQ
D3nCJrEI9nOZrjN4s+LWM+NmJEhFYM+9dMw2iRUnqLtCaAouBvGUw5F3e1lx
XJ43rt3/WAzBAb8YJEZYccy5KcH0ZcXwbD5JbmGKFfeHTv+i7mwx3HH/XXyc
zIrrri9znrxaAhLdbG+uH8HgWlaYW7xvlsB1AR6CAQMGV8ltxyFoXQJTCYc4
dFkxuAw37oqHYSUAautEGh4M7oWk98HvhRL4NHDnj74MBudgPqqduFcClUvh
qnlyGJx1iPRHYCmFMd6qkHUUg9MmLCj6Y0uBX7eJSVoNgxNIUQ/ERJbCM+rw
ytQ7GBznj7TR0qxSMHTqe6J8F4Nj3N+/YFJbClqzWgY9NhjcrlH+jxRiKbib
vW1Mf4zB/WBiY7uIKwPCOzVBeU8Mrgl5ZNNjWAaHQobFhH0xuPKHraUuD8vA
/crlzAN/DC6tzc24KqYMtCUesv33FoNz85z4oEoug8uPObfEEzG4R7lX1pYP
lYM1jvbD/WQMzmos7HrYqXIw8xmmD07F4LRkFeYHFMvh/RND47AsDI5vNVPk
Xnw5wLwxXVgRBnfyDJX7kYJyyI08OHKqFINj0DDu/NxSDg4/7wgGl2NwvzKP
O6ytlUP7/T8bEjUYHKnfuj7ySAW0+npW3a3D4GYP1bLIclfAuXHVQY8GDK7T
/Emxx40KwDPSyrq2YHCNId8P85pVQJVqcKxOGwZXVsln1OxUAVv5Xp4c3zG4
VI6BXfoPFSBvkcxt1YnBxSpd1MgrqoDdbylkfBcGF+L0JlH3ewX0DNZ53P6J
wT37IQdxWxWwx1PM9qeHovfFkoXvdJVQuafpe7IPg0sPlQzZ466EEycqU/j6
Mbhr5C+XxKUqocYf8/z0AAbXo3l+xFy5EqIDQ08dGsTg/stJ9Qw3roTBsWfB
gxQ+OM4j1PioErI+IpNxQxhc1MP3nZvelfCN3eaM2jAGd6GDzVkwphKuKIQZ
4incKBrOaZRdCacqnkU6j2Bwt4OO1wfUVsKY1tYcmcIrRH/byt5KkP+xpX9r
FIPzUzt0grRYCaFVPms5FOb+7FF0Zq8SENqG1nUKF9LtGmszVcGdmuU5gTEM
TvU/Fypv/irQHDcyVKHwVNtqZqFsFRSsOQnfovDT8w+15jWqQH+y0c6Awgxv
FjfZLavAMXZB5DqFUxfvxt9wqQL6oXBnbgrLqUzgngdUgfbYO8NFir/ujNv4
7ESK/XNdEx8obHu4P3S8oAqauFAuFQrvW2vLMLZUwdHNnVPjlHwim9tHYaQK
sLhzBEsKiwqoeDuSqyCh6Xd0P0WPet+G82nU1UDiH5CUpfCtOeyPfvZqkP18
ti2AoidZodzliGg1BPw2uv+dovfrVOnTV9FqoO9mPbdLqQ/XofyGB3rVwN20
++8khW80ZDB2vagGocnbT/gp9Z08x1ty8LYanH8F8jD3YnAuXommkmnVUBhw
W4LUjcF9hMisyI5q4PM+VeL0A4O7msyo3TJVDXWHLFTPUPrpx0Hg9s5mNWjl
kF6UdWBwezVeCibcNUDz3WCv8hsGF3FmnxAsWQM3pU/9J0DpV2GPZ2E1SjXg
LLn11YPSz4bYx+PnHtVAd2rgaapGDC6/0vQpvqYGCCPEf8qVGJwK1xA3Z28N
MJqWMEpS9s/4c70m9cUaiGVzek5P2V/H5NSY8xhrwRE1TQv/isHdK7uS7WJR
CyKST5nnP2FwfzgKdTKda8HcGt+il4HBhT8V/zX0phbW7vwzLqTs55rLAkry
BbXwLyfAUimJsn+LWSapqetgYzexsuQdBncnZM9gnqMOjt4bCH5I+V+kWi90
tIrVQUzVOVnmYAxOjL2iIvh2HdwodHQSeo3BKTy1jGYvqANGhcnxAFcM7kqi
UWaURD00ZziXXjXE4IwDOmf8rtUDF5b8YFEHg3vpcv3MM+V6mIZ+o9eaGFyD
5oUoY9N6sPX/gn2niMFp/j3w5nlTD5UDGynrkhjcXfNMs6zJeiji7k+fpqPU
W/30+/fEesh/3RiTSIPBZV4J7w/aqoeu5FMX1Q9YcSTGFxqP6BugcKYw68Um
K+5pnZbcpSsNcKK1Ukd6ghUXcm6brTqUwu+fRZzMY8WVzip2/sQ2QqLY4VAt
FVbcoKr3euiNRjidHcgeDKy4nbxaDk29RlA/lRJWc5UVJ+sud/fb/UYIRlry
qS+w4soxEjv1EY0Q38R86BgTK65CietcIaEReOVZN4UGWHDVmWvOUVFNEB+5
fUbWhAXXaJd02pjUDDfw37ZVNZlx20IIU+6jNnCqjWGIlmPAHdr9wnxasB38
o86LlqkcxV35Z1mqn9cJmXr0RbMDh3Cdr2V+tIr+hNgu9SuXWv7CNaaOQ+8u
/4QR4eetXBl/Iev9XVlT3E8oyjC/e9LvL/jmvU1ZNfwJQhahRE1lyvfDBKdT
3j8hkudEbHbrPmRdSDppN/QTTlSva1/r2gMFok/BEYVuuJGcmL5K3IWz4cu7
n1co7C85JXVvB2rven4u3OyG3NbTxqLqO2AujTGu+t0Nx2SJXy5L7UDi4LXy
zkM9EPfm9eTrf9tw6kzQ01WOHtDmbvY+nLQNrNnCmzLQA+YdnIVhY1twuNmG
VBfWA/xzIvENtpuQHr2b8C2qB3K/lqBsOpugdD9Uo+d9D3hFsMU/l9sEH/qS
7Nm0Hli1uGH3kmETDnRoHxwu7wGdtss8VkUb8HsidUF9ugecr21vZ9NuwPKv
qckByV7oazlF4ihZg9L7YY3qV3rBRPSEJ23yGngNoZl18r2Qk/nK9WjgGnCU
JT36rNILpjeVHbXM1kDhqen+yzu9cG29e2L4yBrEbw1yCgT0AlPhxPEfVSug
ut5l4DTVC3se1BbasiTA3PW4ip/vhQBW7Qs2zCSY7BbjvrPUC2FZgrlpxGVw
KQieU97uhcH791/HJy5DsoOaE+fxPmh5JWr+iHYZdsjNYfVX+kCsjlEmZowI
6UtV7Yxv+6BOTfn53U94eByrzW8X2QdyVbbLtP54kFWac2+J6wMGhSCGLms8
tCfRi79M64NbbyppO/jwsK5jHEYs7wN5Qwlb95RFQMt29Jvn+qDNot0lPnUB
RnylJp7L9YMSpwffpYY5SJVsuTyAUliC5wekz4H9xO23kkr9kJs7peHwZg6o
ZL0Af7MfEvox5tI350Bo6cdHA+t+wB38xGpNzIKLjr2tRFg/4BXfVRVSzwLj
mU+r8/P90HCSHPLeahpwt3wn5oj9EF1z6biFxjQ4hVl0zK70wwdckwbITMMg
9alP07/7QYV+vFH7yDR8WAwwH2cYAI/6H2l3jKbgYoFdV5/MAEjFCtmm7EyA
luLFL42vB8BL9scdKdMxePWS/n1D4ABEyx0GHukxKChZ9K9/OwCvYi+9kz8+
BmzCyVa1cQPgXj04e6R6FMYZmLkqcwZgfaPl+9jZUbAfXA/42j8Ap/oCzpuu
DUPIgxLbFIFBYLIw044uGoQlXG7AcdFBuHjfRfvO20G4cSoj+6nEIPi3vbh9
68EgHGqLWtG8NginRSUrZ88OwnMBl6e72oNQw20jZRQ2ALZTl/z13Achum2u
3edZP1w3LMig7R2EE5yKJ9487IUPYlltDkMU1lTY1dLshX2aFOLo+CDgsC9K
rov3QnlhmPhX/CAMn/w0nrfaAxeZHUrM/g4CJ69NUvzTHuDuEG8pFR4CMeXd
1dCQbtjBfZn/z3MI1jMlzl/K74Lq9OWEZ6+HwDlaKjD/VRf40Inp+wcOwZlz
o61PbnYBY3dOQ1rkEAj2i+TVrHRS/ht5HyY/DcETsoHg80udcMvj622D7iE4
NnP/qGxrO5RUlHUC7zAIok8vjnJ/gxdnfvveFBoGcuWDOze22gDnfVXe7MIw
6C7x+Kx2tEGnasXnF5eHAUdC0lfd22B+qNK/RG0YZNmyRz5NtgLbTg3ugtMw
GO61G9XktYDLpeZijqZhCLWIWSl41gS2MudS3n0bBptnhG/i+k1w+8rLYIYf
w+BZl6m0eLEJ5K/JWB0aGQZRhrfzdPhGOKSQzrSyMgwdUQdSDCaNEKb72q6F
awRSEG/FNvUGyH6idM7FaQR+vKP5fPC5FhKdUo6vPhuBYILSSPnjWgh12d95
4DECohYiUUPStfDErbjLImAE7rzve4qrqwFZLwF3jQ8jYLPwOqtgtBqaw2gH
+dpHIP7YA5UIytw1ldcc3MM7CoPDSbWFu2XQTaYlXTo/Coephi0G2sugXkxZ
M0psFBb+C9tQTSyDlOwWBiPZUXiWv3qSlzLnW2W2ho5rjoIQ705uQHApLCZ9
C8M/GwXVmNXf3ZIlQA7pjPzbNQqcZ9cr0cJCmOxg2DLvGwVd/k/5GSGF8INe
y6B+eBTSW6+Pad8vhLyALjbfuVHw4TIA+zOF8OT1j2i63VGwuL0tXhlCuQe6
d8diBMYgx/JPtf6zAtiz608QeUFh6a3j1Zs5YHDF7N1FzzFQEjiIn6zKgRzq
RX/p12MgItXjc/d1DpjH/XJE3o7B2w+FfP4cOdDQwqWqmzoG7eOfJeXhC7w5
d3fLrX0MqFICjo19/AyYQbLmN65xGD7xaU4lKxPsPz5V6Do7DoPC41b27pnQ
bP9PtldgHIr0XZNmbmbCUxoW/vGL40DndcGkYicDRiRldlcVxkGsRTCLWT0D
koNfZJx8OA6+KduXdw7S4ML1owe2VeOQKJEt7/bhIxRkfzk/XD8O0gUrKoXP
PoIMm46uWus4lJD/KsnpfgQsPi79Qs84GHxPoxU7/BFuhopqrC2Ow/xjI5GY
JyngNKIV95x1ApZOy2qcyv4AOwobDUsnJyDXxm6iwOYDuOfELJuemYAZ8/pb
fbwf4LXnFIoKTwCt2h/JwoQkiBF0XDiETkDW4iXJmuhEqHCMuhTyYAJ6FViu
XUuNB3Ts6p2/jycgeey/bWrbeGhUmvB77DIBT70SDpRE46H9pNCIjucEnCpa
9ZErfg/jNWWe7NEU/0e8bjV3xQEV/Vjnh/oJiEsWcc3giIUbqbz3v56chEUd
2lu7u5EgE8co1Mo9CVHl+68yfkTCubd786O8k0BmqcF8SouEP88HrGjFJkEj
xlcs62Yk5OoGmhvhJiHtXcLBu6wIwFCvG/79bxICBAcO+z98B1S/JthYH0/C
eItUr5LyOyCR2vuEnCcBUa4+rXP2HbQOp+vqeEzCCb5XR9X7w+F5wW2ttHeT
kD5/O6b6ejhMWdQrqVVOwtOvrDH6Bm+h0zCXxrxuEoRYLk/MM7+Fco34Rqfm
SbijXDZx0BUKEbIuuMQfk6CoJyb5XS0UlJmEsauzk+BnyuGceCMEvtSGSUcf
n4KE6ti/9qZB8OyMBd/MnSnQJDz893LCH6x0JG+N352CzOCXUfez/eGmL3XQ
kO0UfJIVCq185g9CxLT1ridTEBQmkReD8Yf+YkJ95esp4Px3GYPR8QNJTSeL
qJwpSI75qe8+5gvcnoqRYV+noJIBxx2d5wtHC9nagkqnQOjCy5njPr4webLs
onf9FHScn8o/IeoLIXN7fx/1T0EGfXaZ9isfILzwS7yxPwVipse75GW9YenW
hf8+Uk3D/uxB3iCTN1iuYQ6dpZmGd9JM0EzwAg3+hctcdNPg2EL7JyrBC/gC
3yQxs05D+nj4kX1aL+g26LT/KzgNXD9CT1V2eoAYyfD4kNY0SI1fNztU9xzK
DTTrgnSmQSb4vl2kx3NQrFFwRvWnQU5P0qoG+xxM3kqMZdyehmL1Z3RD1W4Q
KHnsi8u9abjx8rnjQdMzWHSpVmd9Pg3uGUXyTGRXcJooPGhxn4Z/bIsJicWu
8Ff5c+HzV9NAtSTxPf+lK7CdjOGa8Z2GGLFQ5nuMrqBY4bCU/3Ya7rL+fTwp
6wIpf/mCtNKnwUbqEMfVVCcQs+VEqT9Nw27z2tUURyco+8G0Ufx5GhbD8sU9
rjvBj+R9Y+78afhZ4BT5btYR/l4fFFmumAbaB++X6EQdwcQ/8HvAz2mwa8hw
q4h3AAzTGl3zn2lwGIhLTaq1g96aoDdqf6fhbZurbbe7HUTYCx75+W8aFKpL
DJLk7IC13YRmlHYG2B8dSaMqewCsfi1/VxlnYFOXTby9/D9g3ovfOM0/A9//
6yk1HrKF7s+XHT8KzkBAxDnTxCRbCL/dvSokPAM/x2IPbKxtgan0MFlKfAYk
wgZbAjdtgNHxCf6G7AwcjnxouXXSBhjwyuPOGjPwn1HNmrXbPeiMnjbZ1ZqB
GkRFKlrlHoQouY+80pmBr06d9vLs9+B4asFgoOEM9PJOjywUWQG92emeZIsZ
OGUxwBW7cxfo+tZaOpxnIM1MbyA63BJo6xLy+RNnYHpJ2dCB9w6MYpVUpz7M
gGa6iktkjynkV5Km4z/OAJ2g0VSgjymYlCKsrJ9m4KbwcMHCogl8zZ1yoSqc
gcd0//XyVRiDeSL/tYm2GSg2crt+wscIZLg6e+PaZ8C36c1rR9QIjsW5PDTo
moEHKrK6QXu3oDiyJbGjdwY4opVSe5/dguPB9/9VTMwA77u3hW/dDKH8+Zfm
mM0Z2H54WVD5vT68/aVvprczA1+Ufw2KWurDPdf97RO7M4CrXj3/5bw+RT+t
834HM6CBdchyLdcDm/9WA52PzcJmY+AC3YwusBpJa+ucnQW/+ngOoqYOPJSp
GjmmMQv/dOzWnRk0oL57IKdcaxa+Fgg609WoU+q85nlfZxZOTwudePpYHeoy
BIVaDGeBc/oDbX+fGmBOhjt5Wc5CDz7GzjJLFap2rY//cp2FGUnXvu2nKsAc
4zmZ4TYLWXt36IVkVMDmUvxXA/dZeH5U0ZppQxmYHv40KvSaBREeFt4jT5Th
3rhc+qPgWeBOOHdC10UJjtcxIvMps1A/3lXdn6gAlqYizJFpszDxM+xNo7UC
lPxSnLueSVkf/K9PS1wBLCSfByZ/mQVEajjySv11KPo4N2BSOgtKqewrAmQc
mL4uf9zTMQsCRzlnlZtRKDjXd93rxyx8T0/4bmWLwuEaMptEzyx4jkcfDz6G
Qv42X1XI4CyUfmP/tKGHAM390KOqM7OwvW8517tOObHVrFJqdyj5TXiHvDOT
AxkxXhR2Z6Fhr6XgPpsc1DJOj9XtzYIZp/fcoc6r0N1ndrKBag7WJQo7vZCr
sGVm/LaJfg5MbMvobUVkAXXSefmNZw56zp3bRPkvQ5sBE5ca7xwYZVHzBy7I
gI7sj7Lv/HPQGNzy2T1LBqz2NTbbhefARXiMS19SBt7437DrujQHgjQffyfd
kIbuePR2r8ocnK9iuKoYKQXGHn+39dTmoPBXSp6+hRTMWlRH9mnMAXtcXtrm
BSnYErj2s19nDpZLK2+Ot0oCZ/5llSGTOVh6fEZdhEYSrJrEZMYfz4EprRcn
jYg4LGcs99xxnAPm5yM533vEwCUg22HCeQ7echcavXYXgzdawl8m3ebA7BUn
prPnAuQM8fPN+MxBC+6hwt1AUdhe5mJejJmDay9V5GL4hCEqCd+W+H4O3rRb
6Fj0nQdp7WJP/cQ50BnZ7jztdx4cC7VW6z9S7H8/IWC9LARkN68fCTlzUL2o
xUpoFISFw4shuo1zgH/M8ME7gR9elxUq0bVQ7m0VjSnqJvzA/8Bzv7aNYj+U
vW+Skx/udp6yF+uaA8ViywSLBD6YiNDQODo8B6fPhU75fuKFgbNfj9WQ50CZ
+F4X33wWXHo8GpzX5qC+Ivprj/FZwPiqPxfdnIOg40n3GNd4QHdxjhD7ew72
BV6Bwzke6Mrh+OZEMw8pvmtZ1uHc0CL30l+Ycx54es3XyJ85wXpZFZ06PQ/l
z67kX9fjBJok9p1onnn4c9ZNL2/vFFynyrehEZgHZ0W5qy26p6CmdUZp8uI8
rEk/YQmnPwkl+jdoopTmYfFESN/SFzYI0Cj3474xD6lDhTWsD9jgjqIIXYba
PDg5SLkdPs8Gh6SPnyi9OQ9CXgwOChkYuMn6k2P49jxocNPxTGSzAqH7lij3
o3lofWJXXTPMDFXf2nLSHeaBzvikacRHZnhbf1VC3IkSrykSzfyQGWQKuGTQ
Z/NQqvJZ9RAVM3iHTSKW3vMQ+8/m2Yl7jMB101Y3PXoePu2CHt2940BWHuoT
i5sH+5WvHy7RHYd6RPVWSfw8dIuszzzLowdbcVHT1mTKe65bL1UOjkERw4o1
4fM8DA3UXkjMpgPNDlc3sdp50LsddOAnfQTONi3+Ka6n5PNDJGKNcBg2Ko08
kKZ5+DL8IEYl+TC8z5bzufltHnJ/8fFmMx6GxcC/wU9654Ep9/2Fw79pwFPV
L7l4cR4MT89V9mxQQ6/5f3ckifMgO+g0vFpKDQKuGpw5y/NwtEOu9bs7NbR/
ZIlMW5sHeTtPz6yj1MC2l+Qf8WceHufWfxo8TwVZuaWPnjAuAG7j/A1r5r/o
n6b3oiTmBQh3ZHCRyNtHtUZf4u9jFkBy9nDJJa19dOOI4l2LUwvQ29JP3fd2
D8Va/jS4ybcA9wI7Bk6e+4N2sxLkxa4sQFv/CFL57BfKJ9Lx+9PVBfARf2T4
4Pwv1BXySvjlFyD18Hn608M7KJe9i8Rp3AIMqrULv8DuoNYtVPz06gvwWOUP
bz/zNvr7GSc9wWwBaH4k/nJb2EDV3+633rNcAMGx3+M7aRtoUvqU75TVAjiP
FHir39tAFXoy/g7eXwBOd8XJ/+bX0RDRS+stjgtgYdx9A7u2hvJOqA+n+S0A
q83Ne9q3V9CgRvl8w4AFMK67HV09T0Y3Pon5Hw1eAM+UV0rfnMhooxOjzMPw
BRjIdLHPiCSh1nS9YZcSFqAS9f8xi19Cs6SNbzQULIBoq6bmwQAeZeZU53Eu
WgBv2bb6ped49PnBtW2B0gWgjV5TFDqLR9W/c6cFVC3AfJ9IjtujRXTZfPpA
u3UBHJmOhrBwLqAXg+6XTo4twCXt+9QuWbNojMPt0PDJBdB8ZTpsZDGL/jNQ
s1aYWYDYI8aZaidn0e6zF1gzFxeg9MnZeNWgGdSxZOXRo/UFOMIm+1bn5TRa
PO0quH9kkdK3PQmCpydQ7lbb/dxji3Bb0qzX8dM46vfFqM+CYRH4ipOTHS6P
o7eeynk3sSxCuImd4n+3xtBfx/+OB3EvgvXJ/u9fvoyg12RfR3FeWgSXJD6H
zx8G0UErzitJMosgdZPWxVNtEHV+mzd0TnYRLimJD/huD6A5C8NcwthFyK8J
2j+qO4DyRIl/vKKyCFTqK8UR7P3oofXBXH2TRSgra8l71dODfuC21x66swgf
X2VJvQztQeVVqddNLCjxBeaHPVbvQV2SL8hYWS9ChQbzH4G2bnRRy6vyyeNF
4CmQZKCO/Yl2ZIu0hfpQ7BEC3qT/6UD/G6z9j8VvEcT5Y5XM33agtIcM6KPf
LEKCYKVpGn8Hihq/0koMWQQjvVH3Sr12tOBoX192zCI4XzttG9L4DY2yfjnd
lr0I7qnjc07zLahkOIuPRu4iZPzn8zHobQvaVZXJ/zN/EWiZNgOn5VrQI5ge
28HiReBERD9cjmpG3RoEyfO1i0D/NUWKyagJvcPzc5e6bxFMa9H2A5YGlJHT
qaRqYBEmVT37bb7Vow0YdkfX4UUYzMO6/vasR4WOmRIIE4uAax5UOrNQh65u
Lg7+JCzC1lKjE317DZq6EhgRuLwIdUSM4AfVGtSAKHZTcYWizyuhH0rfq9Hy
SaeW0s1FKDovIfCluwr1+X5QlHSwCIVz6duHflWgMs0fHYyo8fAfD12GgV8F
iq9VusBCi4eja01WL9krUM3ioNTXx/CUc3g0Rkq+HGVP5nj3kA0Pdpvexo4J
pWiWy8XHcqJ4YFK76B/0uQg1cegR2RTDQ/wpF9rTekXoCTuXhRwJPCRW8//k
2i9EnSwq75y7jAfP198KdQ0KUXl1FY2jODw0ZMFJGvav6IoS8UiDAh74ct60
On8rQFMgpPGFMh70hSUzhD0KUNrLvXIr6ng43FSWG92fj/44ay48YIiHmPd3
27szclEvLur5t7fx8DhQqHn2bC4qzZ6erGqKh770UDvJxBw0jn6Jo9oSDytR
bVSmCV9Qq23Xw2kP8aCGd33yp/Azut0eOvvEGw80yU1Z0rhMdPz4wH/7vngY
4WFJ/DadgTZqcq++8ccDTNMoTvtkoOE/svc+BONByDq5xKsjHRXtbWPrisbD
R4GCWeKjNJQZw5RwOw4PFS9jo35xpqG/9G/xzsdT9NaKZL/Tloo2D8yL7yXj
oXZIj5pdKBU1H6G+IZKNh+pgcXzlRgqqxKXWVZyDB5Fmuq2NrBT0gmm4Pi4f
D9bneZNMLFPQ3+M8lkbFeNC8FUnUzEhGI6bln/vV4mE4fE/7fmAS2op3/TLT
iwcV7eshiyXv0RzhGqlHA3hY2jB8e13pPRr5gLb89xAebul9cX/WH4daLkc0
M03gIbLKjcroTyz6ZyV/AsHjwSH32xiPaQw6LfHr3nciHuju/UgO+hWNtj1B
lwxIeDhE5dT2Pjoajdro3Hm4TomXpuROwGAUKrFDZIrfw4PZ1YmIHbtIlENW
KkbwAA8MrpjKTkwkuv/MjfsrFQFKd8fH2Woj0PbdIyLfDhMg+mgB4zxHBGr9
l19hh4kAZ4ISPs4Mh6NxtOYuegIECOAQY3CUDkUP7p283CNEgF9TCY/mCkJQ
66bubW0RAuSEfer3kAxBJX0Un2ldJEC1eoEb3ZVg9Ns/4ReqVwkgfG3nfohx
IHrRYvZa2zUCxKkqWxjiA9Co2oQ9ZYQA/F+lmA8/C0AtPRg9FBUIwMJ1Q/pP
whv0159NT1STANm11+vt9/zQOya5uJqbBJCNHv6VEOuHNlbYUmN1CbB/8iL+
2WU/9K3biI/cLQKc+ERY4nr6GhXaqfWTsSTAHboFmlv0vuit9cBgURcC3G19
ckTmuRdaraOo+fkpAX4n+inJinuhfAX7DMLPCfCu/5IMQ4snuvLY4a3gKwKY
ZiulzX58hfqRDN6dCyBAl5521JjbS3RJg1EvOYgAYuzFzC+23FGdL22sPKEE
cPhxb9rcyR3ltrsWdTqCAPULZxcGXF6gxfizsRyJBBDirTd7EemGct0YMYr+
QAAmfn0VjXNuqFdmxCm2jwSosFXZ4cp/hmraHI5nySQAjnrjSXTvU3R+dimR
oYAALxSSgF3SFcVMlqQeaqboW6DcEoc6oW8ZPDzKWgnwPHnG9f60I0ovr3Tb
/jsBbN99NzlEuWEeius9MfiDAHZcdi3u3U/QDd1Vt88jBNC4EzQpv/cYfexV
qm8+TgC+UH++cePH6FKex0XMFAE8/1QtxlY9QmeOM8y/nCeA/Nnd+8IB9mh3
i7C2zioBjh0bFBZWskM1t1ZFDm8QQPvvsM+ZygfoN74y2sotAtDWsng0XHqA
1nkqV/L/IYBzfvyVuQv/oXlyVoK/aImgxFi9dA1ri4bkJuwlcRGhVaUr+2aH
FUo3bjWod4YI3lmOD6psrdDX9KJfj54jQpyxZ7wgrRXqfr/c1lGQCEftZp52
Kt1F7XgHepQkifDF38DtW7kFuqidmLN7iQj6bD1/np6wQK1e3XuTd5kInJz9
Gu9szFHjsXXsKXkiPOrW/9R21gxVjWbMWlYmwrVTV557VpqgzU0DPimqRIgN
Yg38IWyC4jYSzQw1iMB0i+fWiXhjVFb7AqZOhwj5zCIIr99tyvmh+irClAjT
7/7M8b68hR728DaQcySCHjb2o8asHlq8TtqtcyYCVRSL1G0vPdTa9nayylMi
cP9Z+qp8Tg9t1pZY0ncnAhJVM5lio4u+5pvwfOxHhLAL8o8eHdZBZWJVBbff
EEHL0ffvhXva6Pzx4nb3ICI4X7T/UVV7E1XaDmIPDCMC3t4dY+qphdJ+u/ol
7T0lfiPJ4n8CGmgxNl1HNJEIjbYMq1+i1VHrr0w7BR+I8KpjLFLgmDraHL+I
q02j2L/XFazyWxX1fRQ1OJxLhKXu+knitgp6CLNGzdhIhO3U82kq1opo4RvT
T1HNRNC+d+s6zb4CarXfqnm6jeJv2yKiN1oBbVxIihXuJAJmcDfT++d11Kdc
Q1xxkAgn9e2q2E1w6CXxst7vw0R4T1rpNKHGobMf+dx0xojwW2rU+KcBoArB
u41m00SQCHPYsqdBUWrzT7fdloigqGZu7BUgjxb0sh4ckIiw/Jd9vXj9Gmp5
41Wa3yoRPP5t3v1ldg2tlzRcidgigs25q9p2IId60dC8zj0gQjyXWcpTAVmU
6rN5/izrEiT7RLk+eiiNtpKGHiezL8Gx3M0R9p1LaIik7sU7p5bAbv5JsJnv
JfRkuWLuwJklwKhxvIzIkEIvtgl/+Sa8BM1q1W9PHpVEt+hT7fwuLAGDt2LC
C3UJtPLmaVGFi0vgOWinLxV8EVUePPG5SnoJvvqL+nhxiqN3FjYy89AlGN+6
2n3uvihlfre3fXh9CWxnRmKQZhGUYL8gKKy0BDR7sq0sgiKo89ZQ+ke1JfCw
6B98u34eDaKpSY0yWAIXVkx3WZEgqnPjipWu0RII6iUu/ScmiHIE5/MymixB
3K2ZsqtZAmgqa2rKG4sloHKIhtUsfrSC982HF3ZLwDH/wBLfyYu+sqEyl320
BLmWX4Yr7/CiSp+fn9lyWIJPoeahF1bPod2S9omPXJfgvdYxzuzT51AC6MZb
ei2Bl3fiiAD/GTTPt934jO8SkO2ZQgIecKMubYqco35LMFubF69RfBr9d/NK
nH7wEizYx7WE3OJCOcxPx6jELIHjdFexVcdJdPxjlCHN+yX4zlM9J3DpJJq6
cIK9PmEJ5N98MQ5N5EDFH1FFyX1cgk6zg5C/7uyo0suFd2I5S7BtuxYueg+D
0teb6xLzlqD8fSayPM+KdtMMM2d+XQLl496CpQ9YUdPg9rCzZUvwq8hXTeAl
C+oUnx/K2rgEOi2DF9j8mNCy/fg3jc1LML3StYirYET3zf29ndqWgHVERUFr
4wT6ht/MtbdziTKfjA5FOTGgiTn0ZhFDS2Bs2C+zlnUMnWHcuaUwStFXM11f
iPoYKuQ4o7MxvgTtSxyrdmZ0aMHlciW92SUQuvfLqIH3KNpSayPGSl6CfY7f
+6JDtCg9r65Q4+oS2B/eMDbWokV1fLHnnDaWAJ+sabDYSoOO3sCw9f5agnS2
nc3OpkPoSnf93rtDy6CcUmpQOUuFSkvnbF8/vAz0TshKmyMV6hYdu7p+lMJX
MUEpNFQojcnjOd0Ty6CQmNI3bX6AnJo73cFyahmu67m9TdTYQ8yUj7Y0cC3D
1aDWUGLEHyT100at45llKAREa2ByFxGz/17Yw7cM7fvs1FyvfyPXt5/GvxNf
hvzTbvgn1DuIv5FV1HXJZZg+cZP5m9020lmh9Xb90jIscLCrrw5tIbdeCfjo
Xl2GgtYOrG7NJmJ3tPcBi+Iy7Ohw4He+riP5D2ruNSgvw28HqnBz2XVkqyPL
zFF1GSb4vs4R69YQz3BP3R6tZbj4STcdW7yKRHGKy727vQysJjs9m3dJyIj7
KenrpstAeN+atBK/jPBM0oivmy3DOb2HTSwjS0hW6ug53XvL8NNXo0rHmojU
XAigY3m8DOLlLlZGRYvIlf6TXRFPlmFGZPL3AvciUvDy0zs252V4FPkqnz9o
AUntauU65bYMgc6GfYYO80iAw2Hxsz7LYJNGpaRjNYtQn4peT3m9DOo6MxVM
+BnkRb1AKd+bZWhbam8YfzyDPGJRAqGQZRBIHpu/9WYa0Svy0RWPWQYhiaij
7UUTSIcpK0d+3DJkBzgYai+NI0q0qaOSCctQ891MYkZwHJE1bLgnk7IMFqj4
4a9fRhHuX/9c5bOXYffl5HTfyhASkxx2rSZnGRiPjqoEqw8hTKpn/6H5y4DI
ZWMeZQ8ih96jAQrFy+D8UfGp+tMBBH/NI16tdhniXPdHW+T7EMs5BouO+mXQ
M2xsFSztRUaDE/m1mpbhqfaK56Z0L9I5XpWj843SL6X4GV+5HqTw1Z9ao95l
KFePEHjT/wO5cD7Id6R/Gawy/AWK9rqQ9J+cqqZDyxBVnD7qJdyFxJ6T6zEf
X4btF8dpXCM6kJeNz+ZsFpeBWSvwgD39G7JtdzQLT1iGszwVHslbbchjTKz9
g2VK/6VysLSqtSF3rUu37dcoeuh+OfaUuhVRObJ91OXPMvS8flVklNaE1Oe9
7tzeX4ZVPUPNKvYmRM6I7d2zf8uwzhfJOB/ciIhlSXO505LgxfvwegHfBoRF
3UnMh5EEg2e7d+ou1yEpDUzHr7GQgPO/Y+njaC0iKZdLXMeQoMp3RVpCuwa5
KUzIvMtJgm8SPAw5r6uQiWQ/P05uEtgbRSe5fK5E7E/yW/fwkKCPZzsyv78C
CTpizntdgAS8RauLrUg5wvlq799vIRJ81sbqabiXIVnbcZMFIiQgbfNKRdSW
Im3zfQnnJEgwmbbd1GRYgtA2qXFQXSPBNs3vQLfGQiTyGn6rDEsC8yihnXaR
QoSv8HWfA5Dgye66bVH0VwT3sS58SokEU1kj2o0vCpCfp8wcYm+QAOMxSNDF
5yPm4X+0tNVJ8HLz26DGTB7i4Xn5eJ02xZ41S9owKQdh+NVLfKpHAmV/wZ3f
f78giY+ffLtoSILRFuUmS44vSKXZF78PJiRYjZ7EXbrzGdmR56V6ZUOCCt0f
daZXMhG/otrJy/+RQO+3n5LYywyE7cKdGrIdCZaP6RXVtqUj0lyxL8yekCA6
qLjplUMa0vhOxpjdmQSibPpHTTpSEb1jvbJdriR45DP7QE8sFXnym2Eb604C
7YsKO9R/U5B/Dtl9Wx4kYPQOdHawT0He4m8U5niR4OfVNt2u+mQkZ9DHgduf
BM6uxp/7spMQYvFv4l44pT4POKvcpt8jbmIx34oiSUC7+ia8j+o9Qpcu/elh
DAmIph0c2sJxiFDkY+uxBBKEcd6p+xEcg5TQMyhGfqDUq2Br50FbNKLk85lX
4yMJ7s/ab+sfi0asHOcnKzMp9aWWsNBLjkTWCd41Tp9JUIcbVjy2GYF4WZ5N
FM0hwdf7b37qa0YgydomxvFfSbDD5cz9i/EdMi7e3fe8mgSGZvzooZRQJHmZ
xYOmjgSnNffpt7NCEKvP+kKhDSR4HPTC17MiGCEKDLmltJIAMd8We7kWiOTM
nuIT/U6CB+nRr3w4ApEnKSYdRR0kqLwe8VlVMQDZOT15pq2bkm/dXrRmgT9S
OXK2TaePBNJ8vU0ia36IR+zdJ6MDJJBoZok4fMUPocUsNJJHSSAl5SJwpM8X
YaEn3WdbIIHM/XaTIC1vpL9NnOUDngS25FtfCsu9kDg/h8rzSyS4KZipHCHs
hfBQbzLIr5JA7fcHQveFV8hsrUxp8zoJWuu5z8sIeSAZL59a3NwiQVb6efoN
4ZeI2O/dr3d3SbA7WpT/SuUFsloib7q8R4KFM1P3ei2fI4XOHrSuBySwlpp6
E+TjhsitUhkF0JChq0wmX2nsKaKyeHQ/7wQZ+NeK/1GNOyPH0tUyrjKT4VuW
XkvIBWek827wzUZWMkgFL/6b8HJC9CcYPw6cJMOib81TbqwjwpGgo27BRYat
S831hR+fIKO3IzYJ3GSY8HAPtGR4glj2s6vs85LhzL+z95qnHyECEUarfgJk
aAvQCezptUfw2u/jmM6TQRL7yXS46yHyuIN7mU+MDCEVzodKJx4g7o384WpX
yEAgPq29bWaLoF42cn1XyXDs12/pjjAb5BD6afaOPBnGY4J6JL9bIwEVopef
4MjwPr/q0rb2PUTzmf3krgIZmus6tvCJVgjT5bw3vspkuFZ7tXl79S4SUyA1
GqNOhh8Vsv0JnywR48fOvue0yLBN5HXoP26JcIuViGVrk0HnoPZRz5I5kvbp
qmeNARmGxzkXCPl3kIIPIDBvTvHvpcMpmHMb2XyxefTuXTJMo0NiVS1GyBWj
T8sT98hAxX3z5DX8LaSKialo6D8yZKB8bqs4Q+RguTHG4CEZEkNSbn52M0Bw
356+6HlEBtpxsxS9Mn2k1WvyeocTGWpYsAVvVfUQOrMIQVVXMtx1DL9eFK+L
aMipHGt5RoaBmAdjSxs6SPd6bnftSzIo0aXkvnugjYxZeVgU+pPB0fHsc84N
dYQHpBQlAsmQl/2siJ2shlieXhDKCSbD4fFhAdN1VWSxT3MlI5ySb8Io0Z/t
BiJcQNXLF0mGbiLD7sAlFeRhSHFJcjQZ2DbZI8BYGVlT4vZ4H0+GBP0xea0a
RUSat9uSI4kMy79bztv/UUCe/vVVikwmA+/QLekEVAHZK1k+HppOBur7YcTL
YzjkyPmqeK88Sn1f712Rr8UiajQOr/4WkAHLJ9c6kSiPhEzxWb0oIsP6jZgG
Sf9rCEtckIhLORmWPp/GPnl2FTFwQU+sV5IhX+nALuuVLBKjs7H2qIYMoV5L
V4TDriDcx0zK7zeSYa3L9k5JuwxisXAicb6Z0n+Wng0C29JIakOD5902Mpyk
E/2afF4aOf9C5IZpJxmuMF3bi02TQi4t/x64OUiG1vADV5tpccS1LaeiY5gM
GgwiL7g+iSHlaZZJqmMU+6+9YPT5BQS5881aYZoM2cteUo3XRRCvqy9V62bJ
cOHSasrJK8JII5ukGHaBDBKidty9MucR1a7YzctLZDj6IKJmR1sQCfqsMVRI
IoMCqw/y+aEA0uX3r1JildJvxdNquuH8iB5630dkiwylmzcvyGzyImb5V1jO
HJCBp6m72kucByk1+c3YTbUC0UlJHDFt3AjjkUoGX5oVuF4bj7/ieBqpv4PQ
EelWYEP5UU782inkFN2/w4nHVyCL+3SkWMtJxLGonkabcQW2/HF2+EwOhI9e
6V8xZgUWK8w/F4WxIS9KDv+9z7ECyo3u/+qiMUifZdsfLs4VsNx3aVrKZEVe
l6nvePGswNjR0K1WAjMybsWwJc27AqEzBJP3p5iRy4w/1hf5V0BK3igpNo0R
WbTWJWuKrMDXY9psPjXHEZQZs/zvwgq826bWCL5Hj8RW9RMKL1LiS75uYsp5
DFFlvT1/SmYFMKrJxz59PYKk1HDOdlxZAbMDn53JiMPI7n9jU6/kVqDllsmQ
oTctkl1nPjaPrsAAxie/xvcQcujhuZHY6yvAnnqiOCGGGjHlmB1UV1oBHnFF
44hiKoThkU1vgdoKHOgPStecPcBanzrffU9zBRK1xNRi4vaxNU2ELg7tFZCh
P/Fhj38P+5jL/vtLgxU4O6+2dsHhN/as42rzrDFFX+MXegJ729juNqd6VYsV
8Jbkr73WuIn15tmpyrNegc8SRebydevYS67Py9jsKPryKMrXja5i5zr2C184
rIDOv+gPweEkbBSfV960ywqQhm+SemOJWJXnNNkqL1bgLhOv4FXiIvbXT/+M
HM8VcGvpWt73mMdmCdF/ZPVbgSShmXPb2rNYE4/QRLcgit4y6ffcjaexx/uZ
4ybDVoCG4VBvp+gEtlo0KlIpegWE3h6XOfg7gn3kfTIsO34FLOyFR1b4h7A8
w/FBzCmUfD9CX1NUP/bnRR7/pxkrIC6mka2v1ov18vvoPZ69AkXswSMn5bux
RRpyaavFK8Bgz8aFI37HLrL0NB+qW4HfL3Kq7OObsU40sqFvGlagoNv1UpRj
E/bfVqIhQ/MKnKe73wm3G7Gnhv9bZP++AsXtEb2iuvVYjQ9UdCJ9K5B3Y5Ap
vboCOxxm2507sAJ9Jk+ty7DlWGvvzrhLwytw7a77bGBPKfaVdZwIdmIFbq2t
4fUuF2MLRCU1tPErIGmuM5cZk49FuGMw/cQVwA3LSzTn5mLbT+yP3SatwJll
QhU6/QU7t9Zmb7W+AqLf0zqL32VhOcos3rrurYCP26TpOZo0bFpWy60/f1cg
zcV//1zPR6xk/IWznlSrcCM64hehIAWr5vErP+DwKmwEk7xPKSVhXyqG9SQw
rcKbFWfTJJsY7OzPWrZG/lX4KPSAerk+EJtLOJPAqLkKOYTOhGjUARuQ5Gc5
eXMVQuo3zngl2GOt9ciCebqrcDnR1vidmB2Wu7q6QMtoFa7pcW3kj9tgg8JM
W0OsVsF4nhyKuWqO/e/K+3X656uwtVPxQDVXA8v3mk31aOYqjHu2v++O58Me
XH15YihrFS75aPFwPj6HHSHP9WZ+WYXCw3JM2zvc2HCjIjOVr6tQcfvb8ndz
Duw/UT1nv+pVSGGL2xLcP4Yd7wn7QNO3Ckk0AZd0Qlbky/1/3esbWIX4QqoN
x1aifJS8hUja8CooBw7n6mQsyGtkXCxWmKSsT/pK1D8xKV/p1vXdm7gKF3xc
NUzr2uVjxC+H6ZJW4cmtITo+qxZ5x9lEA97VVajjemdjTKiXF9a0n6rfWgWF
cNdOf41ieVrq/vTwXxT/PXbl8Wl58tMl8naWf1ZB7oZnVlt8pny1XZqE5N9V
iEuWqOWWSpGPPXt8+98/it4HNSJCajHy/wOgeMf9
          "]]}, Annotation[#, "Charting`Private`Tag$18636#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.624885780841603*^-10}], 
               
               Offset[{2.9406965017144153`, 0.5935520910624438}, {
                1.12, -1.624885780841603*^-10}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.09727392320089477}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.09727392320089477}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.09727392320089477}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.09727392320089477}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.624885780841603*^-10}], 
               
               Offset[{2.9406965017144153`, 0.5935520910624438}, {
                1.12, -1.624885780841603*^-10}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.09727392320089477}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.09727392320089477}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.09727392320089477}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.09727392320089477}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{78., 6.500000000000017}, {1.1800000000000002`, 
                0.09727392320089477}], 
               
               Offset[{78., -6.499999999999983}, {1.1800000000000002`, 
                0.09727392320089477}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.09727392320089477}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.09727392320089477}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.01\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{44., 9.769962616701378*^-15}, {1.1800000000000002`, 
              0.09727392320089477}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 5.223910557822836*^-9}], 
               
               Offset[{1.4330292237662214`, 2.6356075663558074`}, {1.12, 
                5.223910557822836*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.8863668383749146}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.8863668383749146}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8863668383749146}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8863668383749146}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 5.223910557822836*^-9}], 
               
               Offset[{1.4330292237662214`, 2.6356075663558074`}, {1.12, 
                5.223910557822836*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.8863668383749146}], 
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.8863668383749146}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8863668383749146}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8863668383749146}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.8863668383749146}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.8863668383749146}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.8863668383749146}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.8863668383749146}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.01001\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.8863668383749146}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 9.965274275233911*^-9}], 
               
               Offset[{1.056427595352337, 2.8078391577471242`}, {1.12, 
                9.965274275233911*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.2809149395895718`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.2809149395895718`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.2809149395895718`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.2809149395895718`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 9.965274275233911*^-9}], 
               
               Offset[{1.056427595352337, 2.8078391577471242`}, {1.12, 
                9.965274275233911*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.2809149395895718`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.2809149395895718`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.2809149395895718`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.2809149395895718`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                1.2809149395895718`}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                1.2809149395895718`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                1.2809149395895718`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                1.2809149395895718`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00999\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              1.2809149395895718`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.179797176524353*^-21}], 
               
               Offset[{2.099675678428352, 2.1427463791630688`}, {1.12, 
                1.179797176524353*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.4918201869540965}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.4918201869540965}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.4918201869540965}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.4918201869540965}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.179797176524353*^-21}], 
               
               Offset[{2.099675678428352, 2.1427463791630688`}, {1.12, 
                1.179797176524353*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.4918201869540965}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.4918201869540965}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.4918201869540965}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.4918201869540965}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.4918201869540965}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.4918201869540965}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.4918201869540965}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.4918201869540965}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.4918201869540965}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 134.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-1.1433281479206427`*^-9, 4.964195854201691}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.01\"", "\"Old:VG=0.01001\"", "\"Old:VG=0.00999\"", 
       "\"NDSolve\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.35082, 0.595178, 0.853742]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9108095409557543`*^9, 3.9111160186843023`*^9, 
  3.9111436019255056`*^9, 3.911241413709345*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"3eff31c3-24d2-40bd-9237-5021dc49e542"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVGMinus2", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.01"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.01001"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108048270678835`*^9, 3.910804831595668*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"dc6f0bf3-2dc5-43be-a84e-4c9a8bfd9367"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.14451570835946762`\\\", \\\
\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00010297580413686464`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"2.565073865600787`*^-10\\\"}]\\) for the integral and error estimates.\"", 
   2, 32, 5, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108095590573163`*^9, 3.911116037386326*^9, 
  3.911143620964826*^9, 3.9112414308188725`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"e66eef81-2b90-4aa1-857f-04878ecf6a3b"],

Cell[BoxData["0.00005148790206843232`"], "Output",
 CellChangeTimes->{3.9108095590773897`*^9, 3.9111160374546967`*^9, 
  3.9111436209921465`*^9, 3.911241430834631*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"68bf67d1-2fde-4f2e-8b4b-dc73412a73f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVGMinus2", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.01"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00999"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.910802122148862*^9}, {
   3.9108022128506975`*^9, 3.9108022129259405`*^9}, {3.9108022559971285`*^9, 
   3.9108022587783585`*^9}, {3.9108048546319404`*^9, 3.910804858918657*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"829113c6-c2c2-4f41-8638-59860410bbe4"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.14451570835946762`\\\", \\\
\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00010300584784430283`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.6209457925574382`*^-10\\\"}]\\) for the integral and error estimates.\"", 
   2, 33, 6, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910809580062521*^9, 3.9111160584025497`*^9, 
  3.911143639844834*^9, 3.9112414477304573`*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"8b6dacc1-cbe0-4f27-9949-9e456ddcb123"],

Cell[BoxData["0.000051502923922151414`"], "Output",
 CellChangeTimes->{3.9108095800765944`*^9, 3.9111160584569674`*^9, 
  3.911143639860444*^9, 3.9112414477699423`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"420d848a-bbdd-44f9-8fa7-7d4367acc1c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVGMinus2", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.01"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, {
   3.910804861862224*^9, 3.9108048656705227`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"7744d24d-5a27-46e7-926b-641281971385"],

Cell[BoxData[
 RowBox[{"{", "0.0002808684151082633`", "}"}]], "Output",
 CellChangeTimes->{3.9108096026260543`*^9, 3.911116078513285*^9, 
  3.9111436601059723`*^9, 3.911241465206938*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"ceb52dd2-53e5-4ebd-afe8-fee1baa50a58"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"VG", "=", "0.001"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9108017637258387`*^9, 3.910801765800316*^9}, 
   3.9108022793394547`*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"ec09f5eb-ea0c-42b1-b0fd-4663a18d42a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "0.001"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardVGMinus3", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.001"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00101"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00099"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}, {3.9108022853779926`*^9, 
   3.910802304053191*^9}, {3.9108026205523844`*^9, 3.910802636680106*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"d0763b1a-5f7b-4830-9cf4-d0f78b8cc975"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 36, 7, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910809602761898*^9, 3.9111160785960617`*^9, 
  3.911143660216277*^9, 3.911241465269458*^9},
 CellLabel->
  "During evaluation of \
In[36]:=",ExpressionUUID->"18b495b8-fc8f-4cd3-bbe8-c48ae84abe10"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 36, 8, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910809602761898*^9, 3.9111160785960617`*^9, 
  3.911143660216277*^9, 3.9112414653021164`*^9},
 CellLabel->
  "During evaluation of \
In[36]:=",ExpressionUUID->"c8265b4f-af1e-48fb-9d65-a2475bcfb9f2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
HU+1GsH/AafkKrQ=
          "]]}, Annotation[#, "Charting`Private`Tag$19084#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$19084#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1:eJwUm3c8le8bx5VKyTqHjGOEJCtfGQm5rxMqexQlRVbIzmjLlhAlSvYWWUnI
3rL33nuclVJk1O/8/vL6vO7nuZ/r/lzv6/M85w8Cli5X7uynoaGRPUBD8/+/
mndWemtXjVDPXNzFyG4CHFDFuU5zyQKvH1eSH54IMkkx8Z+51EBgxkqr4RMR
tDqHixK4DKFDOueOVDQJrltvVkVyWcPEl1Hx6NsUmPzvuepLLg9oNZGh/+yz
DsnH9IJCuAJA4VGcP/O5X+B7+POpF1xRoBXX2FU4ugvGN1IKvq+nQ/+5lOB7
oYfwlHFD+lRcBlzstpU58eEQPsjs8J2rqhnQvN18uaHxEP6zlQuuJCoDlKZP
D3TuHcIzOSsHPpHPhL5PmsmHXOjwTX6jJoe8sqD5dKrFqM5hvHQu5hDP4Rxw
ws3uZO8cwbdKNpl3SuUAnUBTYfMxerz5p4cVz27kAJfyVkX7f/T4lyXTrrM5
OXAjgUci3Ioev1KbN56p8xEoSHeF0kqPTxzU+HTmTS60OqIS2sij+KP/fG9d
5iuApZnnJbZMjPiYu9fNJC4VgLnKo5leIUa80ICEOca5AIJFBFf5lRjxKHvY
aryqAD7uxQk52TLiv2a//VIqWQiXvDwUKqoZ8aSrxEqtrkJwIx1OZ7djwht9
eNfuzlgEtxsjXgpmMOPjTf20bQSK4Efzp4bNUmb8HNap01iuCNh+NJHy25jx
Ll4q3cqmRXCNPXuonsKMf3GF1EeXVwThrqMvgYcFX7WrMhan/RkC893reC1Z
8CcNyCsNocUgOuhxV3qOBY/zvqxom1IMMoOn8vXWWPAsecmh9KXFkCX7Ud/k
Bwt++/BVSYO5YsCcl46T34/B99SWuk+d+wKvnx1qxghg8I+lfP9uLX6B8Plj
XBduYvAuZmN68TtfwIFMoydticFbh8mkAKYEdJ4L5LDcxeD1VhZVg86XwL4X
n75F3cfghZI1X7C+KYEJUftn5a8w+C5mNjZJfCnsVfedeFKHwTcoO93pNSoF
gVufZVELBl/m0Fzi4VAK4MVqRe7A4NNaHt6oeFsKiz4VPOwjGPxD78lEdVIp
JJsbSfiTMHinvLPfCfvLgDUuUb/gBwZvOR5xIYKzDJIVq5O+bWLwOvIqC4Oq
ZRAx7/itfh8WL0jJFLWKLYP3VjcjB9mweA5emieHCstg227bxIELi2fQutGR
3VQGxPOxNmReLH4z86jL9+9l4CvAeK1SGIvvMHMt9rr8FcbaDxx5KI/FP+hS
gJiNr7Bs2DzhZoTFM0l+WWw9XA6zKuYMGcZYfPpLqbAdnnKo3zwt2XITi+/V
PjVqdrEctk6m3xq3wOLF29ncT74th1OSg1uqTlh8vdgrrus55WDsfFzntwsW
bxxytDa4uhxs6knVMW5YfKDGfkbiUjm8r2rE5j/A4qdbKJlF8hUgT1kT5vbF
4u+fctBZ0KoATstTWD1/6nmeL/08Zl4Bwk0UbfdALF7h0iT+UXAFjL7HdoS9
wOJ7MoyXc+IrwJb5BJ9fKBZvc3Dg5URhBQQeFx+3fYnFv2lsG4PRCsDMJxYd
eI3Fiwld8r1HqgAFbNB4RSQWX+tfdyptXyXQ3r8ZZhWFxZNUyjwOiVWCU0xP
WsA7LD4gVYb7HKqE5x4fuf7GYPG4/QV1d69Uwq7lmpxdLBZ/uS6DqfNxJfje
O+rLlIDFT/ELfPkbXgl3n8zVaCZi8R4+8Tel0ioBx0TX9CAJi6ef4dhvWVoJ
dgq5MdHJWHwKvPnwpr0S/E25VdNTsPhzSUx6TdOVELX7uSMtFYvv+vvi1++f
lXA6jKAclYbF71T5qJjwVIHt3qM/lzOw+Eje3ZVQqSroWTlldDQTixfxehBR
pVYFr54IVtRQdfXEDzmKcRUYyWjK3snC4o3OO0/wO1VBg31U6w5VE+NW/a74
VgFJ7GiA/wcs3m/HWjQgugrM9jocd6ma8+ZM95fsKkipYnhpk43FF5TfvL9c
VQUiDhhyHVVfwg3zcPVVgfSO3HumHCx+4tGVBs2lKmgXW32nTdVuo513n25X
gZN+3s8nVH1EQYMln6kanCU5S+KpOjmmsWRasBq6G/tW8qn67BaYYuSrwf7E
++giqu64XkGrqlUNIucVm7Oo2qr0bI7H7Wrg+vIuIJyqt9mL9DPdq2G3PGPM
hqpf3T+9Ofy8Gi732/dJUbXw0IeEI/HVsJD/z5NIrbdKTkhNqbAabHfDu99T
tWF00ppjYzWUKxqtnqPqtQ3c68SRakgPTe5spZ7fx/CtfA+xGp4F9QRpUzVH
MWZq374a2Hf02vE6qn+3wnYMF9hrAH+1UAhH1anWi+3NEjVgyaaca0n1f/l8
t0q2Sg1ovnvREEvtl8Sxr19DjWsgf0vhYX061R9SqpSzcw08Wjw8Mkrtb2lT
WJZ+QA0oGrd8n6H2X+W+efSxwhpoyG0MqKbyEqyrybDVVAP387E80VSeOoVl
/cfGa4B73Sn9JpW3XIJ/WTdtLXBduVpXFkflZ3jrZy1TLVi8i3LTo/K63uD0
XxFXLTQu6+sOUXk+G389M+q/WnjzMKimOBqLvxHcMRuoWAsL2dfcGKjz8NTj
Au+Di7UQfVEvxJA6L3Xa4lE3btbCtxmFkyXhWLz23l9fvue1kJH77GNtEBbv
vOpexRxZC+3t0eIJAVj868GVLZqEWnhbkPfC3g+LH8rrc5kvqoXP3DG8I15Y
vIVZpumHqVpY/bV9ncaDOm+a3O/fr9ZCg4nqkzv3sPjMs68GQjZq4ZVbyp8K
ZyqvTI+1nOjrQP6b3mXlu9S8qNFRkD5bBxqsD5cjTbH49x/rPU5cqIO9qEPp
ASZYfOU7+UI27ToQC3523u46Fr/PVeDUpkUdFIe+VTlogMWH8f9iq3xZBxde
4FxjVLH4fAZ7/byYOlBk0hrB4al5tzUVmphWB7orT5MjzmPx7L3f9vt+rYOR
uq43+nLU+fWN/35xkbq/PWHiDDVfS+ZUO7rP10Nz/nK3z0HqedV9119ergeB
Dk3Li9T8/p1fza59pR4ubFeN7O1i8PJPFCy+2daDmIvhZ80N6vuD9b/ftZH1
cPr+OYLRHAb/VQ3HX7RSD9sToaP4Sgy+MvO7e1RUA/B0C+lP2mLwEwyS768k
NcCXB8eCEPV9tuvmUM2S0wBTlm++RN/C4JVh6fDLmgY4da1ITdgAg68eHk8I
XGuAhjnm3V4FDL7mcEvLfXwjSLrLRlseweDr7RO4bxAbwcV+xHcqhQX/edXB
wex3I0wqqy6/iWPBp9spVljRNEHUpae2KtEs+ECbYRNntiagl35FDglmwatb
YmL9zzfBGJE3st2ZBd99I5AzP6wJFJxFd9gVWfAT6k7HaE83w/rbiRnbGGb8
L2Fl5jynFohQsatqrmfE7//zkYX7ZBvks9EK07kdwZ/9Z15yNb8DOM6F6e/q
HsR3BMh2NYt1g5v2tQ9ijvvwx18R/mSTe+A+Z3hjlMwOVFt4Zxf97IG+jH9q
W5w7YCbDeqNiqwfK9tuO2P/dhvghxbKO/b1w+XacsVfrNnDyhtynsPfCeIBo
nLH5NmBzRH7KQi/4xXWmk1/9gYONd4g1Eb1wNfu0VvPeJhA2p6cGpfpAbT5H
5z+6X1BiG1GvebYPFvm5thPIG+AzjDJrlPogx+F1wfGhDWAvTXDKvtQHDHXb
ircyNkDl/s3dp7f6IPz01vpXtQ2I3RjiEgruA5/RHbvDz3+C+nqnodt0Hyzs
KZhTuH5A+lpFG1N4P5DYvW6QvpPB+Z3eCfs3/aDaRtjYbCWDvNr8k6aYfhhS
cTojnEaGtgT600/T+qEtr9+aZESGdf0bEatl/ZDE+z38ZBUJUOnvq43z/bCL
81WViSTCqP+ZyUcKA5Cw+dTb5doapEo1yQ2iAaCwlDUNy6yB46RxuJTaAPCO
hwhaYtaARt4HlnUHABsmvzTRsQrCa10phtYDwPRXcsfu4ip46Dva/BcxAD9N
GU53nV8BJt4sysLCAIgFBnw3VVsC/DX/yfnVAZiFO9abp5bALeJ2+xx5ALSw
ofW5R5dgaB9n1szWAPjL/D7g0L8IiUvBZhMMg3BcRhEra70IkoX2nf2yg/Dz
Nn0SIWQBdFQlP9YHDEJHYKVBMHEOnj2lf1/3YhCc8C3Rfv1zUPhlKag2fBCy
jhovvi2fAzaRJMvqmEE4aX7OjvHFHEwwsODKcweh7b/jqlKn5sBxaD3408Ag
TAt1WIDdLITd/WKTLDQEQdq/QoW2p2ENnxd8VGwIyrrrSR/bpuEyZ0bO/f+G
YP0Oba9D3DTsb4kiaysOwcVkF7co5Wl4JORx/4/eEGg3izwNCJgCm2npoCtP
hqCwQul2Oc8kXDAqzDjQNwQft3fEDDzHIFHiQ4vL8BAwvDi/Gq09Bru0yatj
E0Pgf+dIB6PQGJQVRZz+tDwEjyZ0r7ztHwVJFpcvpntDcLTYP/Og3CjwtJ9u
KhEZhvzOymj5fSPwG/9xwc57GEqlQam8ahAq0wlxDwKGYdHBL8c0YRD8Dktc
DXoxDJqW/zZFvAaBqSe3Lu3NMESluqSeVR4E4dv5iVNZw/DxH4OdWM0AXPP6
ZGzYMwzOx7DWRm398OVraQcIjIDyX48z33Z74THvlr+u8AhMWPgECc32At73
nJKp+Agc4BFzSW/qhQ71r9mP5UbA8F2oBxN1rhaGy4O+aIyA95xT6vMTvcD2
uwov7jYC5jsb6utXesBDurGYvWEEVia84zyiO8FGlj/59bcRaCRe5cm27ATj
s09DGbpGoE5A5P4pqU5QUpS13D86AiEhQ840HR2wXyWdmUwegYiPWW9wdB0Q
YRBg34QbBb4GPpnskDbIcVXj93AbBSfuu9IHm1og3i35KOXBKLw/pC82FtsC
Lz12f9/1GgWchjY/xbUFXB8Wd94OHoUx/6fDw7wtIO8j9EQrcRTmisxl4x83
Q2PEgSHBtlEIFNA2KYAmmM5vDO0VGIPfKr72/37VQw/pAFH61BiEtgQ/Xeqv
h1qJi9pREmPAUr33ZH9RPSTnNDFclx8De8nN8yPO9WCZ2fxygspBCuFt5s+1
OlhK+Bax/GAMxt+kfP1ErAVSWMebvc4x6CMcLBASrYapdoYNs/4xePtYIFV+
vQq66HUMa0fGQIFi1pX+tQrygzvZ/OfH4FYNeStUqwpcA7qiD/8Zg1KWoQof
90rYeNLzjlVoHEjxMQ8T+8thx34gTvTxODzCy2GjekvB8Kzpa0nvcdB88JTC
nVUKufuWgmQCxuFWHN/JpaelYBazeU85fBzu6DGq4kVLoa4Jp26QOg55qUN7
+wJL4Dm/xcbDtnG4zPCQxU39C7AOkbS/4SZg3x+56NbdInBMua/SeXwCCOdo
zHZHi6DR8Z98n9AEWB56dtu2tAju02JOTEhOQJfhx4kFtyIYlZL9Q1GZgMYj
P308iZ8gKfRxBofDBIAm273c1UIQv0D316ZiAnwl3t/9zpYPhTkfT43UTsCW
AUPb8+E8kGXTN9BongD3oGC18Ng8OL8cky7eOwFNU67TiwJ5oPtSTOv70gQo
2XFAnlwuuI3qxDzCTsL0s/Xyo/dy4Ou9KOmwu5NQ3vTr0AfpLEDj527tOU/C
7svht8v7sqBebTLQ2WMSbCUrXP16M6GNQ3hU33sSynA/vrbcy4SJqlLvY9GT
cOM2fZdPSQbQ0I93JNZOwrHnlwqk9NPhcqqA7SeOKbi/Q7nXWpsCsjFMws08
U3B75DaWHJ8C/OE7C2MCUxAZUfri6qMU2H40aHlAYgpuujvaTUunQJ7BC7Pr
+CmICy/4TvmQDKz71o327KZAX8tQ8fyFJJi+XaumUT4Fay50J/97EAcdRnm0
ZjVTwPbkyY1zKA7KtGLr3RqnQAmb0PjxYBxEynvg47umgLTHGt4VHQsXmUXO
U+amQHGhVmO9/D18rI6QiT46DfMpdSe5OGPgAe9twdlb03AusC7hJVc0WOpL
XZuwmIZKMw8XX1IU6PrvCxm2mQbjSvXz3+qiQHg1bb3TdZr6+2k8TdshCgaK
V2rLA6Zh3URiXKD+DUhpu92Oyp0GhSuHOl48iwQeb9U3EZ+mQVszNtP5eiTQ
FbG1hJRMQ5FT14VEqUiY4iiV9K2l5vRZ3sbx+dcQNr+z5zQwDR0as9b1Oq9h
5XFg/OXdaWh0nfncL/kK1q6J26XQzMCTgz8lxBlegfl31v3HaWfgFANneWh/
BGidWJTDHZ4BzjGsZJBWBAi+eJ7Agp2BT1xWTCkXwqHHsMNx7+QM+K0tieRe
DAMJotHRYZ0ZcLCPN1bLCoYyQ+2aEP0ZMAtTUA92DAbVKhV3dHUGPmqxGmtJ
B4NJ+H/jGcYzYE6qP6JV8xxeSB356GE1AzcnYq3Zp4NgyaNSE/toBvi5ldyZ
5QLBbbLob9OTGdgi918b2hcIexezix49mwGXgr5uxu4AYON4i5v1n4ELWDrW
dvsAUP3qslYQPgPG8VYnbbP8IXlPMEQnfQaC4mJ1HWX9QMKGC+3LmgHoees2
QucHpV3MP4qzZ8Bi8TH2w7gvdCXt3uApmIG+v5cLnAN8Ye/CkCjh6wzYDObQ
BYz5gEnQi9bg7hlAWOmXBlLewMr8/XDj9gyIgLhT74fH0FcV8lxjbwaSvK/L
nrF/DJGOJw91/5sBLHuGG4fEY8C2mdCOHZiF4oMuWu6fHgE2sGmPwjQLKV9Y
Q7XrHwLLTuwP7hOz0J58Mvrjzn3oyZa7l3JyFg5N1AjvNd6HV8Y9FGGRWUjP
5GltCr8PzCUHSWdOz4JIl3li2Yn7wHTPdfmy/CyIiWI9j171BIblixPuWrPQ
oJHPmdrsDh3RMyZ/dGbB0nR+afutO4SpPRl9pj8LszIfSZW27nA0tXDohdEs
PEzitnxE7w70pty9SbdnocfliUWVoRsc7v/e1O4+C2o03Dz1O65woCau4ET8
LLw7ZGbPzOsEY+fV1KcTZ8H3iaI0V7cjFJQTZ2JTZqHCz6xmztcRTEqUsdis
WUi9eTEgf9UBPuVNe9AUzYJn/uzKdp09mMWfUJxsmYWb+Tf300bZgSyuoy+m
bRZOu3+5rm5gB0diPBwMO2fBo5pfS5bZDorfNMW3980C4eKWxHaYLRwNtf33
dXIWPn/UuHPslQ2UPfrY+PbnLLxXnlfX+2wN4ZtXTa/8noXpBuVLho+twcpz
9xfjn1moi9XNX71gTfVP51Tg31koC85+XdtnBXfsKC/cj8xBwPe8ve1tS8Be
l9HTPz4H7geU3760tgAH2YrRI1pzwGs1oHJYxBRqewZzy3Tm4FpPfxfd8C04
5vTd21Z/DvYNqNAOB92CmoyTwk1Gc+BD3hqeWLkJrByv3HzM50Avi/v0lRIT
qPhjfXTTcw4a1kSIep7GwPLWeyrj4RzgHARvuUgZwx3p2E+GT+YAgww2LxCv
A7ND9/UinzkQaNlm3r5zHawmFNKdQudA+XaRdLDFNThaw6S8kEy9Xqg/p/yB
IZjfFGV5kzYHF37rK+ooG8KXTdX5C5lzkC8jse8xrSHclnr0IunjHDiMnrWP
f30VPqfMD5qUzMExHeaOieIrcDOgzLm3fQ66TrwYZGc3gI8alsnVv+cgb8U0
t9ZDG2QlBBD8mYPNXsWSSWFtqGaaGa/ZmYPPpkLnake1oKfflKOOZh56Y097
d13Qgg3TG+EN9PMgOeO0PIXTBOSm//Qb3zyoJxAdDCiXocWQGachMA/pdW9P
b+ZeBn35rtLWE/OgvL3lednhMljuav1sE5mHRAq98ezqJXgedNm+U3oeFtjo
L3WTL0JPLDLuuzQPfXQzARfZ1eCG196vKxrzQG6nezM1qQpztyvf9GvNw9TI
yiv6TFXYEFLsHtCfh2ht1blj51SBq0Du0rDJPDy02xIfsFQBywYJ2QnneRhu
z9Zo78XDLwKOZentPCjZyBedxJ2HqITllvj381D37KOqVb0SyOgVe1+Nn4cf
UfT+SQ5KcK9Ih1KbMg+LvVSs6hSB9NCnKy53Hs4aVBibPFCAxYNLYQb11Pq+
vnOsZpaHgNIitcNN8+DyQmDzS/NZOHHXe7e6ZR6wvz/HBjw7CxYdnI4SnfPw
8vXSscTvcjAZqaVFNzIP/e3N9/ynZGHw+KcjVaR5WD5hcOrstDR49HrVuX+f
h3adz73vU6WB1V/zkdjPediqsf9QZCMNBkvzK++25oFha5119/sZ6Mxl/+ZG
uwC7WQVeZYxnoEnhaZAI1wIwL6m3POiQBGuCOprmXgCxJQg5aScJtAnHfkfz
LQByvfOB9qAkXKApuEMrtABT6fUFqiqnoap5Vm1KcgEinfJ7HrSJw5erl2mj
1BbgZfmNGz+YRCFYqyyQ5/ICVNa9vZhaJwK3VEUPZ2gswHjDPl8pTxHYL3OU
sUR3AZgCKz5NTZ0CXWw3+4jxAljtHP+mUikMKz3XxHicFuDTm8KJCwlCUPGt
JTfdZQEWzlqtdd4SgvDac/+ddlsAesn3S8d4hUC2ECeLHiwAg3ZWU2/SCfCN
mFI2912A4tqLq/V5goDTtTFIj14AJQeewJVVfiBdHO6XiFkALaETTvrF/FCr
rH7tS+wCeBy+0nnNmx9sTovdbE5aAN+5r7LnOPjhMwPZeiV7AToXzz5F8Xyg
3e75UKJ6Aco9ZM+dyeeG4w1L28W1C6DA/ydPy4gbfpRf91JuWACNns1i1z0c
vM9R8NP9tgA9fgmELn0cLL3YC3XtW4CGZvaxMFou8FYPTCpeWoAj7tUluW/Z
oc/M7pbU6gI0v1x+HK3LDkKeWly5BKqfGVH/GdGxQ1sK5k3a9wUIFe8R039y
DNh2EoIitxeAZ/DrzIYjG3zIK3FyZVqkvp/sq5k9sbDd8F6MyLII6YdbC00V
sKAz9nTZlnURCjg9cOZ/MfDjkKrFbc5F0FBpd3scgoHz5t2GuoKLoOQdw9ed
wwI92BUlibOL0B20db2AjQkERdu3ss4tws3EhWfHihjBE/K/nFBahCOVsyvZ
+oyAc/T4jxu/CNa1tAL6rxnAuonmBL3mIrx+vCx7lv8obD3gol8xXYStxvu3
M+4dBs3w3WYr80Wo9jHSduE/DAnp0/7TlovU76eAPLkeOlDpzdgbsl0ErYIP
D3Kl6SBMTHq96d4i6GKK1Tb2HwKBSc2RtMBFsIrQj43uooWQeqUCo+BFaPc5
1accRAs/siSC6EIXodSi5O4kooV6NyZZh1eLsFD+78Hvov1gfbgvQjpuEXam
o9XOZ+6DDzI3LtcVLgLuuvCSiNM/xMKlyef+eRFyBs6p5Gz9RY/+Kv4SKlmE
70dVeGoD/yLNVp604Aqqf+EH/kSl7yGC2cxfveZFiG7Yf9x4YwdJhtiWTI0v
Atd3GSvcyBZ662L88tXUIgTMZwclPd5C/ww1rFVmFyFSoV/DmW8L9RwXx2Yu
LULc/vSp4bub6N4XspPT+iKMJV7aZ8f8GxXPeJ7cPbQE70Qz3tFH/kQ8zTa7
eUeWIP3vSL3G5Z8o8OP1/tsMS7Dxnisrau8HunZfwbcBswTX6ms+gdMPtHl0
byKEZwk8n4jVhRqvI0X5gCgu6SVIZR+kaJSR0ZAl19kE2SWQ1BDvZ9MgI/fw
/GF++SX4+LvQ8sY4CeUujuBEzi/Bgcj6j+cPkBBf1OmUs5eWoKObuYVoQ0D7
14fyrposgb7cxE9BxxWUyOOoN3xrCV43Dbp5YFeQkvq+dZPb/68P/3P76zLy
SBKXtbReAostxlfvGJbRko5PuavzEjg4BXpk1Cyi9hzRlpd+S8DOp1SzemMe
2Q1V22ECl8BeP/N9H2YeHdhvSB/9fAmYOzhelbbNIXTjmU582BKEvfc+fBfm
UCFdf3/O2yWwezXyACs7i6Ksn8605CyBx3WBtbqIKST1CuOnlbcEnwKdBJV5
plBnReaJ7oIloIx8tr+SM4kOsfbaDBUvwQtr0d9y7RPoYd1J0kL1EuR/OOyq
f3wc3eLr/rOvfwl8BRaEfRlGEBOX25eKwSU475lO//rDMKpjPXbPc2QJZv01
RE9dGkbCR26urEwugYaFbUt34BCi/Fwa6l5Zghgah84n7IMolfwi8gVhCeLp
Bz6frB5AhqsSuqrkJUh799xE3HYAlU25NZX8XALMn8xluap+5Nf693PC3yXg
NvayrX3Yh2QbU1yu71sGeXO2fzVifWi5Wk0cc2AZftkUyP6a7EXaxSGpAUeW
oXZDzo58uRcdS2J/7cC2DFdkTr1LFe1BHzwknRXElqEC1fos4TuQiUuv6E+J
ZVDFxu2mt7QjRnuPxdz/lmH9nnORtn47crtdfotfbhmqJFN1lWzbkJLmJS06
/DIEyYX09uZ8Q2S11UN1KstgwKmmyI7/hpIhrP7xxWU4dhjHwjjcgg7I9SmQ
NZfB687G1OaRFtR13Exk0GgZdPlm6Vj9m5APbt9CuDH1/oPfVBVPNiGZY+lJ
6jeXQXnV3nPuWyOKoV9jrzRfBp6N5/gktkZk+cvzYJrDMuT4W109XVWPfrW9
nHP1XYYhWaHDv3Vq0cTRQbtd/2UwN+HtvENfi+q1eSjPg6jn+/b+z9eIGvSq
K2cnMXQZKg/eMckIrUZifS1sndHLYFq3m7UWW4lYWJnjjGOWYSXg1DmPE5Vo
8+o1gYXYZRiost/oy6tAjYMLp3eSlkG4B7f6u6UcmY3uuyyaswyrigdjeTFf
kRpOo7M4l/q85AjFuKwyJH7z1VV8wTLspHj8LocytDXBZ369eBn8HP6z++ZR
iiJnlB4FVlP9DJJ45rn+BTUve36c7VsGUatiEQWpzyhXpOqM0+Ay6D2V3haf
KkJv7h4o2xqm1mO2YnD3ZREyJ0Q2Mk8uA0tie1YB5RPaJhdMKi8vg8LcCFqq
L0Qz/21ata5S673ALpP1uBC1uKI1Q+IyjOp1Xn8pU4iifnT8dlhfBjOkEHPP
oAD993uVOXaHuj/p2aYQPg+xy595e/LvMrS4EmoZ63LR7oOHPJ9oViA1ay3s
r2ouavtzSPTbwRVgW3qlPab3EVnvnVD5zbwCJzj1OlOfZaOYA2YeV4RWgLZb
BCsvnYn+WnHI9QqvAE7Cd4ynLwNZN/T80hNdAfLPoOAQ9wwk5af6QEdyBbSW
fp9ZKU9H3/6JPFY/twKSuZzWdDfTkOTtOcUWxRWwYP2pG34oDUVVx+1cVF4B
5zULT9fPqcjci8lLVWUFfjXPOstgUtHm9k9vpL0CT8s1KPwTyeiWSR6+Spd6
v/0bk43Xyaj+q82+8wYr8KXaundXPRmFPxz1U7i2Aten68REPJOQ8O/qQFnz
FdjToDz7di0BXVt/ESrmsQLuk+KLcd7vUaW+qnb2/RW4uSFmG8/4HgkW7jKI
PFoBE3sWgndCDCI7u4SffLYC07iOpab6dyiQaPiaP3gF+GZ2TRME36I1LaYr
SSErYHk3UWmsOhrpf2zB8r2k+qmiJFt9Kxrx2CtGcUeuQOuR9E9WCVGoePn4
O/Z4aj3nbAMfnXmDcJdHr0cnrkB3ALO46lgk8smM5GRLWQE5wt9M34BIpH3n
YCwmcwVOMyfe0p18jRbm1uIZCleAv5jdwTHpFWKd+pK6v3EFBrL2IvH1YSic
wcurtHkF3rbiElWkwxC9kpqxY+sKfJVqmN1OD0X7Y/oYh7pW4KWljPrJyBD0
w4DyMHt0BR4OR/HYhgQjZ5+Sq2YTVP/uqvV5MgWjtXwvSdZpKg9WDsaDUc/R
7FGGhacLKxB5QSDO8EMQ6mkS0dOnrMCdKwliWqsBSHuDInrwB/X+FyZt9c8C
0DfB0gPlGytQGvcr8wx7AKrxvlh+YpvK07kMhz+a/ihfwfLk5oFVYDgxfArT
7ovC8uJ2EnCr8D6J4Pzg/DN0eMJy6ArvKlC28/8mJnmhAHqxT3T8q6BWf8S9
96AXemJbZnPv5CqccrMPPzD+BNkLDPaqSa2CfrmFtkDWI7SkF5/7R3oVfL1Y
1H7xP0KWz6ye58utQjb+42XthIfoxvj6eU6lVXhn8VwwL+EBUo9m+kC4uAo6
jXsBURWeqLFh0C9ZfRXqHGe1iOqeCP8j3tRIaxVemieoOo14IHk9cdYa/VXQ
fnaplfOvO/X9of4s8uYq0Ck/fRRs6YYOevkaKtxbhWLyfvV8ZhdUvE78U+O+
Cm3OjsNr7s7I2sY46dL9VTi/KfTo8LgTatT7b+3qk1XQs+N9uPHJEQUITno7
B67CQoBV6B0feyT7Tv3kr+erkBEx/9lr+y5aOFrc9iRkFXBtxUdlH9xFar9C
jr2IWAVrIVntzgd26MC3cx/T3lPrsVy/fDfaBhWfT9cXi18FWrORo48EbZD1
J+bfhYmrcDtoL6z+0x3UGLuEr05bBUzYMcmcIWvk7xQ1NJK3Chrjk8psClZo
P+v3fUz1q0AeIkovXDdHRc9vZkU1rkLDU6veLFpzZLnbrM3dsgqTSU+efrG4
jeoXE96JdKzCGlN/yVN+M+RXpnVadYhaz+vI+wcbbiLp06V9rSOr4LrP8T2j
zE00lyL4UH98Fe590vzjn2GCVEL/1JvOrELKP/8c/Tc30D6zLOOHa6tweP6j
u2f4dVTYh/37l7gKn+veoVzW68j88rO0QAr1eVJ3xOnirqFaKSNy5Aa1X45b
z8YLjZAPLW1A3t9V6KIZcM3cuoposs0K5rBrwOfSqRBM0EfNxGHnpGNr8Jco
/vtFiD4KkzKQvMW5BmOnTwomS+gjjjLVvEHeNci2Yef+RdBFki0iH7+JrME1
vfb5Krw22qBPtQ8UX4N7cakUz2QtVK7LLaYiuQZT5HLRrP1a6OIQY3aFzBpY
UD7w/OjVQLcWf2TmozVgmUeRNO8uI0FRRxuHC2vg02zjg1guoxXHxZMiatR6
Tp3uawm7hNw3htNTNNbAXC95IePlRRRCW5UaZbgGmrkB2UGfVJH+5bOWBtfX
oLkLY0qroorYQwsEmEzWgKk6HRPRr4JSsanJz2+vAV2Qm1zZvwvoq8DzxMf2
a4DLU9fR8cCjZ3dozOSd1uDFgo9kIAceqWU/4t1wWQPSUTPW0PuAeqQc4508
12A7f4U0zIHQChjEmvusQT5bcpv8cyWU7992g9d/DZRGuUTFCYrIo0WVayyQ
ur/lLZsz1xTRP92zMVdD10CWTOQMkVFA7Gbcby+9XYN+49snjrLKo4mUKCPa
92vg8Qunq/3qLEpdZDxWG0f1j+3G/H2Os+i0E02UQsoabPTyurYJySG1p4uv
JXLXQDrBTnLXWgbR15oZrOavQUNWZ0bLrjTqoR1hyfy0BonvsPJTUdLoZmhb
xPHSNbjY9WRWu/MMcosteImtX4PPRpv94rekUOlu7PP6xjXIDKPckT0ihXbN
gnzdWtag6O0RgRXH/9DzE6aefR1rYOxyS5tOXBLF59KbRg5Tn3dzavP7mDia
Zfp9TWVsDS6FR0o+1BZHwvdm9X9MrEEXd76xf5MYKpQrU7sytwYfbl40taoS
RU3VdySwpDU4cyMi2mn0FKIXMBCup1D7fSwwOt76FNL3P8/v9mMNAtNC73jv
CKOxy6xsfZtr8POJjNOD48KI3FO783o/AfaEHe223gkhGZncXxcOEiBZR4ZR
5rwQehj9jrJOR4BP140TlsdPIFoT53kDRgJUbG9dMZQ6gTjnudsxnIT/5/FV
BooAMr1I11SHo+oz2RNp8QIoNetH9T1eAvz3MIVf0UwASTi2FvUKEoDPm9c3
p4kfXfh1P/b1aQLoXjI+R/I7joKuW0ZdkCKAe7cCYx3jcdTxVSd8XZoABhu/
B77H8KFrz4T8DM4RwKTf/pRXKS+yp+u7i1ElgIt66OE1Nh5UcLfKqu4iAfAD
xrT6pdxoo/2D6T11AuQ8U73pacGNvF95G/TqEOBG5+0a5wwcavxhr+WrT4Dh
u8zI5joO0Rtdu3jmKgEMndQaXXe4UBTXaYXXxgTg5/r+N/46Fxp9wilz4SYB
Ki1MIJOJC/FN0Z5eNyXAwOjTeYN2TvQhdYzfwIoAGpfPYt3UOFGVePBhjDMB
8pvGLXNVOdDZAY7OSFcCGJWuB0lvsKPCp1mv2dwJ8Irjk9K5OnYkelL+2ltP
AnwoL26//J4dpXY24zgfEuBsKW3Eig074rl/bfr9YwJYZt9TMpdiR9F8S2nc
XgSI/zu4J87MjphaPO0SvAmw+KHNaL71GAp2OXj6uB8Bmq9MaKL0Y2gfZ/R6
cgABLutDlLjrMfS4VqhE8DkBlviVg/p0jiEnjBoIhxFAoNeReWHfMXTls5/B
6bcEYKdl0O+wYUPtN7HsBTEEoDd7mJCmwobUDqSOScURQHV8xZVBmg1V555J
KkogwOoop4XVMTYkb1RnJZtMgKovv31VpllR4Z6+SEkqdX8VbHdjIysSy5wh
ymcQ4MgBDXlcEStK03X99DWL2u/3svzyb1gRz+Y/T6UcAtAsngyV82FFb5Mi
FKtyCWB1vwp6jVkRs/rxf6iAABmUi28O41lR8Pf8htpPBAhY6yx5Aqxo/3sU
rFJMAOZSrf+meVjRkwtd2o0lBJAcbn3/6B8WbayaYi59JUB9izfTSwoWOUeS
BlsqCHDJhVkjfh6LlhW9YjWqCSBd4rbi1I9F5vMMt9trqbzdlng3+wGLxkLj
T+g0ECDV8L+jx/Ow6KqsxEpXE3VeWvs2bF9jUcdERa7+NwK0zVVhvDyx6FKg
1r2+NgLEStDjCrywqOb0uJxhJwEOX+GbyLmDReeG7LcHu6k8zjK4FhhgUdGz
7errfQTQtxy5pqiJReKnQvxHBwgQfkR5oUAFi9K7udRvDhPA9GpC8qIyFvE9
zGaYHCXAg/1jqeQzWPSOX6HXbIJaz5O8TR1eLGJp/RY9M0UAx0sUiyAsFoXc
MzaxnCVAe1h2oOAPDKLFrfAtzBOg1S/Mq40Fi57WP5i/s0QApYkAdUTCoF/2
dB+WV6g8N5aYTOyj+sX6zvEugQDiN0QO0RMwaKVC+AyBRICTBddnrlC1hXXJ
L8fvBLhY3N32g4JBYwyXysk/qHkj0nmEZh6DDL8MPnP9RYCkc/PT2e0Y1Gl6
R/XHJgG4c4aOs/Rj0KVDv+g8tgmwIBHOItiDQbX5AR2/dglAd2/74fVqDFK4
zvb6wT/q/nKi+hFdGFT0L83ozz4ivHnA0MNRgUESH2RwTw4Qobea20NtGIMy
9Bumdg8RQZq1Vi+5FYP4/lxJe3aECGmUznrzBgyKSZmzpWEgwszzdUnOZgzC
aLpJ+DERQXdZyq26HoOS65iPKmKIIM4v9Er6AwZJKeStrrMSwT1YQfdPMQbV
FGp+y2YnQokIu1AltT5dkZVMCy4ixAWH7YV/wqDJpMBALh4ieNBZ2On2YZAj
xwnrXj4isLzX40mj1rMTXqvyQoAIMT40rAFpGBRyyEzgghAR6I5cXX3XhkFc
z3b+bQkTIZDkrh1ViEEffsVMFYoSoUyc8ZPWEAadczpbZSdBBPlmnQAbql8t
C/1x/P8R4ZOJRlpEJwZdu3Xv8cgZIkwwdO8dn8agpX6mG69kqX5ou+zmZ2OQ
p1auvLo8ET5HKbvun8KgAw0a7DSKRPCxz7X9soxBbxSXN0rPU+t1Zqh6PItB
gkUB/S5ABAPLBwwiPzHok6hg0SkVIuyPh6aLOxiET6l5Na1GBNm2nF/dCxjU
zWnq8u4yEV4pl10NPIpFZq+2dfQ0iVAh6n1engaLyHQxEnQ6RKgfE/G2p/Ln
5S13tEaPCMdmJpfPHcYihs2+1ftXiJDVNcxlSuU53tn1m6QR9f4b/zwTqfyK
LzFmLV0nQs7y7IV7B7Co3PRjYKIJ9frfXLkv1bBIY1Dd+popEcKmGrWMr2LR
iPaSCpM5EUqZUU8idZ5sG/0Fmi2JcK3j0J1qCSz6rSRA8+wOEfzm/yydN8ei
wM/VU3J21Od5bNp/tsAiNvFbVSR7IqiEFvRHalHnMfVPXIYTETxHty+doK7L
4N49NnWl8qFHuEgXhEX1r2VvHHMnUr/fNSZ/PMOiK0f65Ds9iZBoGf738SMs
mvVxYQ98SARhp7bOH/FY5LrF8Ov8Eyp/fX/73Aqw6J9LTv+GF5W/WPuEc9T8
CF++XJTrQ+VNMCC6NwqLeG8vvrL2J4LRreO7j5uxKHfIz4UniAhSI/zuaRVY
pKTLrzsQTIRGCvvrJ2NY1NZUJREWSgRJu0d+e2QsMlG+eVQtnAgy4Yfqgpex
aLV4a3XnFRF48ir9dqax6KHE22+f31DXJZIwQtT8PJwuk+XwlggWfFFZsRKs
6B13b+CJ91Sepj9IFf/HioTfOFuPx1HXfx6wqxFkRV/oGVTfJBLhSL9ZpaQh
K1LzyxbQSqGux3+vw0qyov4/l2ho04ngcCHD+zU13y3vLUyVZ1L9vTwWr2TH
itZXfKvcsolwjjNM7I0RK/IxPx4vlksEvYJI7tbbrIhlpPLxXD4R9PF3aLOc
WFGSnsmN2E/U+Yvtmn1gy0r93t6Uv1JMhAzvbRo6K1ZUjaLZ6UuJ8JzPXO2/
TFakUyL9q+4rEVJvnsbji1nRxOme/keVRMCn7c9nSaHuR8B40dYQ4YScc1tU
J7W+7KvCL+uIcOfDA3ZiJfW8ttHd7I1UPlL3iXItsKJVoeGHyc3U/rNoTs/n
saLcOU5BsVYqbw8sdJZbWZFrskn753Yqj/tDTYzWWZGMWbyHche1H6TpU95n
2NBv7inelh4ijAtd+pLLx4bKR4+36PcTYWVCSU1mPxvyemfhOjZIhCd+fyqK
qdfjjdK4rEeIcOEEzft4dTZ0gHWxnjRGzbfsOGGpu2yopUfY8cEkETifff37
yIoNhYTbHds3Q4RK3nLLEAs2pKudUx0yRwTTSAkFWhc2hKEn2rItUvOgnOB5
x4cNXVqi281nJMF3L0FxS9NjqDARhBbMSCDBJ6R9Zocd/Xz8k87CggTsLK9Y
v52lfu9czyJMWpEgUyikNZKRAz2UudltYkOCd+meGWRpDlTBzPx52I4EKV3H
tveJcqC/hPq3hg4kSKpWCjzNyYHw3+4/7nUiwX2TIrHqaxzIP13MTNeVBAzW
bfKn7nGgZp+pC+1uJOBH/4jnX3Ggw6aRJ9U9SVDEX69Oc4kDaSlcOtL0gATG
45HxnL0cKPzYNvHCYxLYfOYsd37JgXrW83qqn5Lgwjc+U+kUDsTaZVGs5E2C
RKsQntM2HOhazrGYMl8SpHUL6LmFcaCYoNYncgEkuOZxpnbuKwcat/S6XRRE
gv1X7Pl5gAPxwRnV/16QQFGV9YCgACcy514Uzg0lwYzRmbrYUQ6UthlDLxpO
AsOu7wEMcRzU/NUmZ7wigZYc4QinFicSKaTpE3xDgkvSIoID9RzIIaz4S9L/
/6/oQ5juiS0OlG9n954nhgRfrVYEyW6c6Lsaj9f7WBJo6B0+MajIiWQEeszZ
E0jw/L+CB23GnOj+nr/amyQS3Nwklfzm5ERlo/IiLKkkaDGIsf70iwPtfCEc
fZlOgpGxAI77cpwIRSZRjmSRgMtGo/14Jifycb7aH5RNgjc2b6fLYjhRgyZd
KW0uCXg1vTJornKiQ6cqYn3ySTC4tKpt7siJNGhdnu0VkqDDchefG8GJwqYF
LR9/JsG+UpPmwWZO1FUxdHHzCwnUL5rfHdfgRJiYEFGPMhLoqj4iladxIkMP
xLheToJmU5+kcBou9Fb/x3enKhJ8ehW7++cFJxqVyBxYqyHBC8lXp7IHORHP
EZMy23oSCL9gRNybnOj2ImP8QiMJ1nhesAljuFBqXZ23RQsJVG6Z/Oq25UIL
CZ5WU60kiKhiKHmO40KnHotevtlBgrfF3pv793Mh+2uTYiNdVD4ZvzWoCHCh
XOnXTEa9VF6YOMZ2znEhCtPFH739JPAsdD0nZM6FpAlbg7pDJDgpcEOn8jUX
8mzJ/do+QgLtoKjriv5cqCzNPEF9nARtdr7aT3250LY3m2/TJAkKD0he3cJy
IeVb36xVZqh8TU+VkP/jQj7nnqrXzJGgl4e1aGGdE9WzSUmcXyTBPX9t+j9v
uNDB9Xnmr8skMFfUNGxc5ELqne9+yq2RgBXnUYIX4kIh2VrDRUQqT2H9nsUy
ONQZ+K/8PwoJBF4o3TmWyIVYLD8n5q5Tz7/L6K1ziwtdQbZ+ohskkA05sv/b
XS4UjeO2yfxNAusq5RhBDhwa+d2lceIPCZz+eV1RKuJCuH6/08k7JHjW5mUe
useFTAvOYnj/kuDqh1159I0LlZhsMfXQkGGKUQ77cZoLMR0qZ/CnJQOrw0KF
DR0O2X56Qn/2EBlaE788ktmHQ7W3lA+vHiZD27WjUbbBOMR5+N/B+KNkcGyp
fFFxDofufa6l1WMiQ/FyPq5KCIfazPz27ceQYf9I3dUuRhwSpFf7V8xKBpHC
7wrBUjj0+MvBPVt2MmjT6Hlm6ONQv3nLNo6LDHEkRZGLYzgkwfBiq5ObDIkC
zgM3xXAooFTztw8fGeh1jrf9p4JDE5YMGzICZJBp9RbguI9Dckxd60snyPDd
LM/AQBaHwr9GUN4LkwGLX09l+cGFlqwNSNqiZDiqMvlP/ioOIRZWwj9xMozQ
RutbP8KhdxUDK0WSZAgwx53858GNvtu8Xbpzhgzbzx24yNM4pI41XuCUJcMV
5UildhVulFzFNdd+lgzNrZ9T/cg49MdufPqZAhl+fzPmj3DAoStsCZNnzpOh
SnP++TuqPzk1ZuMLiAwS7rzKmnk4tN+Bf/TdBTJwJt6LNHDgRjfZ54Y01cgg
q9tNPGLPjYrr0gb2LpHB6PZj2jNfcYjB6U5foQYZDghP96tQ/bfmPNVjpU2G
XCa5CbpqblTVsNLJrkeG6ZOdPw2NuRG7S057qwEZ0j7bhpfK8yBnnGPrU0Nq
fWpVK9GKONTcdLrlv+tkeGDeT3/lCzc6fo/SOHeDDDavThqzWvOghzyf6qNv
kSGipahh7yI36mlxq1W/TQZB8bqajjPcSMRdtnrHggyf74Zm9ltyI1++3xX5
1mRI5lJI2QjgRmOtpV8tbKl+ZcmcEtHjRtKej0rZ7Mng/ZDrEWaRG4XwK31p
cSTD3I+NNzH+ODTfvlv02IUMDuTUEyu+3Oj8g+rC025kSDG7P6isxoOiBH3y
ZzzIsN5Xwn63FIdInRdy3zygrpsSR9+vcqNLj2hzLj2m8kifdOCMIA9KFGrK
+vOUer67mlzJdNxoszsoI9ebDINFevOv9vEi/Sfqabf9yJC6tuDTXMKNPgjT
p2ADyYCvE33+nerXvr72xKbnZCjSMBk7nMiNTLxexj8MIcPKS94c35/cqEhE
L1b8JRmY96x4W2J40NEBlpipCDIcbiBjNop4kLV3X/TrSDI8enfg11ImD6oU
i3qjFk0Glv7t3UMGPIhtyOj15jsyTEbdYZmIxiEnX46InFgy2DMJKxJoeFCz
xGiYaQK1HzTdkZFmPIhvJDaEJZkMFXGxXw7k4tB9/1vBDalk+HkiwKozlwd1
S/IF3c8gw5dXx69N3KX2Z2zaX/QDGRoakuR2x3iQT2CK70QOGY7QqRm2UueL
8QGdpkUeGTr6fz5Y7+JGsXZO2KUCav0FY0c+sHIjYZP+Mfsi6rwkzu/WUPv5
WUshjVJMBowq7bbkNDfCKyc5eJSSYfbfEwnmcF7UIXlQ9s9XKm8DXUjpP150
g99h16uSDKv03t89CrjREqa3cX8NGYbVcPSUXR7kRiv/8nkdGRSNQnwn2nnQ
v414I4ZGMjjdoo3bteBFYUv7+V43k4H06t9/utR+cY7YLR1rJcO/hKEvbvnc
KKO1Kz+2nQy67pM2p4qofFXIPjjeRZ2npwJ8nas8qDo3FtJ7yKBZLlxemM2D
tBJpDov2k8HEytBQYJAbjUTY9OQNkmH5tbHxw1vcyNq3I0Z6hHqedXrx81s8
aN1N2qJ0jAyd5JMtR9R50DPrGNHzk9R8dFPquzXPjeiv/V2vnSbDfPL3VdkD
fOjdZevyi3NkMCjiHXXp5UFCCm1+bQvU/vQ6+Lm08KBCMSktvWUqDzlbT1lj
eZAyz1vWgVUy+FLq5GZsuFEb4+64MZG6/lqM/vtRXnTtn0X6JJkMXAamVn7a
3Gj+e4uj5ToZLl0a/i2Swo1c507LLf+krhcM+U+n8KDd/jd7Dr/JQJRPjLv4
nhe9aPrT9H2LDL1B6az6a9Q8KL0d7rlDhoPR6oPcvjwo7UPTte09av42gE5U
yHEkFSt+3JuGAi529l8Wf3CjytDXy7S0FECCZgzp/TxIw2uzIPggBWrFHwpq
fuVFQ86mDxkPU0BIhjN40p0HWZo34CPpKVCYC20Z/3gRxUD0CAcjBbYLJy3b
qnjRU9WI3jhmCsi22mV0yPOhI3K/3vNjKeA2YDGa+4AXvRW+aZnBRgGlwdwW
Vj4eJMhZJybGQYF/RjV6mUq8qODIqZ/5XBQI30/cVfjBi87vhFXI8FDgkchN
ZulUbvSN+MO/jI8C3DL4sF8RfMhoylhbWYD6PPZXF2p+8aK57mq2+hMU0L+B
o0ny4kMudUKTl4QpMJ5N8Vof40a7RSEZ7SIUeDqbqXDFhwcFp3930henwLvk
Hj7/U/zo2NtrZwdPU/WSycz4Mg6lPq/8e0OKAsJlPz5+OsiLJB8JtkxJU8BD
Tjea/xAfqrAPjrCSo4BFzp3AjF1upH6LfH1FngLxJax09ix8aEDHkN9JkQJW
H28M3BjlRRZQvrJ+ngITDUEbLAu8iCzF/+k+UKApiqsqaJIHPRYMerRzgQIq
G7+6P29wIzo24gUfNQq01BFbTW7yoqiDV+gPXqauG3PbUHR4Ef9mad8LDQos
tnDbM/7mRXkrvHFM2hRoGA7/7jvGh4ITAs2ndCkQmSJq1j5PzasrpJP5BhSo
digZLAniQ3g6I4KXIQWy/Ok81Fh4EU9lZaHOdQpc7tD9R7jOg7Zche7zmlAg
JFzsdxUbL+o/GaZEukWB57F3yxUHeFD+2E+aqtsUWL8vMizewItCIm42h1lS
gFfsIe9ZMz5ko9YQeusOtX9FQpOH2PiRyh8xAwk7Crjmvbljx38c8eVHsu/a
U0BuilHyUDgf+mO5Pd7uRIH6l4FDF+Ko/nFYpsS5UsD9RN/ZYxn8qLCj1cbB
nQJJcZpDI1Q+wnzPSCjdp8CpeM/04IPHkd3Z9+v0j6h+n8A277vKh9QINKVj
Tyjw/mip07czfOh4st3TnGcUoOCiTxnR8aBtw54Lj30poHOQ58bTK1Tej5yj
0wyggMbi3St7PDyoqDqpg+s5dV7oozLtPvChcHe6yNUXFGCqfyxgFX4c2Yu4
XP8aRoFSp6t61pf40MXJIZ4XERRQOOJy4cl1fsQfieaMIykwaZEk8IuNyt+l
zCyRaApIEU8E35blRyM7jE5b7yhga51us1RwHBUXekp/i6VAed6ZTUdqfry6
M7n5LoEC5IG0u2V9fMgBd7HKNpkC/oe510PhOLrUnesnn0YB88HWQR/R40gw
gE2dLpN6vZir8EYTD/p77inj8AcKZHw5el/yhQAaJc33ZX6kgKTbyr5DT3jR
/wLgAR/+tKJLmHau7z84bh2xBM8ePpBXs11Gse8/j0s8D/wCID5sDBsjFrTv
P6wUiEhAsh4+SMGC6OW27z8ny7DKwuIdPiR26q21ue8/z0kn1dMaHT7/KlJz
hbzvP32iBY4c0xs+2t+5OFW/7z+hnGE1pyYhPraUIf4kwu8/uhcg1LSdHj6S
SYnD9MTvPyTp3fsM7h4+bv7wiMTH7z/TBWnl2AcePkqzWE6Uyu8/KMRsJx/d
Hj4laMATZM3vP8X8DiEH+Ro+AB0o2TPQ7z9xk0xrRm0fPtzRj54D0+8/1KzB
Q4JMGj64hvdj09XvP6/H9mWLFh8+lDtfKaPY7z8D58A+CD0cPnDwxu5y2+8/
7V8XjO+mHj5LpS60Qt7vP6CowyDFQhg+JlqWeRLh7z/JwmixhIQZPgIP/j7i
4+8/eaYOUTexHz7ew2UEsubvP2dte6h54xs+unjNyYHp7z+V5LWDxQoePpYt
NY9R7O8/iQk5+S1IGj5x4pxUIe/vP6XADq8HiRg+TJcEGvHx7z/u6bYdHPIW
PihMbN/A9O8/V20GBLfVHT4EAdSkkPfvP4ofFYRi1Rg+4LU7amD67z+4fPan
5xYaPrxqoy8w/e8/Zh/ru0rMHD6XHwv1///vP5j6Szo1Vho+XJ43OQ==
          "]]}, Annotation[#, "Charting`Private`Tag$19084#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.35082, 0.595178, 0.853742]], 
         LineBox[CompressedData["
1:eJwVl3c8Vf8fx42GbNcIlTKSrHylJPec9zXKDiUyk7SEhFBWZjIihKTMiBSJ
7BnJyt57Xfe6wwjZfvf313k8H5/P+Xze79f79f58zhG2eXT1DgMdHd1bRjq6
/z+17xA6a4jX0ZlNyrBKFwn2qQk6jQsoANWSyeOiGhnOJickfRdQhz/e1FsB
hWTQaesveC9gBGvd5Dm6BAqY2P6rjBawhXPF59WDbRZg9MwLtQgBV6BGzSXp
+C9BCq9+cKhAINzefzhoVmkV/Ji+n3opEAtG7sY5K8PbcMM0NW9xKQOwfRbL
M+EHcAvDRsxpgh9hQ2HJJj77AC7YiunONbWPwPaK4eKFXwdw328/EvwR+xE6
O71U1fcO4NgdkSBPxUyY6A+b9HU6iGvwHzQ74J0FNzPjCk30mXDyuVwHjjLl
ANTXSsjtHMI1yTZYt8nlwEhTsYreYWac9TePch/THEgm7vt69T9mXMSPcafJ
nBzQcPHq573DjCPUfBnO1PsM8w/3TXu0MOM+9Gp9+y8mFzrdBOpfxbDgWPb8
LDSE8sDLcKVlhYMNl/DAxEr6ch645wzvWomz4cR6pK25HPMg4dws21csGw7N
7r89XJkHlnF2Vzbvs+FKs+OKimXzQY++9YpmDRuOco1cofMnH/67/Zo//QE7
7vqn+BYXtgJ4kVuw8jmTA5dk6a97V7gA2lZd8M9LOXBTGIe2G+cKgP0kpUmx
lQP3yFu1HbEsgL7Nf0I6Sxy4l1cpXQe/FMCtNg4uxmOcuMpt1aF3ut9hse13
+7gNJ+6kIZXwM6wQjDsc2hanOHGCvhoX76UWwh214iY2EieO80tKGHNxIdRI
VYvw/+XEbTJdkzWcKoRtSZH+FQYuXEdNscvYhSKoTzzf1CbMhXsm57e7PlsE
Gv5/nm2ac+EeWQ3pJ20VgTbl3A2SDRfONvxsKnD9ANGOadOmB1w4fcKsWjD2
B2TNNNXpunPhxFK0X3LH/IC6VVOGx6+5cH84eHhkccUgOc8ULVvHhfuJONzp
vF4MOpKe2KVGLlzJw18/XB8Wg3tfCmNqGxcuvdHDtDyuGHqtPMiNA1w4D9/R
D5qUYoibBMOzVC6cw5fziySGEiBNrjHd/MuFsxmOVInkL4GKiKZ593UunJ6i
6kyvWgkgDT/OP2bA4EQWMk/fTiyBi4E1qD8vBnf4GJ3ngfwSyOo4++awIAbH
qmPamt1QAjM2uzKJQhjcv0yWR4uLJXDrW9e5e6cwuFYrp0JvjVJwurnOJXwB
g3P/owQJK6UQOJt4hN8Yg2OXLZptYiqDXtaifi1TDC4jQi5862gZyHuEBz20
wOA6dU8NWl0qgyHl0mYfGwxOqoXH5WRcGRhnYSJnHTC4OskoAZOcMjiTbWIf
74TB3QhlqQmpKgO758V3lVwwuCAtBjYyvgwyrno163lgcOONC5kFiuWQub9/
o8QPg3M79VBvRqccDowv2ZEDaPm8wP/ltS4HNhusFGcwBqd0eRT3NKQcYg9c
L5QIxeA6Pt6Yy0kqhztmI6HHwjG4u/t7Ikbyy0Ho5v5WhlcYXEx98xAMlkN4
UnXOh9cYnKTYZb/HlHJwcW03vh6DwdUE1J5Kp68AhTHv0O1YDI6iWuJ6QLIC
9MwrMo8mYHCBaWePXEArQDoj9MObtxicIENe7YOrFfAu3AW7l4jBadR+ZG97
VgGPjTGhGe8xuLETwkW7rypgSaZGa+IDBuf6PMlcLr0Ces96tLOmYHDME4cZ
bIor4MKmo6hkKgaXCjGfYloqQNBmQe9CGgZ3IZldv2G8AgbszUwU0zG4P7sv
V9f+VsAXtlOapzIwuK3K56pmRyth9rkMw9BHDC762DYhTK4SEgxqR5IyMTgJ
b/fISvVKOGFkV2uQhcFVjSyfW7hRCZs+zKWrNL6OdRw54VAJdckJrWGfMDjy
O6L/Vb9KOCV/Yj93Ngbnv2V7OvBNJdyRq30YRmN+84n2ouxKkJnNO7RK47wy
c7e5ykqIrlQg6OdgcJcF+48KdFVCsmAuZxKNR55e/amNrwQf0eDwQRo7D7Y9
8NqshKvxl+8wfcbgDilpcX5lr4JzyYEZEjROSaj/MS5SBUjK/LWLND6/DpZc
ilWQy3beG6Fxq0k5o5pOFTArK0rK0/h28fkc15tVYCXbactP402+AoNMlyoI
cN44v0jbL8pN5l//CxoTi3NKaSze9+n9oaQqWPwg3uxK48pzYurK+VVwPfFx
sjCNjd4kz9vXV0Hjtz6FGlp+8yuCrz8MVEGoxcdYAxo/N4pT7CBXwfsgtKmL
ptfhQq4xevpqiLXiGb1MY4vwLaMZvmqoeBtyNZmmb5rtbMsv6Wo4fpVXe45W
jzlsu2q2ajVEu2t1CtFYmre0NOxGNbC3NK9eotXPmZIm5+hYDb7vrjdY0Opb
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
iSuIuyhfoxx/nGV1b28B5ibSvAqlfij/DwgTEMM=
          "]]}, Annotation[#, "Charting`Private`Tag$19084#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.0823841540189054`*^-10}], 
               
               Offset[{2.9474590421921145`, 0.5590037518657127}, {
                1.12, -3.0823841540189054`*^-10}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.08593777611589123}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.08593777611589123}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.08593777611589123}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.08593777611589123}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.0823841540189054`*^-10}], 
               
               Offset[{2.9474590421921145`, 0.5590037518657127}, {
                1.12, -3.0823841540189054`*^-10}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.08593777611589123}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.08593777611589123}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.08593777611589123}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.08593777611589123}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{84., 6.500000000000019}, {1.1800000000000002`, 
                0.08593777611589123}], 
               
               Offset[{84., -6.499999999999981}, {1.1800000000000002`, 
                0.08593777611589123}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.08593777611589123}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.08593777611589123}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.001\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{47., 1.0436096431476471`*^-14}, {1.1800000000000002`, 
              0.08593777611589123}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.215009814421388*^-9}], 
               
               Offset[{1.4379457877594841`, 2.6329283908729377`}, {1.12, 
                1.215009814421388*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.8296858889175108}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.8296858889175108}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8296858889175108}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8296858889175108}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.215009814421388*^-9}], 
               
               Offset[{1.4379457877594841`, 2.6329283908729377`}, {1.12, 
                1.215009814421388*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.8296858889175108}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.8296858889175108}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8296858889175108}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8296858889175108}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.8296858889175108}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.8296858889175108}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.8296858889175108}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.8296858889175108}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00101\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.8296858889175108}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.5330005955521437`*^-9}], 
               Offset[{1.058567655080834, 2.8070330456937382`}, {1.12, 
                1.5330005955521437`*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.201561694466077}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.201561694466077}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.201561694466077}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.201561694466077}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.5330005955521437`*^-9}], 
               
               Offset[{1.058567655080834, 2.8070330456937382`}, {1.12, 
                1.5330005955521437`*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.201561694466077}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.201561694466077}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.201561694466077}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.201561694466077}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                1.201561694466077}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                1.201561694466077}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                1.201561694466077}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                1.201561694466077}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00099\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              1.201561694466077}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 4.694833160737201*^-21}], 
               
               Offset[{2.110376451504819, 2.132208065113236}, {1.12, 
                4.694833160737201*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.45781162690147165`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.45781162690147165`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.45781162690147165`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.45781162690147165`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 4.694833160737201*^-21}], 
               
               Offset[{2.110376451504819, 2.132208065113236}, {1.12, 
                4.694833160737201*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.45781162690147165`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.45781162690147165`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.45781162690147165`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.45781162690147165`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.45781162690147165`}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.45781162690147165`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.45781162690147165`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.45781162690147165`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.45781162690147165`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 134.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-5.141080317288188*^-10, 4.6674349927262515`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.001\"", "\"Old:VG=0.00101\"", "\"Old:VG=0.00099\"", 
       "\"NDSolve\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.35082, 0.595178, 0.853742]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910809628351778*^9, 3.911116105435546*^9, 
  3.911143695239004*^9, 3.9112414882595973`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"c77c3f86-8059-42b3-993f-7dae8ea5dd2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVGMinus3", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00101"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108026445451193`*^9, 
   3.9108026520866733`*^9}, {3.9108048840125957`*^9, 3.9108048874639883`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"c3bfab02-767a-4031-ab6e-51a1fa04d2f2"],

Cell[BoxData["0.00006826487558099709`"], "Output",
 CellChangeTimes->{3.9108096464914446`*^9, 3.911116124042693*^9, 
  3.911143720835832*^9, 3.9112415054661574`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"de906ef0-b7ed-4985-afc8-a3bdf8b88fc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVGMinus3", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00099"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.910802122148862*^9}, {
   3.9108022128506975`*^9, 3.9108022129259405`*^9}, {3.9108022559971285`*^9, 
   3.9108022587783585`*^9}, {3.9108026547373376`*^9, 
   3.9108026597940865`*^9}, {3.9108028161085615`*^9, 
   3.9108028161610527`*^9}, {3.910804890144172*^9, 3.9108048942683945`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"c50e7bca-46fa-46b1-9edd-f15a84bb8048"],

Cell[BoxData["0.00006828150742903155`"], "Output",
 CellChangeTimes->{3.910809664560598*^9, 3.9111161427140636`*^9, 
  3.911143746046664*^9, 3.9112415226728888`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"9c52947c-303d-4335-b5ae-d0ab7144e387"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVGMinus3", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, 
   3.9108026624465485`*^9, {3.9108028187562585`*^9, 3.9108028188143177`*^9}, {
   3.910804896950734*^9, 3.910804901797974*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"23a3257e-d6d3-4463-b47e-89ecbc049c87"],

Cell[BoxData[
 RowBox[{"{", "0.0000490174685757159`", "}"}]], "Output",
 CellChangeTimes->{3.9108096835760775`*^9, 3.911116162308419*^9, 
  3.9111437716014977`*^9, 3.9112415408686934`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"85fe3063-ca06-4227-bd70-714fe26b98f6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"VG", "=", "0.0001"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9108017637258387`*^9, 3.910801765800316*^9}, 
   3.9108022793394547`*^9, 3.910802845734502*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"334d7513-0c6a-410a-bbbd-854f83196066"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "0.0001"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardVGMinus4", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.0001"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00011"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00009"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.0001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00011\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00009\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.0001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00011\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00009\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}, {3.9108022853779926`*^9, 
   3.910802304053191*^9}, {3.9108026205523844`*^9, 3.910802636680106*^9}, {
   3.910802851401987*^9, 3.9108028969227853`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"ba032d5f-1102-4531-8b61-db208bdd29c3"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 43, 9, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108096838061285`*^9, 3.911116162373942*^9, 
  3.9111437717866516`*^9, 3.911241540966588*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"e5650a43-fcea-4fc1-9ca1-03c97dbf5e1a"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 43, 10, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108096838061285`*^9, 3.911116162373942*^9, 
  3.9111437717866516`*^9, 3.9112415410000706`*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"7266ec7f-e860-4597-b4e2-aff95cde9df6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
Tsb4P62QFi4=
          "]]}, Annotation[#, "Charting`Private`Tag$19516#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1:eJwVl3c8Vf8fx60iZFxSScPMJhQq532M7Jk9QpL6lpXMqOxCJTNFVhJlZWcc
e2Rl72zXNa6LFFn97u+v+3g+Pud9zvu83q/3+30ut53L9dtUFBQU1tQUFP//
1bxN6KldNEb8b8ZFVSHLQKPM6Tp5UgZqEg5kz+cug3RKQlLRSRXI9KEhTZ9a
Aa3OocL3J41gl//TC6WdFTC136qOPmkPE2cvP35ZsQo/JZ4pvzzpDit3U6+e
5FuH1GN6oeEng0GUbeO/4JZNCKArOh92MhYEpEKt7ynvgZl5Wv7aegbwdjiH
HeY+jJLGjOjTOT+CH2fqeXuFw2ioNd1tQ+WP0L+IXP1qfhgtuuXCWRr7EXy7
ezZORB9GmZwVQnxlM8Ey7PSPE1S0aFPgiMXhx59guLpcLneCFpXKYT3MRfcZ
7hv6Uvc9P4J+F2+y7ZT8DJbbV92w9COo7VfvyifmnyGbg8copuoI+rJ00nX6
82d42UVo3SYdQQm1uWOZOl8gOuYDKdeYHk0e0Ph6ISYHFp/6iCRzMaAM/wKs
1M7kw45OrUDUG0Y04T9Ta1HVfFBOb1gn5jKifP2itqzO+eDIJPJFspERRbKH
bo1V58PD3/Med9YY0W/Z8SVl4gXgT6wzeaN2FCUarlRpdRXARkxNGWHtKGqc
9ab94dFC6GXRT8kUZ0aTbgRqO3AXgsS2RVSkIjM6g3PqNLtYCNki1Z6WRsyo
y2OlHwo3CiH1V0JPog8zGnad2EubWwgsFJ/7quqZ0eo9pdFE7SI4ljhaWn6e
BeU3WCU0RBTDVtsrtnPZLCjnU7XLd9KKAe9CF272lQVlyU2NoC8rBvM217kn
31jQHTpDcYOZYph4+1I87jsL2l1b9nBCrgQQgWchCwQW9JFkwMH2fAnkC8zq
nuVjRV2sR/WSdkuA6g3ld2kRVtT+hXQasJbCtuKH2YtSrKgeYV459GopjP5B
16hQVpQvVTOMLaYU6D7+Faq1YEW7mNnZxdEyGDiw6ml6wYo2KDjd7jEuA47S
q0FF0axo+f3mUvf7ZfA9gqL+VQIr+qHF27wyvgzk/wQtHM1gRb2f/kxWJ5aB
1bjyvHgFK+qUe2ltmaoc3p0bZA6rYUXtxiIVI0+Ug3yvZVd3IyuqI6s0N6Bc
DuGX9o4K/WBFeUiZQrfelYOE7fyPvRlW9PhpCt/DBeWAuF3paVhgRRm1zDuy
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
jg==
          "]]}, Annotation[#, "Charting`Private`Tag$19516#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1:eJwVV3c81d8bJ1pIXBIiI/naZM/zXDMzIzJCZVWyQiJJSIiQnVQoQmVlb7LK
3nuvy73upUgZ9bu/vz6v9+t8znPez/sZ5zk8du4mjocoKCh6qCgo/v/VdcT1
NayaIYHs+/LuSnigVmf3mGGThn8Zi9wduXiQepuS9oVNAzLwgqz3WQmg1zVS
/JrNFK4MiklW/SKAucNObRybAyjnmzF9LyPClHiY+nM2b5jctAnf59mE9FOG
T5+xPQFVDpUfP5q3IOjYl/8i2BIgRZE5aA/2wcIyo2Bj8z282os2Sjp7BEua
MKXJZM8Ce5v+P5uKR7BPbY85XlbPguXeZC4V8yPYL/bu7GUJWRDV106TEXME
S++mEuovlw2pt5lSX/47gm0JHrM6EvABRk+bJHBPHsVKfmI8wnEsD3x7VlQl
nh7HfhNrud4lkQff/F1D2dOPY68X+VY/sswDZ6/nasTK49jnZTMec3l5wHhD
Ksh4/TgW1/B5ItvgI/gre0QcukyDfTOkU3Qh/hNs02/W49losbT/gqwvni0A
Ra7m6KEEOmzKbXNbEa0CSAgt+XfhIx2Wb1DkOqNbATR4yDt6N9JhUe6I/URt
AcjhvqTmrdNhK3OTSsvFCuHL6l7qmMYJ7PplQo1edyE4rqZfFyKewJrlJHd4
nSgG7ocbiXjhk9g0m2B9J55ieNrFTxpEJ7HzGNcuC5li6GiLUM0wPol1D1Dr
UbEphpMmI2HzPiexESbr/Uc/F8N9Wvbsww0nsbX7auOv9L+Atud+8zV+Bux5
YyLua2QJLNI2BXR/YMCyB15UvJlRAk1f2qKOFjJgGT6nR9KUl4Aif0+wWAUD
dvfYZTHj+RII6zA9odXOgO1tKPeali+Fu7l2x1+tMGAfSAT9/b1UCiamL/NG
eRmx7rbjhml7pZBxroCwLsiIdYiSygDGMvjixtm/IcGINcQtqT9VLoNnNV8f
1iNGLF+6bgRTfBkEfBlmemzJiO0+ycwshi0H9VXrnahIRuxXFVfHPrNyKPsb
neb/ghFbcae1zPtOOUSyyvaZJzNi37X5WlYnlQP9KvfaaCYj1jdw6o32ejns
KpcSDioYsa6fZTfwhyrglfW7s5Z1jFi7iRjVGNYKkCrYXM74yog1kFNbHFKv
AFZ1c9X9LkYsLylb0D61AjLXWc0G5xixpzkp/I8UVgAxtsAjbZkRS6dn2Znb
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

          "]]}, Annotation[#, "Charting`Private`Tag$19516#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.35082, 0.595178, 0.853742]], 
         LineBox[CompressedData["
1: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
VkgXkA==
          "]]}, Annotation[#, "Charting`Private`Tag$19516#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -2.5932392103026675`*^-9}], 
               
               Offset[{2.1116736575826693`, 2.130923359455105}, {
                1.12, -2.5932392103026675`*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.4539744801871677}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.4539744801871677}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.4539744801871677}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.4539744801871677}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -2.5932392103026675`*^-9}], 
               
               Offset[{2.1116736575826693`, 2.130923359455105}, {
                1.12, -2.5932392103026675`*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.4539744801871677}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.4539744801871677}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.4539744801871677}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.4539744801871677}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{89., 6.5000000000000195`}, {1.1800000000000002`, 
                0.4539744801871677}], 
               
               Offset[{89., -6.4999999999999805`}, {1.1800000000000002`, 
                0.4539744801871677}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.4539744801871677}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.4539744801871677}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.0001\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{49.5, 1.099120794378905*^-14}, {1.1800000000000002`, 
              0.4539744801871677}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.608347300325282*^-8}], 
               
               Offset[{2.9482509525905103`, 0.5548119686426642}, {
                1.12, -1.608347300325282*^-8}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.08465872155275894}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.08465872155275894}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.08465872155275894}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.08465872155275894}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -1.608347300325282*^-8}], 
               
               Offset[{2.9482509525905103`, 0.5548119686426642}, {
                1.12, -1.608347300325282*^-8}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.08465872155275894}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.08465872155275894}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.08465872155275894}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.08465872155275894}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.08465872155275894}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.08465872155275894}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.08465872155275894}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.08465872155275894}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00011\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.08465872155275894}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 9.029583155772338*^-9}], 
               
               Offset[{1.0588268830048628`, 2.806935273893256}, {1.12, 
                9.029583155772338*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.1926083804633596`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.1926083804633596`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.1926083804633596`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.1926083804633596`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 9.029583155772338*^-9}], 
               
               Offset[{1.0588268830048628`, 2.806935273893256}, {1.12, 
                9.029583155772338*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.1926083804633596`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.1926083804633596`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.1926083804633596`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.1926083804633596`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                1.1926083804633596`}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                1.1926083804633596`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                1.1926083804633596`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                1.1926083804633596`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00009\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              1.1926083804633596`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 5.494558759287384*^-21}], 
               
               Offset[{1.4385420104544828`, 2.6326026825477435`}, {1.12, 
                5.494558759287384*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.8232906528936457}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.8232906528936457}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8232906528936457}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8232906528936457}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 5.494558759287384*^-21}], 
               
               Offset[{1.4385420104544828`, 2.6326026825477435`}, {1.12, 
                5.494558759287384*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.8232906528936457}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.8232906528936457}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8232906528936457}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8232906528936457}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.8232906528936457}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.8232906528936457}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.8232906528936457}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.8232906528936457}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.8232906528936457}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 134.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-1.6183028241088942`*^-8, 4.633951909454293}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.0001\"", "\"Old:VG=0.00011\"", "\"Old:VG=0.00009\"", 
       "\"NDSolve\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.35082, 0.595178, 0.853742]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910809710488285*^9, 3.9111161886121893`*^9, 
  3.9111438079561567`*^9, 3.9112415638566074`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"43e57afa-b58f-438f-a1e3-fb3c082aa99e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVGMinus4", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.0001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00011"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108026445451193`*^9, 
   3.9108026520866733`*^9}, {3.910802920253564*^9, 3.9108029356201243`*^9}, {
   3.910804916429454*^9, 3.9108049343142605`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"104b2344-c836-4c22-b709-013f0bbcbc28"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.16209383335946762`\\\", \\\
\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00013868669745832862`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.5219240747126563`*^-10\\\"}]\\) for the integral and error estimates.\"", 
   2, 46, 11, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108097287760315`*^9, 3.911116207154001*^9, 
  3.9111438332357655`*^9, 3.911241580955455*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"62a6f32a-f8b0-42af-9542-5687931e9649"],

Cell[BoxData["0.00006934334872916431`"], "Output",
 CellChangeTimes->{3.910809728880643*^9, 3.911116207208542*^9, 
  3.9111438332983494`*^9, 3.911241580984195*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"87cc0a5b-72c9-47b0-bbfa-6155d6eaf0a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVGMinus4", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.0001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00009"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.910802122148862*^9}, {
   3.9108022128506975`*^9, 3.9108022129259405`*^9}, {3.9108022559971285`*^9, 
   3.9108022587783585`*^9}, {3.9108026547373376`*^9, 
   3.9108026597940865`*^9}, {3.910802923947401*^9, 3.9108029380760612`*^9}, {
   3.910804921795312*^9, 3.910804935750843*^9}, 3.910806041499301*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"61d05773-1f6b-4a4e-aae5-f1d5cc8c5eab"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.16209383335946762`\\\", \\\
\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00013869827279614828`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.406439300684233`*^-10\\\"}]\\) for the integral and error estimates.\"", 
   2, 47, 12, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910809746817114*^9, 3.911116225669529*^9, 
  3.911143858388606*^9, 3.911241597864439*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"1953c940-950e-4b10-b6eb-c0accb8009b2"],

Cell[BoxData["0.00006934913639807414`"], "Output",
 CellChangeTimes->{3.9108097468714333`*^9, 3.911116225726111*^9, 
  3.9111438584396844`*^9, 3.9112415978800554`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"f73b3e75-faa2-441d-b1bd-a9ee04bf06aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVGMinus4", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.0001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, 
   3.9108026624465485`*^9, {3.91080292688105*^9, 3.910802940903279*^9}, {
   3.910804928163669*^9, 3.9108049367570424`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"3d80b4ef-2088-438a-8223-a37f10981c5a"],

Cell[BoxData[
 RowBox[{"{", "0.00019048297591002576`", "}"}]], "Output",
 CellChangeTimes->{3.910809765331104*^9, 3.911116245046582*^9, 
  3.911143883321461*^9, 3.9112416152389126`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"67c01e90-ca6a-4ccd-bf6f-a1f6bb6e8b17"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
              "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
      "**"}], "**"}], "**"}], "******)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9108030966756754`*^9, 3.910803103484496*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"aef13741-39a4-430a-8285-35842a3d0ff9"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "haywardVGMinus1", ",", " ", "haywardVGMinus2", ",", " ", "haywardVGMinus3",
    ",", " ", "haywardVGMinus4"}], "]"}]], "Input",
 CellChangeTimes->{{3.910803152564843*^9, 3.9108031675137005`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"9ec84a6a-fe5b-4a96-9bd7-5358dc54bc07"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
              "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
      "**"}], "**"}], "**"}], "******)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9108030966756754`*^9, 3.910803103484496*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"761c78c2-1e82-4ac3-82dd-9d611df93088"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<reran-path-integrals-simulations.m\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Kimura", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_", ",", "n_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "m", "}"}], ",", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"4", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "m"}], "+", "1"}], ")"}], "*", "x", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"m", "+", "1"}], ")"}]}], ")"}]}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "x"}]}]}], "]"}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "y"}]}]}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], "*", "m", "*", 
         RowBox[{"(", 
          RowBox[{"m", "+", "1"}], ")"}], "*", "t"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.910397283076168*^9, 3.910397286937806*^9}, {
  3.9108031156299615`*^9, 3.9108031194869895`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"42cf727b-69f5-4de1-95cc-61bd437da0ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"haywardScenario1", "  ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Kimura", "[", 
       RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
         RowBox[{
          RowBox[{"pints", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"haywardScenario2", "  ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Kimura", "[", 
       RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
         RowBox[{
          RowBox[{"pints", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"haywardScenario3", "  ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Kimura", "[", 
       RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
         RowBox[{
          RowBox[{"pints", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"haywardScenario4", "  ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Kimura", "[", 
       RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
         RowBox[{
          RowBox[{"pints", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9103972979755397`*^9, 3.9103972992260227`*^9}, {
   3.9103973521769767`*^9, 3.910397366449611*^9}, {3.910397423952426*^9, 
   3.9103974482517166`*^9}, {3.910397495050064*^9, 3.9103975145748453`*^9}, 
   3.9108031121454325`*^9, {3.9108063776985064`*^9, 3.9108063872052593`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"429972d2-00ee-4c7f-ad99-671bf486a07b"],

Cell[BoxData[
 RowBox[{"Clear", "[", "pints", "]"}]], "Input",
 CellChangeTimes->{{3.910803178847371*^9, 3.9108031816621447`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"e82e0a3f-8df2-476a-9ea9-a57ebb56e7f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Scenario", " ", "1"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"selCoef", ",", " ", "genVar"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"selCoef", " ", "=", " ", "0.005"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genVar", " ", "=", " ", "0.002249954"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9103976448668547`*^9, 3.9103976932189517`*^9}, 
   3.9104022113188157`*^9, 3.9108032156840916`*^9, {3.91080350600694*^9, 
   3.910803506165435*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"2d4e44f9-21b6-4b98-8d95-17d8ef5a5a21"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardScenario1", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.002249954\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.002249954\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.002249954\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.002249954\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}, {3.9108022853779926`*^9, 
   3.910802304053191*^9}, {3.9108026205523844`*^9, 3.910802636680106*^9}, {
   3.910802851401987*^9, 3.9108028969227853`*^9}, {3.9108032508819113`*^9, 
   3.910803314120039*^9}, {3.9108033573104753`*^9, 3.9108033676004925`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"d0f21884-6f73-4574-b7a1-28afd24b1872"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 62, 13, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910811538886733*^9, 3.911117751374226*^9, 
  3.9111453970484915`*^9, 3.911242768435263*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"ce4d70a5-55dc-4091-b2d4-cdac98f2e577"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 62, 14, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910811538886733*^9, 3.911117751374226*^9, 
  3.9111453970484915`*^9, 3.9112427685706625`*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"305b2f22-a5ad-4f28-bf51-54ce9e53e0cf"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
y2bMeF7G6HhR6yoWQsC7sXa58ujR4GGVXFZaPAGf5/rlSq0BnQ9bTmRFAQH/
u+Wj7U0jGuw9vTLN0kPAaynF20ia0OBsKCV97xIBH/QkyKLTjAZkdTH/k3wj
+PolN5MH5jRQz7Ryd9UewbNbnzU4YknHPHPTHHYj+HhhRc2n5+j6P+fZ/vFp
BD8YIHRU5yINdl/f+zCIMILfN8qsuGhLg6oPJmu17KP4j+lDEhZXaOCzGqw2
4TmK/3Ioko3HgwYHLI+tSdDzWb1H8OczL7pe0Y9lqzzH8Pn3Pjzlv0W/rz1w
t/7HMXz6z0YRIT8a2DGplz7YM46P9NyhKB5CA41yqz4dej2dKQqxUEykAX8e
n4Xr8wl8y0VegbwkGphFXRIPLpvA67OkDym/okHYqOvdxNEJvIZ17RXVVBpc
POFZtSEziRdb/eernUWD2Y4F94z6STxJ637yyWoatEjhxS/hiHiHqd32LTU0
8I8YKdXQJuKHolOkzb7RoL6bamV/g4hvJXzOMf9Og5wg+QjvOiK+MPBvtU0X
DZ590GRVDpzG36u7M3V1hga7Hnz/3sdEwvMYeyuEcM0CJb04MeUSFZ9au4dD
i2cWYk8H6nO+oOKVNXMpi3yzEP88TojcR8WfkiNnXhaeBbmUb9aJZ2j4Rzvt
JHVkZmFn5vEme+tZPMu3kwIMWrNwKWQf+37nefwfbUmGwKuzYIJ/W3vq+iI+
vKh6VO3aLERo1BwueLKI5z906cuc2yw85JybOVS0iD8q8uKurdcsjHVat/Qy
LeG91navHA+g748wfKmbsoSnFK9RNp7MgtSRBRal/mU8QbGj279qFjjfCx2v
vfcH/5bGc5/56yzcxwXPXP34B+/4n+X+x7WzME/s5opt/4OnyPT7pTbOwvHZ
W9KMEqv4P6Kje5s6ZkFonn1XV9sqnod91oV/ehY2t7RUNw+t40/MsG5+4pyD
/zZ2Je7l2cTven8y4xj3HBTZlxnY6W3iWy9Hn6rjnYM7JKbzO25v4i1HuNJ6
BefAJvflnvDOTbxDD+7EpuQcaGstFagmb+ED6qSfnFSfg9zUEfywyj98/huQ
IdrNgYP3mZE1Q0a0fHeZ9fLlOaARVPpcrjIidZsPtJErc/CAtkyLDGREn/fs
Keq/NgfhTzQttOn/C43Bozot3nR78vmrn+SZ0LDjffvCiDnoaRIT7ORgRjsP
fE4O/jQHWu/eXuHaZkEnmT0Dt/LnIPmBovHTfTtQzJiU492iOfiYcalRFduB
eJIeHfQpn4MLn6P2eAftQGK7LpS71M1BE+FobsCOnUiFttZ7qm8ODt8pceMU
YkW2eeo8e7fn4G25nesbm12o9MIaVwfDPBhk+6ZdD9qFuHZW7g5lnoeZ/kMB
m//tQjWX8GwUtnmoWS3CZv/tQlLs+v+K+ebhydt4B8937GjGyWLO9OA89NzV
FNb+x4E8RG78uGc1D6oD6+87J7hQY4Ni02GbeZC/Z9DiKb4Hid9cqJ88Pw8e
9iKdQtZ7EH3arUu4NA+Mp+9YCd3fgzqavGuM7OfBNMos2/LTHqTi61/G70b3
z+bHvwOIG622R2TkBM3DnV3za7PcPCg4PO0BIWuePu8/8ZZp4EWcd1iNL+fO
w7vovzuap3hR8jV33pm8eTiSJSUvvcWLikw03y0Uz0OnYbaZthofmuHprGf6
Suej067LmM2HTN4wsB3sngdC0KUS98f8SKDMPtZ3Yx7CIpb8TgQJoHcfG87+
3ZqHY/6bw2sfBZBy8iHxIIYFYNZMNb1RLYBO3l/Ni9yxAE/Ei2BypyC6pxfX
+WrPAhh1LfPEPBZEk+3V/HXSC+Cc/fTO7XQhlEve+4rLdAHOlWORMYsiKPJ1
uMPoqQU4UBpToSEkipzOzMl+sliAtHARUqShKBKrqso3s1mA2RgrVVqiKHoU
d7ExxnEBeB+PRn6yEEPX1F8usvsvwPR6CQdPw14kFcZvxJq5AKdlE1N5vSTQ
9rF7nP0fFwB/KhL5xUugwbmprszsBRD8sl1y6YMEemJTZHuiYAEIxVw9r8Yl
0D/5M7fCqxYAElpv5RtJIkJn3Bvm7gX4e0tnNfGgFCqPWL3S3bsAaq93a62Z
SaF4bfuD7wYWoOJPqIOqixTy+tU47z28AElsJiXFj6SQSYZSse7oApx4O/lB
45UUqvT7+eMBZQHY9zruviQujRIV1eIsZhcgNTYjyeKYNLo5mWIlubAAk4EH
/ntvJY1MX7CILC4uQDlbPXOstzSSM70xVvN7AU7Ke24zJ0sjFsae909WF8D0
6S0FnmJpNF6i7ebwdwF+JH4Zd+qVRlVu7w4rby3A6+RPZg1r0uiFOMfKv38L
MF7BY7nBJ4P+B6Qtkqs=
          "]]}, Annotation[#, "Charting`Private`Tag$19967#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1: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
L+JGRPnRu2NMv/79o+jnUC7zU44f/Q9AlQVD
          "]]}, Annotation[#, "Charting`Private`Tag$19967#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1: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
f1vgxiUsaHdXT/Z/W3Gl0g==
          "]]}, Annotation[#, "Charting`Private`Tag$19967#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.337393078180889*^-9}], 
               
               Offset[{1.42618608479914, 2.6393168152999937`}, {1.12, 
                2.337393078180889*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.9790424129153452}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.9790424129153452}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9790424129153452}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9790424129153452}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.337393078180889*^-9}], 
               
               Offset[{1.42618608479914, 2.6393168152999937`}, {1.12, 
                2.337393078180889*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.9790424129153452}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.9790424129153452}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9790424129153452}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9790424129153452}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{117., 6.500000000000026}, {1.1800000000000002`, 
                0.9790424129153452}], 
               
               Offset[{117., -6.499999999999974}, {1.1800000000000002`, 
                0.9790424129153452}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.9790424129153452}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.9790424129153452}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.002249954\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{63.5, 1.4099832412739488`*^-14}, {1.1800000000000002`, 
              0.9790424129153452}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.7584957474196578`*^-9}], 
               
               Offset[{2.0847804430890884`, 2.15724141071723}, {1.12, 
                1.7584957474196578`*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.5474249668390283}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.5474249668390283}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.5474249668390283}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.5474249668390283}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.7584957474196578`*^-9}], 
               Offset[{2.0847804430890884`, 2.15724141071723}, {1.12, 
                1.7584957474196578`*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.5474249668390283}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.5474249668390283}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.5474249668390283}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.5474249668390283}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{113., 6.500000000000025}, {1.1800000000000002`, 
                0.5474249668390283}], 
               
               Offset[{113., -6.499999999999975}, {1.1800000000000002`, 
                0.5474249668390283}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.5474249668390283}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.5474249668390283}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.002249954\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{61.5, 1.3655743202889425`*^-14}, {1.1800000000000002`, 
              0.5474249668390283}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 6.733005630867512*^-23}], 
               
               Offset[{2.9306048432536667`, 0.6415257225537812}, {1.12, 
                6.733005630867512*^-23}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.11580918003968002`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.11580918003968002`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.11580918003968002`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.11580918003968002`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 6.733005630867512*^-23}], 
               
               Offset[{2.9306048432536667`, 0.6415257225537812}, {1.12, 
                6.733005630867512*^-23}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.11580918003968002`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.11580918003968002`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.11580918003968002`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.11580918003968002`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.11580918003968002`}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.11580918003968002`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.11580918003968002`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.11580918003968002`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.11580918003968002`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 161.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0., 5.449382397844367}},
      PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}},
      Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.002249954\"", "\"Old:VG=0.002249954\"", "\"NDSolve\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9108115665146446`*^9, 3.911117776895032*^9, 
  3.9111454218649125`*^9, 3.911242790772935*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"04af2266-6cee-40b0-bfaa-7ba51d97be3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardScenario1", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108026445451193`*^9, 
   3.9108026520866733`*^9}, {3.910802920253564*^9, 3.9108029356201243`*^9}, {
   3.9108032881039443`*^9, 3.910803290290577*^9}, {3.910803324770018*^9, 
   3.910803326972967*^9}, {3.9108049697157607`*^9, 3.9108049705892305`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"22b17289-e711-4f4c-a64f-38c3d6fbe77d"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 65, 15, 28771884763955561247,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910811585804244*^9, 3.9111177971586075`*^9, 
  3.911145441272134*^9, 3.9112428089900694`*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"a0d8514b-6ab5-4a49-ba89-5625bb1461c8"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9374844583594676`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.6307984555187232`*^-11\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.785225341802605`*^-16\\\"}]\\) for the integral and \
error estimates.\"", 2, 65, 16, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910811585804244*^9, 3.9111177971586075`*^9, 
  3.911145441272134*^9, 3.9112428097228146`*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"7350e73e-9565-4fc3-987f-502042ad6073"],

Cell[BoxData["1.3153992277593616`*^-11"], "Output",
 CellChangeTimes->{3.9108115866556196`*^9, 3.9111177980587945`*^9, 
  3.9111454421913977`*^9, 3.9112428097386084`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"c41daf8f-ac37-436a-8a46-f0d1c9dfcded"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardScenario1", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, 
   3.9108026624465485`*^9, {3.91080292688105*^9, 3.910802940903279*^9}, 
   3.9108032981903443`*^9, {3.9108033397481766`*^9, 3.910803341230857*^9}, {
   3.910804973505129*^9, 3.910804974226571*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"62bce0c7-dd17-4fe6-a5f6-041d97543068"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.054171069697532416`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.000019710076666446608`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"6.192618807387872`*^-11\\\"}]\\) for the integral and \
error estimates.\"", 2, 66, 17, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108116112800183`*^9, 3.9111178282215023`*^9, 
  3.9111454720380483`*^9, 3.9112428354440536`*^9},
 CellLabel->
  "During evaluation of \
In[66]:=",ExpressionUUID->"3b8b2634-3600-4a2d-9eb6-4ea5f9130bdf"],

Cell[BoxData[
 RowBox[{"{", "9.855038333223304`*^-6", "}"}]], "Output",
 CellChangeTimes->{3.9108116113041077`*^9, 3.9111178282424355`*^9, 
  3.9111454720590296`*^9, 3.911242835459679*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"fbe91517-beae-406e-918f-32dea33593f2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Scenario", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"selCoef", ",", " ", "genVar"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genVar", " ", "=", " ", "0.007050979"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9103976448668547`*^9, 3.9103976932189517`*^9}, {
   3.9104022113188157`*^9, 3.910384000757211*^9}, {3.910384066276121*^9, 
   3.910384094852061*^9}, {3.9103841499873133`*^9, 3.91038415076552*^9}, 
   3.910384223707341*^9, 3.9108034977828293`*^9},
 CellLabel->"In[67]:=",ExpressionUUID->"5dec2fdf-8951-4aa5-a73d-a5646c5eda5a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardScenario2", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.007050979\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.007050979\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.007050979\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.007050979\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}, {3.9108022853779926`*^9, 
   3.910802304053191*^9}, {3.9108026205523844`*^9, 3.910802636680106*^9}, {
   3.910802851401987*^9, 3.9108028969227853`*^9}, {3.9108032508819113`*^9, 
   3.910803314120039*^9}, {3.9108033573104753`*^9, 3.9108033676004925`*^9}, {
   3.9108035300513897`*^9, 3.9108035576488266`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"659138b2-edc2-4574-a9c0-b9c60260cc8e"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 70, 18, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108116114339056`*^9, 3.911117828353242*^9, 
  3.9111454722422953`*^9, 3.9112428355712276`*^9},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"db00e779-eeb2-4311-a624-ce7e94a80f2e"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 70, 19, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108116114339056`*^9, 3.911117828353242*^9, 
  3.9111454722422953`*^9, 3.9112428356105113`*^9},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"7bd8ffcd-67de-4716-aec8-31279b7d37a3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
KhEMhc9Fnrmyg/38AL1bd5UIFpymfrRPtrHrLR/NH2lS5+sbnhir2cL6x/gb
dF0ngp1UYnbUlU1sPK+4QqwJEWh+rIvGPV/DDj3huXTlDhFmk0VvPBpbxZ4c
pxdfMSfCVWPlIyxKq9iPmcOnDe4SoWr2x2go0woWvRDGxOFMhEsyZjtHHElY
ud5jbXGuVH0URCIe6Sxhi/w+xHK5E+HK8PVtcV0iNrOtiY/HmwiqolEyLA8J
2DCXA+KnnhPh6eH+iN8f57C0PAkrGcFEaNrHlgb8mMX61gp9PRNKhLVwvDHH
2gzWiUMNzr4iwkW1tnA3tWnsjS/PDcQTifDnwXf5aqZxbMsdTu7PyURYOX1q
Y9h/FKvGkDks9YYIo3d4bg4fG8HK36y7K5NBhE8jTAbYhQEs/9Y/T6U8IojL
jL2w9OvGLig+TblWQ9XjHVY+t7oWazXDatlSSwTjVxLrwyFV2OGIVMHrP4jA
WP/GcORnObZ1tKpA/ycR1BtqLsWP5mNLnv2pMe4mAnPHF16FmZeoX73XzL15
IhwtCRi9dboe3XBg/LiAJ8LAQS3Oz44/UGdMkuMDIhHqYxWedrc1ota2Xzcc
l4kg4MeRdxH5haof3GD0+EMEen99x8OGnSiHlpvYc7YlkEg6w3JZcQDNqDvC
osixBDlfJFY45AZRKYVPhBXMEgzGHvBR2htEdUXwOda8S8Ckp8TM1TiMvjxo
IXBFaAnytdTb3xPHUIYf17hpFJeAvuqyXuGlaXRTSYDm2b0lqDjkuHtfHI+G
fKkZl7VfgrW3bqvv/fEo1wUzlOSwBIkKZlcj9vHo+8ydN9lOS+BeKKs3qkxA
L/El+Zq7LoHkwkXGNR8C6rrNuqH8ZAlmx6tYzk0tooTSbcJuzBI8Lsx2T8ki
oaPinT0+1dR8P4iS4jRW0HQix1P670swfzX7dKDlCmqTa3g2sm4JxLdO3jF7
vYKevZ/Qwd2wBKHnQ03DPqygBKEB74ymJVAIN8goI66gBdM8Z0R/LYEYz3hY
8P4K6ppxu+VLyxIEORbTMxxfRTePj59o7lyCUvQHbdmNVZSDeek+19wS5Poo
WxwwW0N7m8U53i4sQe8dtt5XvmtocohL5bnFJVDGOq1sVK6hd1SL7xYvLQFP
vRdcrF1DT9KusSpRlmDXb/lm4ugaOl0j87VhZQnS3nXLEXbW0Gy/x5a661T9
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
f/8o0BW/g55ykEb+B+4YdWk=
          "]]}, Annotation[#, "Charting`Private`Tag$20367#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1:eJwUV3c81e8Xt4qQdRFSycpOZuR+zg3JHqXQsBK+ysiIVIgQWRUlKbKKJBmZ
Hyuj7L236w7uvZKQQr/7++u+3q/n+TznvN/nfc7z3KPO3ueuMzEwMBxiYWD4
/6/xdVJfA/kCgm3Z1IaXK8CiJ+IzI6wGBxl0Un32/wDVjNT0UmF9OPlFPP4/
8x9g0jVS8lrYGuRyzgv09v4AG5dN9KmwC2SzpYfZjqzC1PFovXhhf7CpeLn2
ZmkNMgUsomKFH8IhhnVrO8nf8ICt9FiMcDL0N3UEB15hwMmdffKoxCcZEizz
q7IeMOD6I73JE23JkAWW8d/yGHCSzAoflG6nAJuOuDrTKgOudSdHabD/Oai4
d/ofjWTEca49Vz8S9xIyZtW2iz8w4VKngvXKd9+AapDNus4KC87W7u2nH6s5
UP02vdvq1D7cyoQ1e5ZILji1ei2R7PbhouzZrp/XywXtE/9JuAXtw5Ve8xb5
kpwLfPMtzELl+3BcXtjIu5p5gKlkPHVGkR3XEj52ae/9d0B8dpj/tRAHTqWQ
d68oWwFEc5fHjI1x4r4rtTh2KRdAYsx/G5RfnDjHz0E1IXYFIDeWrDTHvR8X
/2XGZ66gAN7I9NveOLMfR2r4OJFn9gH6D9oIMH3aj3szZPT5xLNC8BMx7Re8
x4Xj+PfgytnDn+B9Cssp/DY3LvU/G3sFg0/AUSgl8GEfD05yUMGR1+sTiJ+U
2+rn58Eh+SPXJtBP4KqiZL0ix4Oryn9eXqFUDIbHhJntLvLgqOcptSbdxbCS
2eNAyOfBqe0bwSLzxfAx2aKIrYwHF1zXWKe8UQxaiRZawnU8OFbZFw0Chz9D
oJjKLEs/D+7o7unmGc/PQGarurdniwd34f2LDr/9JcCUHb2eo8eLS78abup6
tAQGBlDFd6a8uHk+zy5b9RKIa44/9uICL877vm4P9moJrNqfMsS58eJizlH7
WT+WgMaEb9aXGF4cuq07/sq0FNStisOOd/DiWEoULyc4lsLoGX4fjgFenLGb
0GSYfyksfDw7OjjOixvpo05dTy8Fg/pAVuUlXtxqXurccUopLJbmvWRl48NJ
WdFIXx+XQZ8sA1kLx4cTCT2r7fa2DG7Vr07eO8uH4/mY+Zi9ogwE2sUW8835
cH/YzitZzZfB/sGpE01X+HC9DRV+0yfLQY/s3rYcyIdrofG0PDAvhxIPVdfQ
ED5ctaiHoJRLOVynxh7eeciHyw0SrbqRWA5KDRPzX57w4YKVH+z+XiyH1VWL
TYkCPpy3/bhF+t9y+Fxw8g1bMR/OJU71LfB+gXKCg+9IOR/OgrSoF6XzBW6N
OBWrNvLhJDONYzDPvsCLz70/CMN8uG5ufn4lXAXUth56o7PLh/uK9bzed6EC
vPxPybUyYXCVN1q/+N+ogLtzDqrarBhcdluQXc3zChgUzxmZ48bggkKn3hhS
KyDiDOtxZTEMzvOjxo9lpkp4LU5155LE4JwnEk8nClWCPznm0sgxDM5MUxc/
pFcJtuH1kbLHMTjxlTzZa2mVsDmwtdyjg8EdOMRwd29xJaT+U+pnwWFwnCZ2
nfktlSCR5/RFUg+D28zj8P7xoxIkJ+QzpIwwOMqgS8OzvVVQKnu9Yq8pBjfP
VMerKVoFOHT6V785Btdp71N2/2wVZKe+Y1O0xuCa4r7vOXq1CnyNyGvVFzG4
impxm2bfKjC8bKGkZofBZQkObbG/qQJdzeO1pKsYXGC3FqT+qgIzrZjbl10x
OC6l8sXvbNVg/DB3n5Q7BpcTrxz3V7QaRkMPEyb/w+D6TI+N2Z+phpLHMVkH
PDE498Ks0CS7akhh83+e5oXB7XIclm7yrAanxA9/OXwwOPkOfj+p59UgdUpK
r9qXnp9ckrBNQTWsxGO1N/0wONtYjoZHddXA3WbeKR6AwdHIUa7V/XRsxsqC
vY3BRRox7acQqgHDqEw5E4jBiebfLz30txqu/PuQiA3C4ErYtuwsuGvAzjFo
S+IOBmfo7s/wQKIGzLY+qG3R8UzbSl6JZg2EHgo0RYMxuNvHbpjhTWpA0EHC
1OcuXf9owpqAYw04WWKA7x5dH4JT2ln/Gth7pkk5m461DKZwdx7VgBemWUHi
PgbXm2tLLEivgWPDzchTOnbdMxg/WVwDLh8f+f6g420XCzWulhroC1sewIZg
cM+a28dhrAa0Gme9gulYTtLgwS1qDZjI+Vnk0XFDROOxbMZaKH3Y/KCRji8u
6HQPCtSCgft+vk46pupW+u+VqwX23XTOVjp+mKV68CRSC2+aRu9/omMRpk+N
/52rhSpDHd9HdFzsJOf+ypW+/td2w5KOzzbmcnUF18LfuSHBfXQ8LXa0fDeh
Fu44es8W0/P1D0u/rJxdC3PbGw6GdMw+e4DJuaIWTI6ez+qh838Lz94/66iF
lemQMgM6PpnBZdEyUwtDn2OyP9L1696NWd9YqwU1/Rf3WOjYxX5PugwbCrIq
M6YmdL3/omG6l0RRUO0qPBpOr8fTQ9ukx8oo+Mzas+XT6ydzPzAR1Ufhjr8b
VwO9vhd0vCbFPFFQ4MouqqP7gfKKHH7uAQqCIOSS54/Bhf91kX2YgkJYr5t3
CN0/n6ov3yaiKPAR5uv+0f1mIDIiKtyPgpnG3OF8bwxu8s65r8YEFN7uc+DU
o/tzn5YRTxFXHZxWwH4zvIHBZaY2f5kRr4OMhK2SMrq/NX7DVV7NOmiTol7j
pfv/WoVGgb9DHTh6E6xeu2BwfwRLLPP86iBfo/1DpzMGl3RbcXMkug4syJl7
qI4YHKouqX+quA6kP8SvMdD760AZ7zQjYz0wFARYB9L780rcX2u8YD2cytDt
3bWi+81lsaNVoR58bcO0AywwOAWBqqrHtvT9LmvSx40xON3bjikCxfVw/a/y
vTEEg3tkbsz5u6UeApYDo8dPYXBd0moR4xP1IOZnINpxEoMrXI6o7GFugH1l
Z07cVaHzSbfJSz7eANJhTarCUhic3aPOuUjtBrjg96089SgGd8//9KHAMw0w
pBPoyHYYg2s0lU+2u9wAz+x9wioFMTjTnd0Hh6MboHoVI25Pn49O9nlX3083
wHHOX129i3y4h8YHX74kN4B1y0/XK3N8uDyNpMHYXw0wzBvlMzbJh6NwBZt4
sjfC/FKPzPsBPtztejMtFY1GGPgeH5jWwIeLE1vnr41vhKaPemv4F3y4L/N6
nT06TWCoOd+Uq8OHGzZ8sBp/tgm4bhlt5Wjw4TaK6gRNzzXBXtsnZanKfDjN
u1pO39ya4OHfTnZ7ST5cJeb4RsPTJngpquvpzMGHq9IXESshNUFOyO+mayO8
uNq8H37JyV+htNlJdJh+nzZ5vD5oR2kGgWtyd0a8eHCl5Bs37Dea4R6bFaek
Gw8ux1275hpDC3i6v/zh4cCDi3QdueTF3wLptxbJRAsenKEzb1qETgswHWQ2
yVTmwfXYRQoVxbXA8I3nvMrz3LhJQ08BZsVWkL85cOXAFBduXRrL/dGzDYBv
9Lcxyolj2vrAc1CqHa60JI/ZrrPiNP45fjlf1AkKEbf+mj1nxnU+VOtulesB
t6HN11oG/0Cbu4PpiXoPeNz544CX+gfvXzppXsb1wHs7kfNv9/yDiKKEzJUL
PcD3UYDjXMsuaI+SfIUe9IDe3lSPpDO78F7+9QGPkR6Ip5jciTfaAV1yePFe
3V44FjzoN+/wF44kLW/l03oh4DjF7Mi3TahzCs0vWeuF/eextZFFm2CvirGr
+d0LgZ/kOHeTNyF9WLuyk6kPlok2VySdN0HoUOztFcE+GGgpYzXc2QC+Apk1
NeiDXpsTAVSNDdjTfJ1Sn9gHE/Zze6srfsHy5sz0kHI/jAQqM5murMIXt8Qm
Y41+uDHUWukxugphI0he/al+4BMjmr1pXAXBitee+Qb9IBZdzKifvAq6ty9v
37vSD91/ythjtFch7dewsOSjftAbTpRYj/0Bhqtd1r4z/fAxntXW9jYNME73
TxLx/eD+0murwowG070KoleW+uHolf4BkKKBf/HjhTPr/eDWX7XRNkiFDG8j
X2GOAai9uUe3Up0KG9TmxAaNAYgxCO9j/7cMOUs17VwJAzAVoX30XxEZvF5Y
SHg8GwCs6QcPymMyaOov3G1Jpe+/curqrjsZ2l+zK97LHoDmNypriRJkWLW0
SyRXDkDB8el+tzQSIBUb55sXBmDf49SEsQQijEWcmLqjNQi08S0/raeLkKXc
oj6EDMKSndhKit8i3JyyTVDWH4Tz40ef8F9YBAbNMCCaDwKH5vZaoNAiSC91
v7V2GYRxP52xwUw8+FvedD2eOAiZxppcgxULwHXo3QoePwg/yZNxprtzgLsY
MbVAHoT5Z6bccYtz4Jvo0DFPG4To79njhM45GGYUejf7exDk32ow0l7NwRvC
I/tJziH42FAfhjs1B0rFHl0DakMwXqfeuRgyC2Z6Sh+aHg5BwzElYzvVaQi5
x/6yMWYIgke2sU5s01BcTohqSBiC7hB15ldTU8Avk+FclzoEj1kx7tmPpmCS
k0ekunAIhj34XJnnJuHm8Oqjz4NDsPfY2bDptAmI+6/cNVNyGJ7c+xmwdmIM
lnAfH3HIDUOd8aO19n1jcFYot+D28WHo9uqxH5kbBaa2ZJqp9jAYmedqJzwd
hTuS/re3LIah4dbFIq+NEXCdUYk6d3cYZvaNDPe0DcPpC8W5LP3DwHnLsqKe
rtsbhfdt3iPDkGRxo2bYcxC2mTPJ45PDkCVr/FbUdBAqSxIVPxOH4YKbsrXa
vkFQ4vEuv7ozDFXyCscSIgdAtEOx5YvMCHT9zMQ2RfXDBu4D3j10BCYmYtoX
83uhNmf5VeDDEai+GvyfU2IvhLMpnI+KGYEN7OIAQ0AvcPUWNmY/G4GE+etB
BbhekHYoejP9bgRikd8MxqU9cPH+Z1vr3hGQO++QrCTZDeVVFZ1wdBSiXD1m
KZodEHzod4S59Cg8uzt724SjA3APTp66Kk/XRbcZJU23Q6dhVX6w+iiw4GWM
p6PaAT9SHVVuNAr71d4vfBz7DvwbKE7edxQ2LiQOZMd+A3+V5jLBr6OwczxZ
SlioFVzVxDKffBuFFtZbOsUrLWCrce8xZ/codKunqUS3tcApbTVnprFRKJ/o
DV4LpM9N3RxuGo3+PfVcde1EMyRaPfRoERmDAkeeus6ir1Dgoy/m7zsGRuO2
TK1hjZDum8mxEjgGcU8i3zc6NEK8//bGf/fHwG6+LmUNaQSfoLIuh0djIOa7
Lb610wCaYZJ3Td6MQUoRIh0R0gDNiSzD4u1joLG/Wyyfrx5mipof9x0dB53O
+1489HdeL5WFonJsHA4+O+Mefr4GGhTOmCYrjMNO4sxt0yM1kFnQwmmjOQ4P
hhiWCBXV4JzXGj9pOg6YFlvCMWoVEF5/SyQGjoOLe8TnW26VQI3rfLbTNQ4n
a5PKf78oh+kOzl/2A+PQhLy4GeNZDt3sZtYNo+PQsC4/fE2vHIoedfFHLIxD
4gkPzK+VMvB52J3CtjUOhDDXpNumZfDrbu8LjOQEXPqyPf2OrxT+egy+kg2e
gJBYyeD13mKw1rj6RCl0AnoZyv5pfy6GQkZClOrDCThab1pb/qQY7FM3b2ET
JiAr2OWD0fliaGwRMbTKmoDQOzFWrZ8/QbSY06+g9gkw/oYb1Jz4CJhhquk3
kUnICadN2t8ugJtvb+t2HZmEIDn1tUN6BdB8859mv+QkPHzVV6nOUwC3mXkl
JpUm4Ydngp7nh3wYU1bbWtGdBCFLTQxt8T1kPA7OPXBjEjJzHbxbPd6B/GnW
XdeaSVD6EevhXZwDxQUfjo02TAIu76jPVEQOqPFbWhm1ToLDSHHWW5sc0CGm
5sj3TYJqxH5zOYYcMI+XM/lBmIR57hsSiheywXfMLPUO3xQcoz32COHKgg3d
n41LB6YAwcpr7Se+hbuFz5cvH5oCy9bPj8j1b+Fh6AyCyEzBprrwy0e+b+G5
1K1FJmQK2oNIiucmMqHqVrJK3H9TwKzvNnUmIAOQiZNXdrymILTp0u204xnQ
pD8V6eU/BRl7eOWCl95A+wHpMcvQKXjZHSw04vQGJtGKUIGUKTC26ZqgXHwN
DOwTnW8a6Pktfi+utnsFZ7OOun0+MA3bX5zjqmpegFoql3Sr6DTkQ1+9QcwL
EEv4ix8/Og3pL91Y1G1ewJ87Q84sCtNAYfVRVvn1HD5axdjb4Kbh+pjaudcq
z+n/k1Yv7LhPQ90ZhlcfGpKBYXOKn89rGmxj9b7tPksGCqV9QNpvGsQ8zsvn
uyVD62iOleX9aThgd0ubkScZ7hTbmmU/mYb3vjKni1yewYxDg75R9TS0sZ/p
u3foKXRe+MhsXz8NI0bl1bvrT6DSJK3Jt5k+x38OjXZ3P4Gnmv649O5p0N62
TbR58ATOcMvorMxPg9bln4Lb5CT4UJeomsIxA4Fndy6cepoIgYccxOeuzABV
M2Dvi9uPwdlS+eKk0wwUy2w2X9d+DOYRjLEjrjOw+ieypnA3FqTJ2atdPjNg
ffPbn4xHsTBYRmqofjgDK+qPiliyYkDZ1NchuXAGbnxRu863FA2ioXrPEj/P
gE85izRzeTSwlvC3xX6hx9NouOgQFg3TByqUHjTMwKKzMYONUDTELfzd8Ryc
gRHWwFAlsyggBUemn92egX0MkRfGvz+EpYvy7m8ZZuGMn1iy7KuH4PgDw3SE
eRbm/c/nj958CCYSi+oibLPw69r11PO8D0E8Jvo1D98sVDAqx+XbR0CvdefN
HalZeH5Ax/k0ezgoUC5wjJjNwnFa+ge306FQaW1aH2s5C7mWQSuuayGgh+r6
IednASn1ThPKC4FLCccncm1n4a7Y75vx+0MgRnnfB/9rs3DVjC0qBX8PCP61
xnx3ZiH2TVj78udg8J0q2W25Owuh0kpcN7yCYedMfskd+r2M/6a3GSUfDPwH
novMRczC6snR14nv7oBelffSp4RZ8HjDu92QFwSZO+KxZjmzMHeJze9Jw21Q
cBVGGN/NwpDip0cGUbehopv7Z1n+LASK7E48NL0N3RnbdqKfZqHFPL8odTwA
dk4Pyy5X0fXZYc3c2faHS1Ex3x/1zEI054Wr3+z8AMP9g635zyykErjNjt30
gX40NtpoZxbGFf+lDun5wNObUnt7/tHzOSvFP3PQB/jaLzGPs8xB8Gnjy4xp
3sAX2bKzwjUHJw4RXg26egHP37SfByXm4CNv6Z4AsZvQm69+663UHFhH/6HF
j9+AJNveFWmZOeiUOrH/bMoN4P6yh3pCcQ42usXKkzlv0P9n+BDPas6BJkNO
3x0mD+Aknpn0M5kDkaS2mfPs7tCZMntpy2wOBlqD1ka73CBO/+5YiOUcuCk4
31964gYcWcXDMRfmQIhf6nzRQTdgv3qwL8NhDhrPeYm8VHcFtoEfLR1+c5B8
YO4DU7gLsNS/+iSRTufD2hLQFeAE4zr6hjNv5sB5Iq533xkn+FRNmU17OwfE
UTWZZn4n+tzH8vG9mwMD2xCFonJH+Pxxxp+hZA52Q0KNvf84gH26hPZU2xwU
NT5hPqd/FdREOvtT2+fA1vCzVcjqFdiX6n/DumsOXuweK47IuAJlz1rSO/rn
4OfucDjv7mXgeOz2r2pqDoJ+RpYwtlyCyjsfmp+vzcFo2o+SiCBbSNg8f/Xc
xhxwyWRnXlSxhWsB2+v7t+ag+vwLYTzFhq6f2bFI+jtyt+3py2MuNnDdfSXG
b988aMdaHRG7fBH4bFQtLI/Mw2dd7X9X/7OGG2o1Y/tM5iE2Ulrh319LaOgd
Kqw0mwfjSZfGhXZLEPD8EepmOQ8eTrdOmKZZQn2ulHTLhXk4WolPyta2BMyB
JN8wx3kYH9dffMpkATVbLhybAfP0+2TwW5uxKfA8D53ODZqHDPf6T8RNE7iu
kvbZ+u48pBhStMm5JsB9o8emJGweVv75+TxiMYFrk1o5no/noRHv1v2nwwg4
6rmw+Mx5kDoSMD3+4Cw4XpbleZY9D6utCQwHdM5C+abewum8ecCb7anDbBqA
g/KdmIwP89BhfsDjrLcBlL5dGLr0ZR7M2SP5r7mfgcsPK736OuahleAjMHxX
D4rFBk6Hdc/DPZu7VDitB3tQKv/xvnlg9Zf7ZsaqB5/WxWvihudBo1mHap6i
C8xu8ayGc/PQrfZfdlXlafhg5JxZtzEPO462nv0HcaCmcBSBrXn4USHzlGsS
oI5rdqL+7zykuzdMeDwA6B24eqCRYQGILfKk1W4Efl21S/jKvgBMLD9s/vhj
AfG1vPft8AJM/CgJYFvWhjZrbhGjowswWL03Ium1Nlhqdld8l1gAvGv8TZKl
Njhvm6y1yyzA7eM7nf+qtCA66qxHl8oCYFiY4lNSTkJvGmLbb7AAO4Lp6Gcf
DbC7v7N+zmgB5LWSxi2Oa8C8Q+2zAZMFCDz59nMGTR1+SWr3DFouQFrWsVQz
b3UQ/qRuMHJpAZQOrXuUBKmB81cFtUmvBRAiSG0oFqjAcu5y35VbCzBvdIl2
2E8F/B8VeE/5LYAu2hr1TkcFos1kPkwHLcCvkx+f3uk7AYUjEuJz4QvwR+th
ySbjCVhfFuEhPF8A++5+iZN/lCD5NbEt/eUCHAnKeUBLUQJVi7LQ8+kLQPo3
qTyoogS3SsxWGt4uQF7DXgMxH0WgBoV1vypcgKnTTf6Ov+VhcQ8hzqppAfjw
/ftadGThYUWJPlvLAjQpnLv0iywDEv+Fbte1LcCu38svR1NlwKlT6KZCFz3/
76GWNzaPwdRTExPW0QXQ7rUZuNkoDUNHPu9DqQsgvLWbMhwmCf599xv9fiwA
j/Gp3GwdScBEGN+RW1sAY5dhov6WBFgRFkgvfi8A280nd//4S0BXoeA3X2Y8
PHc89t+PAHFo0boXJSOMB4fsvSh3uhi4LBsiMwfxENfocJ7LRQyYXwtspBzG
A9u8eSGqIAanGT5dZ5bEw7rMoLRZ2BFAW+f0p5XwUNDs2DwwdQjKz59lTtbH
g2ukhKDIkAg8MqmMFD2LhytrgV9uhYrAFT1ZtlwjPER0Snl+lxMBJlWO/V/M
8VDalrrX66EwmPP1CI7a4uEIQ+4g6AkBqfeinKgnHkwfYzJqKAJQ862tMMcb
D/FvtLWGcwUgoeHkcUVfPBjd4M1ucxAAtWIRNSQQD1G3tm5LDfPDg8RprOMD
PByd1fOI68SAiLmrVU4KHpIjCk4ITPMC9czIgEIq/fzLIbwJ2bzQgDW8WJ6G
h2+sdz9W/8cLropyl1sz8PBbM0vo2G8eKOWkuZDy8XDs0t5hgUM8YNoREKRQ
hweF09tzhhz74chXwp+yBjyIMVIYiAWc8LPa5j72Kx4sqnrFPptwwssCrXDz
b3goPqM8VJPEAYSYncc+/Xiojc2XM5dhh1DDyIwyAh4WGdJXXsWyQr+9+xVl
Mp2f7qQNE5YVJANMhAuX8UBLm/hu+2MvtL/lfZb9Aw9/Dwkwd9jtBf6/r6Oe
/sFDTNfEeLDmHnj/8YunD9cifKkTvdZzkBn+fH0pR+FZhPZzwpaMk0xgNn6P
6IZZhMYKo9N/05ng5149JwehRejU+82PHGUCHccea3PxRfidxby/UYURevlI
pxQ0FiHE7vfJypVdRFy24/e7k4tQnHUriy96FwmAonKJU4ugelw0qurILiJy
0//4QdwifM1mcZyy3kFcWhgk2I0XwarZQIK/+y/yO1CYnXR1EXxwXqYCW78R
44Tt1muOi9DkFFkSmv0beZ0zEzHjvAjBWLRkx/w3otuXuzPstggWVidTj+Vv
InFyKqsttxaB41N9zPh/G8jRKePR7MhFcOnhXhQQ+YXENp36dOHRIvDozd92
7l5Dfr5TiGJ9vAgn9CP31USsIU2+XGo3khYhbL3XKXz1J+LC1p+o8moRxG1p
oRxjq8h7VbuzjcWLkDH6796NghWER9j4sF/pIrBg0+77nlhB7uxqr0t+WYTr
5FgphWoaYvxdNPtRzSJ8HOksyuylIsv2s7sWrYswsGJjvsZDQZRi3b5MTyzC
8YwTj1+Nk5Dn3rbxSdOL8FI1V8EgmIT8szZy0Z1bhItRm4csD5KQ3iPyfHmE
RTBoczPxdiIit8ppnp6ri3Cqt9ni8s4iUjYbILW9lwD2+Md5oj4LiGir6/bH
fQTwGg8czZdYQCI/2Aw4cBLgxlX2/edG55GLt7UefOUlQOuQlwZefx7Z5NiZ
jBUlwN/0ONN3cnOItubDZGEVAlCcjXRFTKaRYWdhjddqBGhg9SzSGZ9C/BKK
RsQ0CfQ5xMm77DGFFC6OisjoEGDGcerSSNIkcjhZ8a2GAQEGJt3fXaONI0yr
wx/PXyLAqGHozjHKCPJG9KbFyBUCbJRzRH97MoKcMmRcveRAAI1o5jcFJ0cQ
/wx5NWcXAiyMaHSKxw4jBLOwah8vAjQrs3DdOjWEdBTItsWHE2Ct3cjo0GA/
4j5c584bSQBh3T1dfx/3IyxM1uwp0QQ45jqXP63fjyB2IWbpcQQwd6PWZFf1
IcWsAwMFzwlg0Vn/uKuoF0l2uTfbVkCAqoZ4l/cxXYhyEm+4yUcCfHfcU4sX
7EK6avIkej4RYN88zaoltxPZi+lzHS4jwGtrha9XvnUgQY1SVHwdAfSFDGxN
xNqRK4d7thgHCCC/gbFIFmxDuIR9y2uGCLDDIljzr7QVacQI3AoYJcDuDV/W
3+daEel9l0mkKQL0DBp3B6a0ICtrhOEeEgEKyd7OAgrNSBYt5mnMMp1fDyph
OPQVsSYrmOvRCPBpjVFiIvQrUjnt2/JljQB7BgpGOceakPDvu6WvdwlgmK6v
xvuqEVFrfuttw0iE978dWCrMGxFinb48LwsRpB8US6UwNyKmZbFZD/cRIaVt
MIHo04AIZAg+ucFPhBD5mqDOkjrkvb+Sl5YcESw4Bqz211Yjl7z7ZNcUiPT7
O3tQ36Aa2e/hv1h4nAiZz/umr/dXIb4O1VfE1ImQZCkzbvCjEjllbGDCiiNC
B4erSPXpCoSmT97bqEsE9J7JhO/4FyQT4pqCzxBB9fqk66T/F4RFvV+LZkyE
sU4vqXdF5Uj3EXuZoQtEKElT0HFTL0PCRBjxCbZE6E5x+PtjvBRRFcjJMLxM
hNP5jRO/H5QiqexLgrWORGhChx1uDJYgzusBe7JvEGHJ2Ff2VOxnZL09ft7n
ARGKtDsdH/9XhExyDLlvRxCh4nBNkyHpI9JkKroSHUWE89en2jj/+4gkdRf8
ffOYCMG/rqzG+BQicv1t/F0pRLjHn/s35nkBwoPhfmWbSj//x59vHyQLkM3z
F4/i04hwTKek62VZPtI8hFf8m0EEIaWMH/Vj7xH7McazsgVE2ExhmLxz8h2i
L2LUVVZIBKtNPKI/mIfIX046j/tEzy/0wN+8W3nI78nDjjZlRNAtCWM/9DkX
eTp76k5kHRFqGMf/SermIK3EgA9z/UR4FVaTVvvuLVIog57wHCLCj3Pf/a9c
eos8+4+l8vcIEYgyGxE6XG8Rx+WnzdxTRGCUKljNv5OJ/KF9msISiZDn5O1+
A32DzB7fvPadTASbsZEruepvkDYfZMmaQq/vBb5hgeLXSPLPzo0bq/R6CnEH
B35IR45vkLnT/hJB7rvfgGVNGiKoeeK51C49v3rNR1b6ach2YJDoZwYSVN/k
DzHoeYm0b+2V/baHBNqnKB9pS6mIy46E7gY3CVx/MDq7nnyBpLLY+5+TJMG/
2tSQeqlkZPfaAfU+aRI0rnkec+t8hrh87V23kCVBuU83T6T/M0Q5XC/QTIkE
BZKeB/d/f4p8+ycTbHiSBGFIjGtx+BNEyWFeu02bBKYJpWGeak+Q5LpXf89g
SSB8mofqT0xCHO9z3dfTJcG+hw5GFlZJyOaftVDElARYPuVaQ7cE5MqljzjU
nARvZXa2z03HI01Vrow6ViR4/dgmLccmHkkIGgvXukiCSaez1ZuWcYj0Rl2k
miMJNlzCZdyvxiIXV2Mey/mTAK/3h096OAqptdQzzb9Ngkt252IyPaMQ8eJt
Tpk7JIDIe7Yze6MQmpd3glQICXx71PweI5FIJMX6idgjEig3K3nONEYgSyZc
5zJiSfBg0c6gwjUCsfzQxnc4ngRo9/7sg/sjEFEP7eSDT0mg4nnxr599OFJG
PPJCMJ0Elb+KRsr5HiAiZ8dsUt7Q1//FBpt8DUPC8p4K8b8lgQn3SjgSEIaY
Xt+TxptHAsMq3VKT6lAEP7+UzllMgnqy/HZN0H0EM12exdRMAqa132Sq2x0k
gfP+/YpWEpSVNr6uXAxC2E/p2978ToIXJ7zZdq8HIUyp/fuHu0nQ/We6pdoz
EPlptRKUP0av7+kh7/nUAMQr7Mt5+0kShKa/0lCTDUCWiu4rYWZIEPtk5lJ+
jT8yx8GJv4cnwZ7KtuUugh/S2yJjYblCArvU2ZJ9F3wR018rsnt+ksB6r8dL
5/VbyDfxCpbqXyRoudMpkfTiFlIfeqZa4g8JnI6WhVnP+SBFWs5SmyxkCNMR
fYbBeCNxH1/9fS1CBrWUmLhxEw+EbdJ5+NwhMthumXMcaPgPecgu95lVjAz9
Le/9+DT/Q+66VbrekiLDox3zGm5Fd8Tj6FCfvjIZFiW5Bpo1XRGCRXrhlgoZ
vhdJnUttuI44h1yLLlInQ8KT/77WmVxH7CZWdYROkYH3ac+9HXcXxDCF6/3y
GTL0lZ6IXkadkeavQ+GZhmQIENbS9bF1RnA/069eMCGDjc9W4cYvJ0TTQh5T
b0kGcvzY901VJ/r9YRjy9DIZkF5drotPHJA99x9Ya90iw3/kTeOY2EtI2Spl
q96PDKzsJbnvGS8hLq62GQa3yWCnd0335l07pNni+NL5u2QY2ltDe37bFnko
PhXqFUmGWqXJXKnYi4jaC0Op9Wgy4N54io3xX0TwHGXtd2PJMFXtmzj19gKi
vx4rEJNIhvTEBWOnJmuE5dvJD9kvyVB8VkSjRPQ8UqaTYymXToZPKsMyVpXn
EJfP3BvFb8iQ8fHrO8KFc0hzGgFXl02G3osOIQ3PrZAIz+Th0Y9koDyRJZxW
skSYMD8YuZrIMJr4Utj/kglSEn35XXIzGQ4sKpcd+GaMOG+3mh5sI0Om2I5F
2EljpGnx9QuZTjLEJzo2jx01QsIrTRT1hslQAsFeHAJnERXFiv7vo2R4cPKV
iHmqATL/VjzIcoIMHg8nJjYPGSC6j7ears7S64tBkj4qn0EY7d/ZBi3R62X9
BTN9Sw8p7ufb3aWQIXAt2qeFVQ9xPBuSHblChrT/al8UZOgiDcoXaE9/keF1
uQJvzdBpJIyZ+eHHXTJISK6k/rPDIQz59p/m+Zbg4i9m84N+p5BWyohXhsAS
bLBTm5i7tJE4ZSulK0JLcGCOt0tbXhs5UKn3cejQErwq0QnJWD2JKLXJfPgm
swTCa32puHcayC/2LI9I+SXgY6rKPnJIA6k2Pyinq7QE/ppRl7+nqCNnhvfn
16gugXUmXks1SQ25svgzrwhZgtEk5nXGdyr09/tN1xun6fEIpofSVVUQ0s1F
KRn9JRDqeSbe0HQC8fs1kvPWaAn2OrLXx5OUkVhmNCvZeglsHWIc92UpIZZn
NZytbJZA/AG5w2BeERF8/Oko16Ul+GTzQFFKWhHJ4svKjHZYAnyqwHulGnmk
6mj0m2CPJRhutq3GC8giIdcZ7DU9l8AorjbuyW0ZRD//zqFf3ktwSS0J0z12
DOlVvpnuGbAEr1l+Jr8qlEZIYJXmGLYEXnWHma4GSyJFEe12hyKWIFlzy/LZ
ugTi36YnPB65BM6Rnxqz/SWQf+YaqecfL8HAvfZTqnfFEUH7g88Nni+B9gfu
/Nn3Ysjk2+QLzC+XQGGkSlRaWwzJWtwv0PBqCdz8TD4qZB5BFD0ZkrXeLkF2
Z0CcM+NhRP/e4hOFwiVIqhZ1ndkVQdgb7K3IRUuQ+vKdt5CxCNLLPMqT95m+
n2HQ+vcLYeTy4/bEIxVLYE4mmlfghBDftE/xfE1LMM5HEln5KoBUbKdFNzUv
gatlTDyvigCybR/1wLdtCSQ+BCX/fMuPREtcDejvXAKSudA5jjgMkl7IfvXp
yBIIZM7qnI/mRea4Ni7qji9BSPbpyPP7eRHpW3OWPyeXYPLdS16P5zxIsXql
/rn5JTjxM/vmjiM30lJ3XYGPugROu92ExxycCPtRK+mmFbpfGMVeCOA4EMsI
HTHfn0sgv2JnUxfGjoyfxfD3by7BD7cGnCLjPoTW2/D3CdMyCGqwU0x09yKq
qoXrp/csw7ZQyTzXqz1IUMqLlVXWZUCbE94mbLAgzJe8Fqz2L0NasRn6qo4Z
EVo42MErtAyMZ8VfrAYyIlfPsLY0iizDtPshLZ4lBiTr3c+6W4eWYbxhPOTF
DQZE4eb3kj5x+vfDPwOet+xiT6/fTnuiuAxWx/b/cmT8i42ycU4+rbwMtSoy
7cFH/mA7q8wSVlWW4cN8GeaP/hb2YohkuNXJZbhX0CWEf7mJ9WDt/49XbxlO
ZC+95wz9hf30H3qt8cwyDMTI8bK3rGF/dby/estwGXzaN4QuYdawoUmhVn1m
y8BsoxBV8mEVmyysqPXEdhlu/vfBi0uDhh27K6R6+vIy/HY9wca8h4o9PM2s
uHp1GYRry+45jS5j32eNi1ldW4b/xlW3uXPIWFT+ERuvFz3fJh1L2WuLWI3B
A11PfZbh+OhyVfllPLb43rsn/H7LgG+g8lcHLGCzulpFhIKWgVX+e1/I1zns
I+89ikfCl0Gvtzq+tGsSyyiUspr5cBlKTunus1CfwAY3SH4Rj14Gl3Di8YqO
Mawnrz5Ix9HPax1tZBscxp4rDbdSfL4MSe8qsOJKfdiOy3yCn1KX4eWwLn9+
RQ9WnyVrXPnVMrB7yQlbXOjC1hWeyCh5vQxN+oOVnnPtWM0LjdfUMpchQFCg
eXKoDSu6+S/gVMEyFEX9Ze98hmKJ2vfTjOqWoYBv/Hw/z2PUcYHToaNhGfap
8XJ/a8hExx+nS5h9pcc7e+tCo1Ye2jlZU2j5bRkW4ssmcDslaEnInzqb/mXo
sRxQv6jYgMofi40YG1yG6DTD0bTeRjSnR9jw8sgyHPHbnl0/8BV9IabVZz9J
1+Pnvnfrd1tRnu/fUmanl6EjvbqbMNmGxt6yveQ8twylkXtNXzZ9R5lFSIfx
C8tgTjvNo3inHb3XFLhwnbAMlSRp88Wbnei6B+t7ImkZtgp97keqd6FemBc3
/1tehisn73K3sPagTi5f1m/+WAY+HZ3BhM+9qMHedVb/P8ugHi/LIW08gDYU
Pexc36brd+SoEbPwIKplw/8k8N8ytHMbrxz1GEQV3quK3GWhAKZ3detPyBDK
a+yrEM5FAeM51pUp0gia2cjNoc1LAW37p494n42iylofyasYClxz/ElUYR1D
64uNv+ULUqDXIq7nSfIYai5DynMSpsBSoOe9i8rj6FRGZKSwKAXKI78xnw4f
R28ekHDpO0yBzZBL35slJ9DYvfZHT0tSIM+wI2CWdRIVDvn777c0BRSVX6Sc
nZtE36+nThfLUqBSQu+V0N4p9KSnBuquQIGecZeqfaFTaBt+4JXYcQoYTJh9
d5OaRi9euRU8eoICYgdl13seT6OEAS67JDUKvFLSMsXfmEEDTAo1DTUpsO7S
17znzgzK8tVIkEGbAqt3+RStRmfQZ9rEXxU6FDh5Qem/SpVZVLzk4YA3UIDF
aK0PcZlFP8uKlxzTpfOvyHETezaL4t7WJ83oU6CbPevL1alZtEfoqveLsxTI
5hG1Cl6dRe2T/phZGNP14ecTjMPNoTTWVAVWMwqck3Us+31jDr0fqs5Rb0EB
yws6Mb7v5lDOzX7y7XMUONzf/Yutcw5N9/L5pnSBvr8t5bS6wjwqT9j/jmBD
AXWf3BPjV+bR6qsfIt9cosDBnPB366fnUaMhQ5eLVymQ4wbOfB7z6KgpQZfL
kQKnr02EltfPo27NEUdbnel6HKXyPt+zgG6cOsoQcp0CbN+XNn7xLKCRpXXT
6u4UmJQ5GUVTXUD55a+gVA8K3E9RO60Xs4DmZG29yvWkAEdC3OSP5AVUVeRF
8FUfCkhXbV08mrWA+vzmXNe5SwEknGMk0QyP/vMuGPh1nwJBCSn41mI8mkA8
W1IYRoHMnNyJj2149JDDYpJLBAXmSnresX3Do4XD4d6iUfR66iAT2pt49JS5
mPngIwrE+eRdiTq0iLa3oApxjylgW83RkimziF7CXubQT6B/f2PPZ7iwiJLL
fpP/JtFxSNC30wmLaJDC82+lzyiQwb4YPZa7iLLlqL678ZwChiIW7VWpi+iL
g32REi/pegsHrIj1LKLSz7xcJl5RgLGusLLn1yJazs6p9+wNBQi2rSSznUVU
Pzz/qMlbCnwS0bKX1SWgA1sGDMw5dP7Y0swHpwmo8y38dHUeBfDHYjoDnQjo
KukB6ptPgevBd790pxDQMMcj6XKFFBhtHDJEqwkoz2ht8HwRBU69FGbb20VA
Mywu2aV9ptdb1SBthpOIKrVtap4ro+ez3zQQVIhoHZIiyF5BX7erdEgWI6Jm
X1TWG6soYDcj6G2uQUQnFXsH7tRS6PNEL8f3OhHNWOa9z1xPAYWwuOFMZyLq
nH9eOr6RAhEx7alZaURU2i2lR7CZAkNvD8brPyeiZMmRoMxWCqg65QReXCai
hfNC4nLfKdB804k6tUBEfTIvdZR2UEBoukjVmUJEVe3T/bHdFPi6yXrcbpiI
bhycPtTWS4Hgojs/fXaIaPXYkTbLAQoI9yf/u6VBQu+/cPIZH6JAosWUmYoU
CcVdyBZ2GaX36x6pE4u6JJQFs9hEHafADS73vfvkSWhbr/TNwCk6v8u8E7pO
JDQ2wV2AcZYCSbYsvpv/kVBz04K62HkKfNj2ZpmOI6G87BQ3/kUK+N0MCMxN
IaGDbYq8b4gUCAH96KvZJDQ10rv62BIF1OYP7l5ZJaGX9T5f+0yhgMYDIVW3
HhJ6mHGN89QKBerrJJoMR0nofJ3al+ZVCjRe5WYcmiehufduO5j/okDtHz5V
5SYS6q5dyTa6Qa83R/kbI34yqvB767PTFgWqbcJmo/AkdKX81OXlvxT4mRF7
8O8JMlrid58lYJcCxzPFk/zp+2+fqP+4y0CF72vVEjVnyKjWCoPNI2YqnNTU
cjTcJqHbhboMfHupcJBzWFowi4w2eDzMf8VGhRjKYkyEHxmNkGk9J8VBhcr2
xPknlmTUgMC6XbSfCrle97r6T5PRfTlGuSd5qOBWj88+S4/f6fTYvImPCn+w
PWENbGQ06UjXpokAFTpd2hQbgIyen+J6O3SACgvazdwHfcio4CtLYwcRKsxy
KvjsiyOj47ZP10iiVJg5nXGPpkVGXwsOpvseoUKx//71w/R8HAcFDLaPUqH+
cWbRUzsyKvnUZiVSkgpt7oWX/ntNRokWL1O5j1GhZr09XtOTjBbsnzj9UpYK
OwxPKJv0eF4dosviClRwfvvwzStTMnoixj65UIkK78srDb9pktFfBplYjRNU
4Fb16JtxJ6OVLPOEelUq2HgRe7Lo+dxtkkgy0qDCPnf5rRP6ZBQJu641cJKu
F3u6j5AGGWVC3s1fOUWFu41QP3CBjLb8JT0mYKmQnR/S45tARh9Vyan74KjA
8UaX84wKGTUNvDm9pUuFwznyZtbKZJRbvSg64gwV1pM5k0Xp/Pp/rijvN6TC
37pIKQ66/s+LT4w/N6bCOd67lw9JkFE7L78IMTM6H7fLkRg9MiqqUK5QYEGF
d19980S2SOgseWNI9RwV9igySQxukNDsdydDUWv6eWlM5r+YyKjr9WCZszZU
qOrOLzg9TULlJGr7eu2oIOrFZyHvSEapszvBl67Q9bz97qIYMxktfgOSeHsq
ZC5IiG80kNC14DVWJycqPBXzPVAbREI1bN4tT12j+2Urof58FQkNUr3cc8mV
CqtfrTQ4IkhoDTd36Yg7FW6+m9vr6EJCd5ebnlvfoIK6g/7J3Bh6v367Hdzn
SQX55COvLtuS0IgcOXtzHyqw2x6rGpQmoa1h06c7fKlwdV++LrGZiLJdfSpl
GECFJZeHF6Xo/W+iZbCvJZAKQ9ekOS3riWiCwB/K6WAqXC7SdNYnEdHe1Y+9
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
          "]]}, Annotation[#, "Charting`Private`Tag$20367#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1: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
/wHIB7Im
          "]]}, Annotation[#, "Charting`Private`Tag$20367#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 4.287470794713352*^-9}], 
               
               Offset[{1.4344519123791581`, 2.6348335262539404`}, {1.12, 
                4.287470794713352*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.869115148873916}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.869115148873916}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.869115148873916}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.869115148873916}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 4.287470794713352*^-9}], 
               
               Offset[{1.4344519123791581`, 2.6348335262539404`}, {1.12, 
                4.287470794713352*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.869115148873916}], 
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.869115148873916}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.869115148873916}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.869115148873916}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{117., 6.500000000000026}, {1.1800000000000002`, 
                0.869115148873916}], 
               
               Offset[{117., -6.499999999999974}, {1.1800000000000002`, 
                0.869115148873916}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.869115148873916}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.869115148873916}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.007050979\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{63.5, 1.4099832412739488`*^-14}, {1.1800000000000002`, 
              0.869115148873916}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 3.550900334077822*^-9}], 
               
               Offset[{2.102783042066905, 2.139697052854878}, {1.12, 
                3.550900334077822*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.481468586053003}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.481468586053003}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.481468586053003}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.481468586053003}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 3.550900334077822*^-9}], 
               
               Offset[{2.102783042066905, 2.139697052854878}, {1.12, 
                3.550900334077822*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.481468586053003}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.481468586053003}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.481468586053003}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.481468586053003}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{113., 6.500000000000025}, {1.1800000000000002`, 
                0.481468586053003}], 
               
               Offset[{113., -6.499999999999975}, {1.1800000000000002`, 
                0.481468586053003}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.481468586053003}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.481468586053003}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.007050979\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{61.5, 1.3655743202889425`*^-14}, {1.1800000000000002`, 
              0.481468586053003}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.7898561121996317`*^-21}], 
               
               Offset[{2.942705135911074, 0.5835121961729568}, {1.12, 
                1.7898561121996317`*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.09382386539437476}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.09382386539437476}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.09382386539437476}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.09382386539437476}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.7898561121996317`*^-21}], 
               
               Offset[{2.942705135911074, 0.5835121961729568}, {1.12, 
                1.7898561121996317`*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.09382386539437476}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.09382386539437476}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.09382386539437476}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.09382386539437476}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.09382386539437476}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.09382386539437476}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.09382386539437476}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.09382386539437476}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.09382386539437476}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 161.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-3.5816344648771145`*^-10, 4.8738396864691405`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.007050979\"", "\"Old:VG=0.007050979\"", "\"NDSolve\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910811633060796*^9, 3.911117850776639*^9, 
  3.9111454944286346`*^9, 3.911242855966839*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"f3020029-bb9b-4102-8a01-c07c7d5132dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardScenario2", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108026445451193`*^9, 
   3.9108026520866733`*^9}, {3.910802920253564*^9, 3.9108029356201243`*^9}, {
   3.9108032881039443`*^9, 3.910803290290577*^9}, {3.910803324770018*^9, 
   3.910803326972967*^9}, {3.910803533876922*^9, 3.910803533925921*^9}, {
   3.9108049807466664`*^9, 3.910804981386099*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"f3331a37-ec25-4da3-95b2-bc200cfeebd0"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.8964688333594676`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.655249591944213`*^-11\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.098500623820706`*^-15\\\"}]\\) for the integral and error estimates.\"", 
   2, 73, 20, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108116521263065`*^9, 3.911117871245207*^9, 
  3.9111455139226975`*^9, 3.911242874612599*^9},
 CellLabel->
  "During evaluation of \
In[73]:=",ExpressionUUID->"5414f96c-55f3-4772-99e2-2489dc1a4896"],

Cell[BoxData["1.8276247959721066`*^-11"], "Output",
 CellChangeTimes->{3.9108116521435366`*^9, 3.9111178712552667`*^9, 
  3.9111455139576464`*^9, 3.911242874612599*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"bfd863c9-c318-4519-b1c1-6c273ea8e361"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardScenario2", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, 
   3.9108026624465485`*^9, {3.91080292688105*^9, 3.910802940903279*^9}, 
   3.9108032981903443`*^9, {3.9108033397481766`*^9, 3.910803341230857*^9}, {
   3.9108035389388466`*^9, 3.9108035389870763`*^9}, {3.9108049836176863`*^9, 
   3.91080498443919*^9}, {3.910805028655528*^9, 3.9108050295777826`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"47b6bda0-cd9f-478c-9bf9-40a16df7dc24"],

Cell[BoxData[
 RowBox[{"{", "0.000038562581275769815`", "}"}]], "Output",
 CellChangeTimes->{3.910811672131085*^9, 3.911117891411371*^9, 
  3.9111455325283318`*^9, 3.911242892223203*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"4dd1bc71-58d3-470f-a6a4-8cb14224b6d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Scenario", " ", "3"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"selCoef", ",", " ", "genVar"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"selCoef", " ", "=", " ", "0.005"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genVar", " ", "=", " ", "0.019860999"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9103976448668547`*^9, 3.9103976932189517`*^9}, {
   3.9104022113188157`*^9, 3.910384000757211*^9}, {3.910384066276121*^9, 
   3.910384094852061*^9}, {3.9103841499873133`*^9, 3.91038415076552*^9}, 
   3.910384223707341*^9, {3.9103842578040724`*^9, 3.9103842578441367`*^9}, {
   3.9103843777405386`*^9, 3.9103843984445653`*^9}, 3.9108035940402484`*^9, 
   3.910803871005864*^9},
 CellLabel->"In[75]:=",ExpressionUUID->"cfceb5b5-0c8d-4835-ba14-e6c13ec6bf72"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardScenario3", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.019860999\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.019860999\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.019860999\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.019860999\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}, {3.9108022853779926`*^9, 
   3.910802304053191*^9}, {3.9108026205523844`*^9, 3.910802636680106*^9}, {
   3.910802851401987*^9, 3.9108028969227853`*^9}, {3.9108032508819113`*^9, 
   3.910803314120039*^9}, {3.9108033573104753`*^9, 3.9108033676004925`*^9}, {
   3.9108035300513897`*^9, 3.9108035576488266`*^9}, {3.910803768769035*^9, 
   3.9108037957329817`*^9}, {3.910804989318005*^9, 3.910804995141122*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"026fe143-7c45-449d-a8da-bb6be1df2974"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 78, 21, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108116722503033`*^9, 3.9111178914973736`*^9, 
  3.9111455326221256`*^9, 3.911242892333342*^9},
 CellLabel->
  "During evaluation of \
In[78]:=",ExpressionUUID->"372c73b3-ca74-44f7-a523-eeae19abf449"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 78, 22, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108116722503033`*^9, 3.9111178914973736`*^9, 
  3.9111455326221256`*^9, 3.911242892356412*^9},
 CellLabel->
  "During evaluation of \
In[78]:=",ExpressionUUID->"2d0e29e0-49ac-486b-8711-197dc454357f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
Tm1/pj5WDKF1A84EWozNyQLtP/Eh+ds1ma4EtFku0SnWFpjfEPpkmzuBNKSo
PCRjgdXDNj365UHg3bTNxfsGZjhW4cfDEm8CjpsfVwvmWODuxopKj72M3pmj
WhyxbVgnPLJC2o9AzKcyC59EI3xKyeBuQwCBNZyZ2qMmbPzhubDs8H4CjUYt
Me5hdtjw4KPS9aEE2mac01yW6eMM5WMl7w4QeLNJ7YP1A3v87YVxUfpBAjem
/XR2Ophh80ixQvPDDK+8VeNzPlrgS6r1NyajCLgnTYrkmOzEE60nC4piCNRf
bS/M8jLGO45sy3ePIzAkW/h27Isdvsmaf2XZCQI1bkPcy5YWeE7b80v1CQSm
jV60ufWysUv0mQuHThEQKo28z+7n4DJ1u9y1ZxgeV9ofTzxjihd0LDnfl8LU
P7r6S2ixOfaOactMTWP2VcM+03HbEldpZqSbZjLvwUx0c0+UJZbu5KZOZBOw
He3XWRrjgANjV6YU5hK4tFhlcMuinfjpujfJuy8SSFhk4LHuhjVW6Mo9teQy
AdxWP9zp7ogj4l0Ta68S+O7yTlQqgY1btRRORhQQeOb+L1vvsxNW7+6P17jJ
6Je66jvf0AwfO3EltqeQwN5M88d6XGe88OA8K49iAnVGfc0/+jg4lxe4bPAW
U+9qT/rUAwfMcmnv9isjsFs6/ozzRQ6+Y70ln5YTyM4T7NFe4oKN0N/+ByoI
SAvTYq+9N8fNWuKbJiuZepKLUtxWs7Gzkr8wuorAxuwgOXd5Lh5c+rJO9DEB
RRE5FVdFOxwqtvlMQjUBjYBuhXZpKzw7doErVcfsxy1CXzvACCcPiiqkPmX8
oWgQX8jZjn/v4g2uaGTmzRINOSVwwgWNLSW5zwkc2p/YMjPriHUebjqo2ELg
N1GNvpJqNn5UlAvX+ATkWWIZv9lysPUlEQmNdsLc8dtD1jrjrhRffvErAt5x
i7DebWfsHdt8XqeL8bNrzVKj69hYEKrjUdFNIPy/ZrUVI/b4qPd5DcNeAqwk
02epalw832FG8KSfgFSpoZGhgz3OtvB+YDbA+KNQrM1nzAqrbmmKa/qPwKpX
SbxPJjtwqaa2td0nApUqw1O9kxyM5LOWd3xmeOj5HJLuycVNC4VvnYYZ/3sw
KtG8wRY7zHpc6yUE2NM19+VzHfCHkYYATwHDx1zHT31ajjh4YL3up1ECA2ZP
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
5CP24f8DND/8Mw==
          "]]}, Annotation[#, "Charting`Private`Tag$20754#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1: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
z8gJ/be0RO+BeuiMyfbD+H8TScpI
          "]]}, Annotation[#, "Charting`Private`Tag$20754#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1: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
GeGXLJPM1V4FKoM82sh9RiT9o7xPjcEquLwu8/6zzYAUfgDhBYtVePT2jdaB
AS1yyfgjcfLOKgyqf2HPrqFGqllZS4bvr0LNX0rv48pUCK7N7Vmv/SokrPEq
P5qnQFp8p650uqxC+sdZmZjL/7Aal68eaXZfBcamyhHW8X1sz8bnntrnqyBp
t3f+VPZf7Li1l2Vx8CrY3DRbvPllB2t1fFE0L3wVnAqevxf+s4Vd6tdcy4xa
haEgjaMtxr+wj16WliW/XQXH7vcNfwY3sD9V+L3eJayCWpYI1wenn1i3gwCV
N8mr4Cn3JO2Jxhp2r4zI9CpjFS6/uXFmZYmIpTtTneCbvwrMXEVJhPRl7Mtp
QetnJWT+dHeOXqpbxLLHh4m7Vq6CsPuo2+V/89hYnc2f9jWrcPFp+4z+7Tks
/xHTStuGVSgWYo3hmJ/Bnnkmfs2saxUolWus6J5OYC8Q/wzeGCLzo+lSenZn
GIvcarNRmlmFVEKfFe3pAaza97hfF1dWIW2/L65/pgerh9r6i2+tAvfyTQNj
XBfWvOAS+4nDVbDD9LvzvGvFlpv+YemhWINA15GfGu4tWBa6KuYA6jXIffzy
apx1M7b+FsJAYFiDzQvHtcCiESvIqPKvlHMN7ptbCEBFHfZZGe2BLWYNqgXX
PxmJ1WL7rVr/8vGuwWS8ZPPUp6/YwAr1HV+BNVioVbPgXv6CXbLRXdUUX4P+
s2tf83nLsCgbJ/Hf2TXwlJpq/HCkFBtXPYAvllqDLT+bl050JVg1jpsLx2TX
oJbBwvuJcBE2t85ifAFdA50nHsXzLZ+wDnx27c8N1uBhOMFBnDMN29J8rvW8
8Ro0/LLy8DyRij3pvN40Z7IGaUlRJ5lkU7A9rS71apZrwBz0J/kK/XvshSdP
K7geroFR8jE3I2wc9veP4Mw8nzUoGXxuJfDsFdY3KNVvIpe8/o5CTkyRG/ao
O7367c9r0KqT+pHN7gk24b49x1LBGkiLK7+MkXPFlmhcTl8vXYOX8ubujw6d
sUvsvU1UdWtAZahoVGtnh9X4QMEg3r8Gjbt6w8qBt7GYCsuIJ3tkPiPkemrO
X8d+xp9IZNFcB47+BSOqN5zY0PdBVlM31kGEQ+Xcnzl2rI3eqki+7jq8INQf
O2PIhuX/+rVQy3gdGL3pHAckmbBhkWYtL63XgUpCPzQhlQp7/9K7Dcan62Du
us/a2/5TUTCQS40+ax2ItC6pYX3Niofyz48OZ69DwCduTJ9Co+Lo6nxf1qd1
mAoi6jQS6hWjjEvMrxatQ6k0g/kHqirFfxJ6j4O+roN7PsNY3MZnxYneyA/U
/eswxFDaZ3U1WrEy+Ped/sF1eD8vapfF9UoxRtFSPH2EnG+zVCPsVqiiRqZU
qdLUOtBxvd4L6vdVrPL43u5HWIdn/ad0OtPsFWPPXYzUJa3DTsX00NUUW0Xn
uSSD0+vrUEIRxOGfYq0opmk3Xb+1Dl0WJCOSvJEiDeVARtTvdYhav4vhrdRR
nClTfGj1dx3Yfe+Ey7xVU/z6MP289ME61DgFP/IIu6IYd5Jp+9+/daCWORS+
e0Re8X+K48p1
          "]]}, Annotation[#, "Charting`Private`Tag$20754#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -7.236555806628964*^-13}], 
               
               Offset[{2.924836806038037, 0.6673302466134853}, {
                1.12, -7.236555806628964*^-13}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.1274619887438223}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.1274619887438223}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.1274619887438223}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.1274619887438223}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -7.236555806628964*^-13}], 
               
               Offset[{2.924836806038037, 0.6673302466134853}, {
                1.12, -7.236555806628964*^-13}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.1274619887438223}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.1274619887438223}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.1274619887438223}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.1274619887438223}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{117., 6.500000000000026}, {1.1800000000000002`, 
                0.1274619887438223}], 
               
               Offset[{117., -6.499999999999974}, {1.1800000000000002`, 
                0.1274619887438223}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.1274619887438223}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.1274619887438223}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.019860999\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{63.5, 1.4099832412739488`*^-14}, {1.1800000000000002`, 
              0.1274619887438223}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -7.1678814929243*^-13}], 
               
               Offset[{2.076751841328562, 2.164971544741045}, {
                1.12, -7.1678814929243*^-13}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.5823835620021}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.5823835620021}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.5823835620021}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.5823835620021}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -7.1678814929243*^-13}], 
               
               Offset[{2.076751841328562, 2.164971544741045}, {
                1.12, -7.1678814929243*^-13}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.5823835620021}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.5823835620021}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.5823835620021}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.5823835620021}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{113., 6.500000000000025}, {1.1800000000000002`, 
                0.5823835620021}], 
               
               Offset[{113., -6.499999999999975}, {1.1800000000000002`, 
                0.5823835620021}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.5823835620021}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.5823835620021}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.019860999\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{61.5, 1.3655743202889425`*^-14}, {1.1800000000000002`, 
              0.5823835620021}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.9882691892799603`*^-23}], 
               
               Offset[{1.4225016825532129`, 2.641304405617285}, {1.12, 
                1.9882691892799603`*^-23}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.0373067093999606`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.0373067093999606`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.0373067093999606`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.0373067093999606`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.9882691892799603`*^-23}], 
               
               Offset[{1.4225016825532129`, 2.641304405617285}, {1.12, 
                1.9882691892799603`*^-23}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.0373067093999606`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.0373067093999606`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.0373067093999606`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.0373067093999606`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                1.0373067093999606`}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                1.0373067093999606`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                1.0373067093999606`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                1.0373067093999606`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              1.0373067093999606`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 161.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-7.236555806628964*^-13, 5.754434212098422}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.019860999\"", "\"Old:VG=0.019860999\"", "\"NDSolve\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910811696240351*^9, 3.9111179135280886`*^9, 
  3.9111455554996166`*^9, 3.9112429121258974`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"207c8864-51d8-43d8-abb8-f3cd861658cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardScenario3", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108026445451193`*^9, 
   3.9108026520866733`*^9}, {3.910802920253564*^9, 3.9108029356201243`*^9}, {
   3.9108032881039443`*^9, 3.910803290290577*^9}, {3.910803324770018*^9, 
   3.910803326972967*^9}, {3.910803533876922*^9, 3.910803533925921*^9}, {
   3.9108037757374287`*^9, 3.910803775799735*^9}, {3.9108050015728197`*^9, 
   3.910805002152313*^9}, {3.910805033719949*^9, 3.9108050343392982`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"96367f1a-1fc4-4a9b-932c-fc807297e693"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 81, 23, 28771884763955561247,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910811715924684*^9, 3.9111179331435556`*^9, 
  3.911145575747608*^9, 3.911242930101985*^9},
 CellLabel->
  "During evaluation of \
In[81]:=",ExpressionUUID->"49400588-16c6-4a2c-86f1-8533c64c1608"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9335782083594676`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.230771361010541`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"4.3891718033099617`*^-17\\\"}]\\) for the integral and error estimates.\"", 
   2, 81, 24, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910811715924684*^9, 3.9111179331435556`*^9, 
  3.911145575747608*^9, 3.911242930807704*^9},
 CellLabel->
  "During evaluation of \
In[81]:=",ExpressionUUID->"dab18862-67e7-41af-bcf4-bef102bd6614"],

Cell[BoxData["1.1153856805052705`*^-15"], "Output",
 CellChangeTimes->{3.9108117167545033`*^9, 3.9111179342096043`*^9, 
  3.9111455765528364`*^9, 3.9112429308233166`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"f2627b32-96dc-4a45-a7ce-56768ffcacf6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardScenario3", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, 
   3.9108026624465485`*^9, {3.91080292688105*^9, 3.910802940903279*^9}, 
   3.9108032981903443`*^9, {3.9108033397481766`*^9, 3.910803341230857*^9}, {
   3.9108035389388466`*^9, 3.9108035389870763`*^9}, {3.9108037779556804`*^9, 
   3.9108037780486813`*^9}, {3.910805004397815*^9, 3.9108050370530777`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"a4f8f3ff-bcfb-4757-bc81-937356b843c4"],

Cell[BoxData[
 RowBox[{"{", "0.00025542331815568817`", "}"}]], "Output",
 CellChangeTimes->{3.9108117354073815`*^9, 3.9111179556358657`*^9, 
  3.9111455953602962`*^9, 3.9112429494138875`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"dbea8748-2848-4c0c-b21d-f739dd4811d1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Scenario", " ", "4"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"selCoef", ",", " ", "genVar"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genVar", " ", "=", " ", "0.056859878"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9103976448668547`*^9, 3.9103976932189517`*^9}, {
   3.9104022113188157`*^9, 3.910384000757211*^9}, {3.910384066276121*^9, 
   3.910384094852061*^9}, {3.9103841499873133`*^9, 3.91038415076552*^9}, 
   3.910384223707341*^9, {3.9103842578040724`*^9, 3.9103842578441367`*^9}, {
   3.9103843777405386`*^9, 3.9103843984445653`*^9}, {3.910384725668249*^9, 
   3.9103847257083445`*^9}, {3.910384770668659*^9, 3.9103847835625954`*^9}, {
   3.9108038646922736`*^9, 3.910803875194992*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"dc75dabe-a4bc-494d-aa2e-2fc58e2e6b6e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardScenario4", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.056859878\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.056859878\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.056859878\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.056859878\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}, {3.9108022853779926`*^9, 
   3.910802304053191*^9}, {3.9108026205523844`*^9, 3.910802636680106*^9}, {
   3.910802851401987*^9, 3.9108028969227853`*^9}, {3.9108032508819113`*^9, 
   3.910803314120039*^9}, {3.9108033573104753`*^9, 3.9108033676004925`*^9}, {
   3.9108035300513897`*^9, 3.9108035576488266`*^9}, {3.910803768769035*^9, 
   3.9108037957329817`*^9}, {3.9108038963362427`*^9, 3.91080392451641*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"bf27d57b-8a56-49d9-ac43-910fa4541859"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 86, 25, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108117354863625`*^9, 3.911117955785926*^9, 
  3.911145595452705*^9, 3.9112429495229406`*^9},
 CellLabel->
  "During evaluation of \
In[86]:=",ExpressionUUID->"b29e90a9-a6af-4360-b89e-0e698553e152"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 86, 26, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108117354863625`*^9, 3.911117955785926*^9, 
  3.911145595452705*^9, 3.9112429495597296`*^9},
 CellLabel->
  "During evaluation of \
In[86]:=",ExpressionUUID->"9cea787a-53dc-4c4d-9e0b-587606544b8f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
beuIw/8HUye2yQ==
          "]]}, Annotation[#, "Charting`Private`Tag$21143#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1: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
/F/FJaZJgk+zVOd9n55GiM+um5ERIqT/AtdEYVU=
          "]]}, Annotation[#, "Charting`Private`Tag$21143#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1:eJwVV3k8lN8XtmVLdiNSIkQhFanM+56xZg8RsiQhyk6lENkiayFClhBZsq9l
ScQ3S/Z932bGzFgSpdBvfn+9n+dzP/ec53nOOffeV8TWzciejoaGppqehub/
X217Ql8z0QSV9+15bVr4BxhUBd1nBOTh+hLv0VLMXzifkZxWIaAGHKcH2ziC
/oJO90j5GwFjeEJGHafMdsHU7lfDSwE7mMiLKQtk3IepM89UowW84TxLsdn5
UhpcJt/VsOcCIUBnkTuQRcuA8+1Oar1eHwKVEUdWRS4w4K6HztKdsAgFkcqv
M5F3GXBsWx4BH9PC4A/XjLfgAAPOZzDBhywcAe3L42vs2QdwhvHjd/UlYuDJ
OWuPRoQJ95S54mSEQAI8odQl95mz4k5deRFe7p4AnuplQZYxrLj+UDfiRHsC
PJsoOlHdwooTo5culH2QCEo9Jwn9pw7ivu7lyA72vwJ8arpf5u+DOLbNVwrC
Ua/hS+G5BLrnh3DJU49Vq/bTQeQXqzgtjhOnLGSeM22SAf5PKgazrnPiVm4o
HmAuzoC0ZIyyiAsn7hj50e1imUx4X5nn//E1J87N6YI4zWQm/DF7v2O6wYnj
tivJz734Fq6p2mczpXDhzMyzStY3cuCOiZqURC83bm3CmPWtYC6Yyy+c45/j
xoVZM9tfU80FYa4rtPgNblzFbTfB6oRc2FfhTBPl4cGxuyKhvorv4MvHV3VM
xjy4tqCxG4z+eaDHG8Di+50HZ3kguqomNw/Sg+TlDaZ5cD+e4TidevJgx9Xv
JD2FB3c8Oq+tUzgfWMwWsXSsvDi/pPtyL1ryQT6HyGenwos7V8TFKMRcABos
tNMlRby4/2TbbLrlCkB5h1JoVceLsynz+fjEvABezHgMEdp4cdHVM+5zBQVw
YP/MuaRpXhyhuXjinV4hqK6MrF5j58OlD2mVnY0vgiIaT4reHT6cgtnewYWP
RdDf1OLQ58GH6xovdUhYLIJrHujVc358uJ0ZfqFfCsVwcP5LUFQcH854ZSns
02gxfGceE86u4cMd/PfU8sqxEpijm9q6+Y8Pl+xkai2tUQL76RVsCUwYnNig
tA2Xawm8N7t2N48Dg0Pfj9yeaCiBOxcTJZyFMbi696+qamRLwW3PcM0VweBo
bj69UKBSCt/rj4Slq2FwGrzONWnXS6HX419bsQ4GN/BEue7pk1LQrMj3uWeO
wVGukT/p9JTCpGY9zt4Lg5NnGUHQ+VIonJOvin+EwT1u/Nwot10K6Iim9tsA
DI5JKqmZ71gZTCaS+G0iMTiRfeXWGZcyKLDKOWqThcE5Vkir9z8tA4ZFTY8X
7zC4D478X1sTy0DLLd49uxCDUxogt79vKIP5HL4GpyoMziQ/qdPrUDm82GYq
eNqOwaVZBek6iJTD4iHB+/WdGNw8t0u3mUI54HX6wwe/Y3Bu/irfEatysFIo
nyoaweCqz8kYyHmUQ7vPJa17ExjcLp6/TzS0HGrCxYwOzmBwEUaUfqbicvgQ
/Dp+fQmD62UavfanuRwepj74rUDE4DANLYPkwXK4bmx5zYqMwWWfTB7u2y0H
/2+PNYx+YHArk0GmrZwVgP8zx3Z8C4OTe+kyWi1WAQrni8V7f2FwDbsq46m6
FcBtgxaP7GJwDOUyFjE2FXCLb1vnzD8MTvvO4clA7wr4MbaZ5kTLj4sTorfy
Cq8A5cKa2jB6ftxIH2XKPq0CinHbNWEH+HHHno1am5VWgKxhcoUTEz/ODvtl
Rru1AnTG6lrPsPDjNt4lz50hV0CAFj7Kno0fd9Ey2FaUphJKWcQfDh3ixz3h
cl3g5a2EC8FqU5Ic/LjWr2Z2TJKVkKZhOnaTkx930E91aUepEpRm3oQ+5uLH
GZ2VdSBfrYSyY892fbj5ccnLh/HTtysB61RiZsHDj5tOpXfse1gJVXSzlSK8
/Dhxw1XCl8hKeGjJLt1FxYIBVy7fyaqETyp7BfZ8/DjO4sxI1ppKyGibez1N
xQcmdiaLu6jxm78fUcTw4/4wX5M1nK+Eiyq8xm5UvH6hKODnr0r4L1Te4RkV
L9kd6Es6VAV66+T7AVQ8/tJaVOlEFdw6JJdnSsW9zTVe0xerYCRa/BgnFbet
crY91a+Cj1ek/uVT89UL3cWI21VBg+I3V1EqLtX+cqfjURXUB//3wo/KN9dH
qO5ebBUsPRGIrqHqS3l3n5UjtwrESyZDB6j64wZ7LMrrq+DTgF1WL9WfUDrJ
YpPeKoinnD1QQvXvsdzT/d9L1HyaG8OuVH/drMevpv2tAp9nflhOdmq9os5n
AVc16H4YtYin1udGfdSPeYlqWDmrYPGblR93lbCkGoatBnVGkg1Q66mGgUQp
o2rY/eAb70it92W15OWuO9XgaBgn4E3tB7FM7Qie+GogVBd8PEftH4Ge7PHq
/Gowf9ssvryPwbHv7p6+0VgNLIyPAvyo/bdjWtKTSayGM/GPMoyo/dnDwcsr
i6sBDEMaIZ+EwX1BXOz7TGpAw7NI3IeAwdXe+1rtfa8GYGs77jR1PrLbfcw/
vqoB+ieN8TCNwfkETKVrUmpA1PNR/XHq/LkUX1gn0dVCifaPUT7qfNpOxCrH
Hq4F9K/yvfWvGJyeosrikGotHHlKjr3eiMGJrr2Tup1SC2d5PKxI1PnnP0rj
y1haC/bOzOmceRgcm4551/u2WlAkur4ReovB/Xp30G19vRaITnYBxCQMrsva
vdL/Sh0cx7HYWgRhcA97LkHyzzoY95w0bTWi6petWvqPuR5asPNew7oYXE60
XNRfoXrwNwwbGdTA4Pp0T45Zq9eDedTW/qvLGNzpTl4v8Vf1MIVZjZUXweBm
2tfelSt+BKfbQe0/VvhwVz7nsnc//gQtZ3v87lHP8+njIlX7MZ9g72rqH00n
Ppx3YJqFXPYnUDmixch/iw+XBfH58Z2f4CW7qX6oAR/ub0Ogyg2hBriZpmTw
QZYPV1Jv8QDf0AASDR13rxJ4cfyVXNO0tE1wc5USXmXIi7OM+mu8iGmCXn5/
M+4rvLi3dkudX6Wb4PmrsMlbWF6cNF9dXaRZE3QNdmaPSfDiVB7YJPKVNsE1
VCFR7i8P7kKa6buEM81AOlTVn57Fg7tl/c4qf7oZaKsUS6OWuXHV86pd37Et
4ADaNvVmXLiWu2+OmJNb4YE9fX2sDhtuSwLhKHZpBxpvCRH6UEYcOq/S/tyn
HSxrE99xuDDiwt5oBjgGt8PWqGrNSRNGHIbXeO3E63Zo1z4x9FicEXeB9t73
lNZ2kGZQcCv5egDnM5EcG36kA5J4fNPtDh7A7cb+5LD7rwMEGNcMQ9PpcXQ7
hZxHxL+Bw7CgwoE1GtyRbpVNOPMNPNEbQhMTNDj5rLEhu0vfIK36mEljBw3O
Xosp9YPeN3jFZTpY9JYG1/HaVlzlwTcIwkiWnTKlwcVeFrjs1P4NMk9gDKxC
/4GQX9jtGqdO6Dx8q5Z8ZQ8u/LOpvvahC377LZ4VPr4DunrNQeq1XQDJcoFa
tDtwO1X4qmJLF4j/s/OJmf8NcYrTeMHhLnA7G2fhmPsbiG4WAvN7XXCHI+SV
hfRvSJs18XPX64aK/oPpWPgFtC3aKtHkbniuVBf+1WcLDnMWsAdsdwPt46ZC
xGoLZK1ZJtxpesBnpL2/R3kLbvxp9zLm7QHGdEt2OLgFlefUc49ge8DRvMn6
esZPcMgG5oLIHhA3I/OYd21CV4h8z9dT3+EJjSDG9dIPuMzRSfdC4Tu8iBIk
0gv/gPzXtxQtcN9BVnLxVzXDDwj+EJO5ZvIdRth9Yr17N+DyKMHz8NPvsDXD
yq7rtAH5p9/w3x35DuqaTUdvZq6DCjGolFGlF7glD6XoXlmFR7I93+5d6QVx
OqFLkQKrUOolsNSr2wvvHUGXhkyBY/slAqmmvcA64qoc/YICO9xTQWdcemF3
8OpT2RkylGIVTcySe+FChNV71xASCMeRdt6v9oLr2pzS3BYBGm8FvC/f7IXz
2KQC9T4CWJ/nMf/4uxfSQ596DRURIG34cm0XXR84XuhIeGBHgMNHnz9Yw/QB
y+8XSR+H8MBdILkpD33gE3MwRL55GQ602pObYvvAs8/5v/2KRchJ3EntSOiD
hhusW7EJi6B2J1qn73UfpPqdvqd5fxGCWKsK5rP7YIlhq1xWcRH2DRicDtT2
wZ2Ijzzdnxbg99TbJe3ZPmCjdEnJf58H0q+Z6SG5ftD682r7C8ccVN+JbdG+
0A/lc6dDmn/MQuAI+q5JqR9ySmaslodmAVPzxuW9Rj/IO07rFafNgsoDi10/
y35gu3kr8oT0LKT8HBYQC6div9Y5gdxp0NzoNvac6YdAHS5dW58J4LnlfxG/
2A/ij45cOaQ5AdO90kKWK/1ANv0eQnN4ArxLIxfUt/rB4FJ4SGPtOGS4aXkK
HBwAlZK5lti9MdimtMY2XxiAhdNeR5QTRiFn5eM39pgBCGBWpq/eHALXpKsn
7sYPwCwl7WFE1xAoqi34tiUPgLGTEf/r3CH49oZVxi97AFZOu9fdMxuCDQPz
WGLtAETVuFUPNw8CWrN9rXVhAOzvF8aHpg3AWPDZqUeXBiFHoljBxr8P3sq1
KQyhgyBE+nv+rFUfOE+ZxcipDUK+z6M6BaQPaBQDAa8/CC+VaY1G93pBYqUn
y9huEJJXkCi/p73gbeDscCZ2EF7cKv3KKfYd2I/mrS0uDsLd70Oyi0WdgLse
PLVAHARh5SNbW76d4Bl7s3N+dRAwnpxV13Q6YZj2cN7s70GoNK/L2Fj5BunL
4daTbENwuuZJVpHMN5Atvds9ID8EJ14nOnc1d4CeqmxhS8gQpFsZPJE+8hWe
+LG+/hwxBKaCp82ZN9ugtGo5rDlmCH6clagW62wDXskM28bkIUgbWEw76tcG
k2ycgvVFQzBYJ/uJca4VnIc3wssGhyCI5oWKc/UXiHKqcsgUG4aq8abD6tGf
YQVXHH7w1DCggnOL3U6f4crh3IIHZ4Zh8nJO9CuNz0DXnrCqe3kYKjQX1pZo
PsMjMe8HO1eH4eQU7z1Pn2ZwmDkXZuQ7DLmWtsHTS42gbFKay9A/DLXGnzIp
4h8hXTq/3W1kGE5smDtHU+phlz6TOD45DExHVZVeVdVDbXmsTBl+GLy0v6vO
atSDLKdbldXeMIjb7/erutaBUKdMW7XkCORPvhev/14D27jCRceAEQhJ/fAP
M0Z95+WQUh+GjACB6Xh3QkklBDFLXwuLGAHZ/d9SVmGVwN5b9Dk7fgQmDP82
d8pXgsTND+nTeSNQFBHdzZNYAdf9y8yMe0egPHk8kGxbDlV1NV0gMgoCojiR
r3Kl8Pjo72B9iVGIP08QaeIoBdzTi0pWp0dhqua1y8pUCXRp1r1/rDAK9EJM
J2QtS2BxpD6sSmsUVC6/fK9n/QF4txtwpz1HgXGo9bC6TxF4n2utxHyh7vfC
HGLZzwcH+eOZLzpGwejJzGHftnwwu+AXydYzCn1n7T/cis4HpcvytnRjoxCQ
eEMi4lg+0KnkcKyujkLuLp/1KY08iDUMudsmOAb9xalv6ApyIfDarAnu+BjM
hmq7WvrkgqcJVvmj+BjMzJRjjl3JhevmP/nL5MbgKIMTeWgpB4Ru2bWlaYxB
dQbbFJ1kDhS4qx339hyDhQd/pEoa30KaZ+bBtYdjgLOeT5KNfwvR3rvbTv5j
IOr/w5zV8S24+1R23wwfg1f//h4f5H4LioFivjrpY4B6tiy+cc6C1liGYdFv
Y9CgnnL4oVwmzHxojewTGYcg0zr+j8RU6KUwkM+dHAf6Ol3rZ/mp0Cytrpsg
PQ5PS288nLmTCpkFbWymiuMQn2K6KktIAdt3X6MndcfBzHpoVWbtNSy/6YjF
PxwHiXmZjv/4kmF4knld038cAvgLBkYnk6D9iJZBQdA4nFPRLbqdk0S9n/7j
dIkeh5PpfnsE+SS4m/jtxY+347AQLsmQbPEKKFFd8Xvd47CZdZH8sTEBpjvZ
floPjIN6UVSBQHQC9LDqGTePjgP1v7J70SIBPoR38wYvjINKrfJ40594cA/p
SWTeGYej0npvPZB4+Onbm8QjNgFc2jGYQ8Mv4O/dwVSpxxMw4Re7cO9NDBhf
sHohGzABP/JIU66mMVBEuxx2PmQCSkUbPhzgjgHr5F8eSMwEME8oO66ER8Pn
NkFNw7cTkMsqX+7hHwXPjt/66fNtAhIPeJtGBD6HWRKR6P99Auj+Kaxoqj6H
izWeM0GD1HN78LhPJONzWNEL+RY1PQEXDppHJcZEgJ5vXmbmjwkY4/gs/jYn
HHiGKbodgpOwIzXL2Y4PA+esByrdwpPwxfXMG5XyMGh1/qfYLzYJkUf4ac/5
h8EDeq4Tk7KTMPYJbXLkDYMxOfmdNZVJkKWt9DmqGQoZkY9z+e9Ngsa/Z3sL
X4LhtDLTvsPHSdh8F2t1nukplBYUnhxtpuLpy8snJgJBntfAUOvrJHxCZw2e
lAQCFp+cc7pvEgKwJadczANBP/qUzvryJFxm9hk4bxcAnmN6yY+4pyC71kV8
nOQH2yo/Pq/wTwHNgYJxsUw/8C16RbI4OgWnsovGTpr4QUjADIpKTgHjm6s6
Bp994ZW4xxIdOgU4vvzO/azHUOeRcC7KaQp6DrJsPg72AXTiouWe6xRgHaRs
4lR8oEVtKtTVewqar38dVafzgW/8EmMGAVPAl9KjHhn8ECYbagL4EqeglvPD
cfPoB0DDOtGV3jwFAaIeCf2fvOHKW5E7ZfzTsGNvcsA0yAPkk9klvgpNQ/zZ
9GnG6x5wPObv4rjINPy6b3ND+JQH/Hk0ZMsgPQ3nTG4UhQ24Q7FhhLUpbhro
Nd/jMKfdgYd2w2TPcRpc/JmXt0ZdgObXFC+36zQ02j3dSI1yATL524CE1zQw
nmK+/RvnAl9HcwwN/KfB5/nQuZ5CZ3hUaqaX/WIaTpix6bdE3IOZm81qWvXT
8GosvNbP3gm6TIrprZumwVx1+MbACSeo1Ulp8WydBv1nZcUd847wUtEbl9Yz
Dd3l/NMRto6gziGJXZufBsPU38Y4pztQ2Bh7PvHgDLT8cSSYvLSHh0dvis5Z
zlDfXe/F3LRtwdZA7vrkrRlQZC9+zn3EFvSDaZ+POMyA0YuQr5LkWyBBzN7o
dp+Bi5/r6t7H3oLBSkJzfcgMdPlYjMxN2ICcrufNhKIZCP4ikJzHeROEAlTj
Y8tmwNg+gMumyRqYynnbn1fPQD9pZmjG1Rqm+WtknzbPwF2WERnZXiuIWvi7
5zI4Az9sZe4NpVoC4XFo2pXdGaioCzIdNLkBK9dPO2bRzALjA6ZJec4bYLPO
QydMPwuTnxloVTrNQefEkoIg8yxEFHntWKiag2jEszec3LPw55zH1m0lM+g1
7nLeE5+F0exp9kda10GabHJwRG8WHJO4s/YHjKj3pG7Tc4NZSEumP72QZgSq
DSpe6LVZ0ArUULjpYAQ3Ys5M5JrNwhUf2yb+v4YQIcdS6H17FpRSjx+/ddoQ
lr0/aXM/moXg3x1CkrpXwXOqfL/NdxZClM8th6zpw576+/JHT2ahiVfTbSFe
H3j5XwnOBc/C40YLk9QZPVCtc1spiZkFehmdqQ9BupC5J/pcL2cWPjYSfitt
aYG0gwBKmzcLL2ZXasLztKCmh+NH5ftZ4M6WxZXe0IKejF1zoZJZ8PHcrw77
ogl7ysNSpLpZaDU+W8WTcQVuhEX8F/6dqm/u3WK/rzosrwb4Y/tnwUDp5q1v
l9XBw/TB2fXBWXBG3sj6/lGDcMnbr03HZyH5xygrrZ8aVH/DOkkszUIMyYjO
6Zkq8HCsM7f+mQWW8L+53I3K0N/w/JnW3iw87Rs5ZB2pDC+dxRm//5sFzu21
zbPmysD97Qb9OMMcNN+Un3XZxgF3aNveGvscjOcxOnMp4oDzb8qPIyfmoHfv
/OuhDAR63yt4ZInPQTjmV9AVbQTizHrXJCTnwGaAXfftFhY4qg9QzsrMgUHF
Z4TlKhbYPdzxVxTnwD+FX8CKTQnY8OqTXjpzgM7YfjtbchG6Emdv7OjNwe9j
qtdO3rkIUWq+Y08M5kBlYFVkQfgiHHxbOhxhMgfYlZrXufGKwGp1pC/j5hyM
fJdVEg65AMwD622dXnNguHA0HX0mDx1PI9UMH8zBq67nUhXa8hAuJ/Fl2GcO
3jX0nO1llwemGIvmOf85YHB5NbObfB4Ytb7W/3o2B03xg7kbleeAoSm15ETa
HBQkFHyYYjkL41g1zZn0OUjEGn8d65eDknrybErWHDgbT8b7p8nBjWqEmztv
DgQeFoxUnpWDsuIZb5ryOSC9uBpn1S4L1mknLk+1z4E+5uT1qI7TIC/Y1Z/8
bQ7ee56b7nE5DSzJ3veMu6n+fa01l+I9DZXxbWmd/XNwa0ohQsDuFByMvPOv
bmoOprT25eM4paD2UWHrq8052JbP/YV9LQExv65ZGW3PgTcc7kvQl4Db93e3
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
JQWc0v8AEaTYEw==
          "]]}, Annotation[#, "Charting`Private`Tag$21143#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -2.598022829685885*^-12}], 
               
               Offset[{2.9245173668441606`, 0.6687287723934845}, {
                1.12, -2.598022829685885*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.12813302642854416`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.12813302642854416`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.12813302642854416`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.12813302642854416`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -2.598022829685885*^-12}], 
               
               Offset[{2.9245173668441606`, 0.6687287723934845}, {
                1.12, -2.598022829685885*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.12813302642854416`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.12813302642854416`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.12813302642854416`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.12813302642854416`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{117., 6.500000000000026}, {1.1800000000000002`, 
                0.12813302642854416`}], 
               
               Offset[{117., -6.499999999999974}, {1.1800000000000002`, 
                0.12813302642854416`}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.12813302642854416`}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.12813302642854416`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.056859878\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{63.5, 1.4099832412739488`*^-14}, {1.1800000000000002`, 
              0.12813302642854416`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -2.4383065131843376`*^-12}], 
               
               Offset[{2.076316300880335, 2.165389253390392}, {
                1.12, -2.4383065131843376`*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.5843966839573724}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.5843966839573724}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.5843966839573724}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.5843966839573724}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -2.4383065131843376`*^-12}], 
               
               Offset[{2.076316300880335, 2.165389253390392}, {
                1.12, -2.4383065131843376`*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.5843966839573724}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.5843966839573724}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.5843966839573724}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.5843966839573724}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{113., 6.500000000000025}, {1.1800000000000002`, 
                0.5843966839573724}], 
               
               Offset[{113., -6.499999999999975}, {1.1800000000000002`, 
                0.5843966839573724}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.5843966839573724}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.5843966839573724}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.056859878\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{61.5, 1.3655743202889425`*^-14}, {1.1800000000000002`, 
              0.5843966839573724}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.681378347271052*^-23}], 
               
               Offset[{1.422301836466773, 2.641412025031923}, {1.12, 
                2.681378347271052*^-23}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.0406619107919781`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.0406619107919781`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.0406619107919781`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.0406619107919781`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.681378347271052*^-23}], 
               
               Offset[{1.422301836466773, 2.641412025031923}, {1.12, 
                2.681378347271052*^-23}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.0406619107919781`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.0406619107919781`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.0406619107919781`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.0406619107919781`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                1.0406619107919781`}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                1.0406619107919781`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                1.0406619107919781`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                1.0406619107919781`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              1.0406619107919781`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 161.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-2.598022829685885*^-12, 5.772000882106519}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.056859878\"", "\"Old:VG=0.056859878\"", "\"NDSolve\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910811757318201*^9, 3.9111179780204678`*^9, 
  3.9111456173029003`*^9, 3.911242969261039*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"6c9124e7-f59e-4f1b-870d-1b3f6143929e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardScenario4", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108026445451193`*^9, 
   3.9108026520866733`*^9}, {3.910802920253564*^9, 3.9108029356201243`*^9}, {
   3.9108032881039443`*^9, 3.910803290290577*^9}, {3.910803324770018*^9, 
   3.910803326972967*^9}, {3.910803533876922*^9, 3.910803533925921*^9}, {
   3.9108037757374287`*^9, 3.910803775799735*^9}, {3.9108038990851316`*^9, 
   3.910803899166355*^9}, {3.9108050501698422`*^9, 3.9108050508816886`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"10d552b7-672f-4b5a-aa39-32d178a3803b"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 89, 27, 28771884763955561247,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108117753316264`*^9, 3.9111179964444265`*^9, 
  3.9111456355170155`*^9, 3.9112429862688274`*^9},
 CellLabel->
  "During evaluation of \
In[89]:=",ExpressionUUID->"9cd03227-3f05-44ae-90c9-60f0bdf7ca62"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.07810945835946762`\\\", \\\
\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.882442714271642`*^-14\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"2.1127615871237273`*^-17\\\"}]\\) for the integral and error estimates.\"", 
   2, 89, 28, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108117753316264`*^9, 3.9111179964444265`*^9, 
  3.9111456355170155`*^9, 3.9112429874768486`*^9},
 CellLabel->
  "During evaluation of \
In[89]:=",ExpressionUUID->"c832cea3-d2aa-4ca2-9551-aa15af561b55"],

Cell[BoxData["9.41221357135821`*^-15"], "Output",
 CellChangeTimes->{3.9108117766608152`*^9, 3.9111179980035114`*^9, 
  3.911145637037241*^9, 3.9112429875225277`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"336a53e2-eb72-4da5-ade9-a722de5c6eba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardScenario4", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, 
   3.9108026624465485`*^9, {3.91080292688105*^9, 3.910802940903279*^9}, 
   3.9108032981903443`*^9, {3.9108033397481766`*^9, 3.910803341230857*^9}, {
   3.9108035389388466`*^9, 3.9108035389870763`*^9}, {3.9108037779556804`*^9, 
   3.9108037780486813`*^9}, {3.910803902111907*^9, 3.9108039051368046`*^9}, {
   3.910805053358075*^9, 3.9108050557737045`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"22077ad0-54e1-49cf-9c4c-6d77d2341634"],

Cell[BoxData[
 RowBox[{"{", "0.01070949738175903`", "}"}]], "Output",
 CellChangeTimes->{3.9108117948595943`*^9, 3.9111180179817734`*^9, 
  3.911145656643547*^9, 3.9112430052163906`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"9295f21e-72cf-48fe-9805-82f166c512d8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
              "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
      "**"}], "**"}], "**"}], "******)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9108030966756754`*^9, 3.910803103484496*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"18a91155-20df-4028-b1ba-2e60d5bfb7f1"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "haywardScenario1", ",", " ", "haywardScenario2", ",", " ", 
   "haywardScenario3", ",", " ", "haywardScenario4"}], "]"}]], "Input",
 CellChangeTimes->{{3.910803152564843*^9, 3.9108031675137005`*^9}, {
  3.9108045580314064`*^9, 3.9108045865782967`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"5f15f362-3563-4bff-b506-49e84106affc"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**"}], "******)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Get", "[", "\"\<path-integrals.m\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Kimura", "[", 
     RowBox[{"x_", ",", "y_", ",", "t_", ",", "n_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "m", "}"}], ",", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"4", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", "m"}], "+", "1"}], ")"}], "*", "x", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"m", "*", 
            RowBox[{"(", 
             RowBox[{"m", "+", "1"}], ")"}]}], ")"}]}], "*", 
         RowBox[{"GegenbauerC", "[", 
          RowBox[{
           RowBox[{"m", "-", "1"}], ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"1", "-", 
            RowBox[{"2", "*", "x"}]}]}], "]"}], "*", 
         RowBox[{"GegenbauerC", "[", 
          RowBox[{
           RowBox[{"m", "-", "1"}], ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"1", "-", 
            RowBox[{"2", "*", "y"}]}]}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}], "*", "m", "*", 
           RowBox[{"(", 
            RowBox[{"m", "+", "1"}], ")"}], "*", "t"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"haywardNe500", " ", "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "pints", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<path-integrals-vary-ne.m\>\"", "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"haywardNe1000", " ", "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"haywardNe250", " ", "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"haywardNe200", " ", "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "pints", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Clear", "[", "genVar", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9108030966756754`*^9, 3.910803103484496*^9}, {
   3.9108045947860785`*^9, 3.9108046020818443`*^9}, 3.9108052118908024`*^9, {
   3.910806416442129*^9, 3.9108064255619164`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"eb3c7c80-e108-41a7-8d74-c9e4ec3d1dd7"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Ne", " ", "=", " ", "1000"}], "*)"}]], "Input",
 CellChangeTimes->{{3.91080464370375*^9, 3.910804646036909*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"02973fc3-a91e-498f-9c9b-388d77264011"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"time", ",", " ", "selectedNe"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", " ", "=", " ", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectedNe", " ", "=", " ", "1000"}], ";"}]}], "Input",
 CellChangeTimes->{{3.907125194243817*^9, 3.9071252064056964`*^9}, 
   3.907125243916231*^9, {3.907125305152856*^9, 3.9071253390972643`*^9}, {
   3.9071254528484173`*^9, 3.907125453703746*^9}, 3.9071331781905193`*^9, 
   3.907133520791461*^9, {3.9071335962492847`*^9, 3.907133597643078*^9}, {
   3.910804656416136*^9, 3.9108046619686084`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"3137d197-373c-4a59-8a13-c1dcbab63749"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "0.001"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardNe1000", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.001"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00101"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00099"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}, {3.9108022853779926`*^9, 
   3.910802304053191*^9}, {3.9108026205523844`*^9, 3.910802636680106*^9}, {
   3.910802851401987*^9, 3.9108028969227853`*^9}, {3.910805262315879*^9, 
   3.9108053065181503`*^9}, {3.9108053618906217`*^9, 3.9108053633425975`*^9}, 
   3.91080568508304*^9},
 CellLabel->
  "In[107]:=",ExpressionUUID->"d1a62d0c-d09e-4821-af29-1a0e82252094"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 107, 29, 28771884763955561247, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108149236900306`*^9, 3.9111122271135283`*^9, 
  3.91124605483427*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"949d5f6b-912c-43eb-9610-a86b07826d62"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 107, 30, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108149236900306`*^9, 3.9111122271135283`*^9, 
  3.911246054897644*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"46bff7d7-0e3f-4841-8a6f-cefc6f29b7e4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
QvxVXWstQyKiFc+RR9Igwt9s/Uzd18tIc9NQ4HstIgw7NfsrSi4j6PcUCxNd
IlCyjlVX4QiIsv4J7joDIoyiI9GU9SVEgk3LN9aMCNm2gexP7BYRJp8A47Nu
RFBIIhT+SJtDyjfIO3UPicCTIayeaDSH2N67mXbZgwiiXzdd7zHPIc36cqvX
nhHhvcuWXoPbLPJcZMrPOZgIOXtjO/ofphHFN1riW6FE+KWS/7pKZBpZxJZ3
PAsjQp7Z+yi2lClEfSvs0MtXREjWw8Stxk0ijG0qHzKTiHDM/qaZ+7txpPx8
loF0ChEKJfD4YvFxxLaU82fJO1o86+fpjhSPIc1vCSgukwjBEqoVvq2jSJBT
3PDoRyLgTA3lNLAjyD7udXqORiLQxw51Wy8MImWhZrlxzUS4HWqSORE8iNj8
ab1yFE8EzM6pvA7JQaRxKfWNZBcR+r4NcDk9GkACq3VlLw0TIaTKd9xCoB85
LVs10D5KBJ1Ar7Kp9j5kPl3E02CCCCp0q+7Gnn2IWvhOo8UsER6KtOhHlPUi
9Ja5Nz1XibDhd6ws0KQbKRk4+O8fmQglW35Xapu7EGtN38xgKhG+ae6P2VXs
QurlTSixm0ToOuI5GibYifgzMDz/+I8IgvIxLEcx7QhdvmXx/MFVSPnxPOfG
5RaklTzinHZoFco6Tx/52tmMRMgbnjQ/sgryZ9ujL5g0I4erL30cElyF1/QX
pOedmpCTeMkPbZKrwCbRZBhf2YBsYjIcgk+sQh1hXzKzfgPy5epRabWTq7Dp
gZ9IXq5HNIb359corILd1zeKTUL1iPnS95wiZBUSV62lm7W+IiJSjvceXFyF
+Ki/HqWva5EVxyVxSfVVWC87+PL3XA3ycHMkK117FXykzv/XHPIFCWP4mhFn
vArNitI9Q7+qkM/Coe+eOqxCLWVHV8buE+J7l85S2WkVCi89XEucL0PU870E
N11W4VPWhSEWyzKkT94xxenxKpz4Oe6bZF2KrIDhW2t/Wj7CSRuyv4uQoqCO
W4JBq1DPGOOZz1WEPMJf4hsPXgVP+3OR80ofkb2rZxKvha8Ckxo57X7AB4TX
8mjC5YRV8E0i4ZLV85DJ9DgThqRVkFV1/m7pmYtkLO0/VJ+8CppiquZKjTmI
rBNd3Nn0VSit0qbe08xG1L2XYmQKV2G0oVXQIzwDwdRbGhKLVkGQciDFnJCO
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
vT0q8ArYG9kP7of/Aef6oMg=
          "]]}, Annotation[#, "Charting`Private`Tag$21542#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1:eJwVl3k4Vd8XxhGZbsYmU0JkqhSR0nlPImMiIoRCmlSmpFm+hjIlRSUypElC
UkmZx8xRKePlcidTKFLid3//nPN8nmc/e631rvess7eC++m9h3m4uLgecR7/
f5sfZn4qY+0jHHwjrRaSWsG7U9qnT0oHj3UNDL7RWqGdejf5lZQRphjPguTX
fYJFU0d+ipQdqE7r22fKPsHBc6Y4XsoTovdMb9WNtqFnQ8TOGKkAdN2av/rc
+QvSlu0Jj5QKxd67W83swjtxVeDV2utSt5GgF3OhiJsGdZOb1/J9buPWnk9N
Nbo0tIWdZnXV3kbbj2tei71pWLNI8/n6wAQ8lmvauaqDhpp/mes/tyVi2upd
8NPcQVCmEjfLR9/Dglak/uAxOu72nN/5ev4BSk4NE01cbOx3TM/9MZEJg8mp
2rG2HxBeuHrAZFUulgnfGI4P+w1lmzFmZVQBeBZnLWcrcJFnm/Vx9+c7DIU6
ynJL8ZIi618PfRQoQvE3r7NsFV4yM0Yr+q9sESoj24sadHjJT5Zrv7saF4F+
7cf7M9a8pEbDUn/lxCK4iedMHo7gJftqxx/n672Huah2xbMpXtKk/JFI0/kP
eP3gQK19NR/Zu1rh9XzsB9Ce2I3Jt/GRAcHJzloPP6DNfYVKXy8fmY5bT281
fAC/xLWb+M1H/i0ONnSSLcaFgLbecPXFZG6RcyCjuBjNy4KrlGIWkysKxHu5
uUvBV+AgSZjzkwei/9oNLi/F9+S1Mo/s+ckMz6GGGs1S9MS/TJt35yc1l717
F7W/FL+qHw5fu8BPGgYeTFiWV4re3e9//X7OT+omOzy+vaEMokT9961CAuQh
18cuT3vLYOCz+MrwewEy1Fzm3j1WGSRO2gZfqxEgH+vGfY78WYblT42OLf8k
QI6InLc4KVQORn1GDS9dgAws3a2/SbccxU7eYeqigmT06l9LP8SUo5J5S+Gm
qyD5ZmBnY4tBBcJo/5SuTwiSX02vTsSYVODrpw8s/j+C5HROyXLLvRXoTjsl
cJZHiNS7oH+o7kgF9hes2KwiKUQWSm6YLouvgNgG67habSHynZH06nxmBRZO
uzeK+QmRnVkOxj5TFejkM5eLPydE/hFLOL5+vgJvSkY8F10VIrf2iL7OkqyE
Hs+5ytc3hMiiM3zmD4lK9IaLbnTMFiI/PP7hf/t2JQr6l5clDgiR3ZT19/am
VkL73DyWsYTIOb8TJWJZlRiPnTj137gQuR10gZjSSkjsfdKwfk6ILOnoSglj
V2LTlSqF8qXCZKlAbW0gWYU3SxvSPxkKk9RTvKM6FlWgxz9KMjMVJrm+7JCY
2leFH2KCy17uFibJ9A8HTp+ogpROfLjVfmGyTD9/4khiFRZC7TUqvYXJiuMp
Mo4jVYhQdTGKjxcmX7FOnHCd5uzvVffldaIwmXl063sPrmocCJr+W58kTIZ5
dTidWloNJUlbvvoMYdLUXTzpP4Nq7N62iV8mX5jU7+9jXdtVjUddtvoNr4VJ
9YM5+rHW1RDPurHg/U6YpLhafL/rWY3Nrz3MwsqEyRbHsJU50dUoSmP1CDRz
8vtme/RVYjX47tS8N/4kTOY5KBYWplWjuLJwY8BnYTJ+X6lDZUE11h7SZT3q
FCbtbWYTv3VXQ1uDJ+MAXZg0aa2l99Cr4eYV4KzCEia37EnUpf2oxueosNf9
w8Kk1G7tr6O8NdD8ucpm3YQw2W16ctmidTXQqze3WflXmGyq3XZYQK8GJt62
W0//EyZLdgm9XrKjBvlv51rfLgiTqUZP7Fbuq8G/NC7RVbwUMq7yTKacWw0O
Xz5VtG0xhQw2NPqpeKwGmccfylgIUEh3sv/Wuks1+HHfRAAUCmlbmkvbFFGD
y1F2d5VEKKQRcVl7y80ayFZ7MGZFKaSygUy74aManO8LbrwgSSGZevsk9jfV
oPmn9txnKQr5/Y2Su0tHDQy8HJtMZChk/ebJl+79NQjnVfPPlqWQz7Vv2Jz8
VYPJuu+mFvIUMjnfJd1voQavf4xeDltNIaM3ak6cFaxFuKZE4ksFCnlqw8e4
ELlatNg8DuhTopBuOXeoEWtrQWE2GvavoZDW67y0YjbWQqjFZ+GzMoXcka0T
HL+tFs5iy3OKVCjkJo1FrXeMa3GSZr03fi2FVMr6JJ+ypxZJD6rHnVUp5FK1
tNMZjrXoeKoauUKNQvI+PVX6xKMWb48TytUc/qWyXfTFyVqUo6vKU51CEgOG
tZFBtSCkRSR5NChkeIrplaP/1aJMkOdPLIeb91vp7YqtRazit8vCmhRy+VK7
caV7tUjYUPv4LIddWxyfcGdy6rsvc7adw48j3dz6cmpBd9T7tWodhRwzPryi
+F0tHFtvqjhxWJf7REtSVS3MS9+KhXH48gefiKCWWjDULd6lcrjmbCDsO2tx
cecilSwOi2hfnNEeqkWoVfaBTA47jF3NFf9Ri8zYtR6xHE57FnFk/E8tjmue
wFEOMz1j5Jv46uC0KmRmI4e1Vt/qyBKrg4549M1hTn5BXXdvXJOpA2NPsWQC
h8sSH5h4qdQh97lr6HoOC+zNXNi5sQ5FHk2st5z6rZdkvVUwqAPfkgvmGzl8
ry739MKuOqw5P5qdxNFv4L/Xa3ts6vA4o2TFT46+6njfV3SgDjGRyTe3c7jo
dc2eQL863LRNakrj9IvHt5Hf7lIdbFLOpfy/n+aabaUbr9Wh13jwThWn310Z
PRtGU+rw39F81Wccf6xxpTHqn9bBsdm36T9FCuktxUp9+qoOa7cEvLPi+Gnu
xk9Rz491UA9uCn29iuNviz+1Oz7X4eVjKX8bOY7/FnMFy/fVIWv9rZoejn/l
Lgn/6PxZhx7Fuve1Kymk1xbxp4ULdbjGI3pSeQWFzJlafjBR6COKp+9l+C/j
+OO4YqvN6o+wrXQp6hfn+ENZ9doGjY8omC/I5hbj+IO6jlyi+xHbqNE7JTjf
l6uDfl6dxUfce1B+hU+IQl4xso7D2Y/w89SV28xNIesW9pnKhXwEf7Hwqq55
YVLsvTPX3+iPeIVN/H5zwmTaxiM+bzI+4ndR5mu/Gc58WnXZel3zR1BztS6V
jQiTPLPPxWSU6xF98nNxAmc+yTQZTmFDPeSeP/wQzplfOunfv3jq1yOhoHnp
Cc58O2zGfz9ndz3Kb6yeWFInTNbdc1c2DKxHES1hW3GRMHljq9TWY7X1EP+w
YPExRZh8KpInG/upHtYH7F9P3ePEH9i1kN9Vj66W6jlxznyejAyomhuvxx3f
JFP1WM487GqxilvZgNUJwh/rLwmTshfDPd4ea4CZ3cPN7U7C5GZruV3d/g24
2HTrEeyFSas1Barclxsw8PtzSJqNMHmlsX/UPL4BX8OPZIHzPxmQ3R7UW9SA
R1LJr37qCJPPiqei+SiNcNF4OLuDIkzqLhx8Y5vTiKNW8p4v8oVIy91lIcaF
jTDZ5KPxjfP/87gvv0evohEJxNTC78dCZJxeL0P6ayNuzGBG9r4QyTrtLDXw
rxGnvVdsGA8RIpOp+y767G6Cwvi4Q7W1EMldYW4YM9KEel0l88tDgmRjqE5z
jXoLPJ3XOrv9EiC3ijbw3NzcgqbKWumcEQHy6b1Des5kC8RK6lV/0gTI/3Ji
08b3tWB0y0EvrzbO+m9Mv5VXWxDmKD80mMNZr5Gy4nhHCxToYgP7vARIQ1ZI
3mLDVqyvG8460sJPyscNzz4ba8XyrotlZpzz0vBMX+8XrTYY3Ko4u56Lc75j
v68XiW3H9IZyjYSV3KSI3JPxwcHPSMtpUp6KmkP0sddeaWu+Iq7DrL41fgbT
5PPBo1c6oCuz8sfrnEkEbKoqWF75DYIa5Uwx91F46axOu1n3DTwl1L2ShqPY
r3sxitL8Dc6RS3dpKo5i21Ydd57v3/AkR7w1fWAEPIaZomNj36DycfLRfc8R
3LAJPV4t/R1rTznENXgPI8vHaHWA33csvNAZk49loS+nKuqTQidc9KKuOC2l
o3WUd2TT2k68tDChnf0zhDJNY8vbmp2I6at5lkUdQlpWNcVBrxODZMBu6xdD
cH9cE9Nt2QnwlZ++bzIEekrdDcbZTrg2V/RpBg9iNLrx1r+mTvxSveW3nHNe
/3v88321811gGO+yTyKpsNN1ubn+ShdcGAxT43VUZHPTw7VDu8D9WOYYtzQV
rndnfLfHduFJHUPTidGH8mppU5uMLriqdpdl7OlDxOpDP4Pqu9AWpdoXq9IL
ya+jlnXS3Yi3ztl1YrQL3umBhk3y3ZgYqnL4wVlX5b2g17amG08cg+gJT7sQ
uEhcqXt9NwY1hg0MPbvwXUtndtywG5pmgZRVPZ1IjTr/aMWJbggvOzTf/vk7
NHbwz3u974b5eSl2VVcH8rKer/1W1o3040bNT4s6oLPU2sasphulBgmn8u51
wIBxN1PjUzdC9BYi1fd3wCpG3eIHvRspp5Mra79+hd/33XfPSfTA5XtpfHzn
F7zzvb0p+lgPtMSVztX/bQfRteXAv1M9yE56u+pPbzsqjHrCTgX04FKmxBPz
inbUr1D5bn2lB2zl9zxW19vRXfz2yrKEHtBmv9p3rWwHl1BX44OyHmS2cTH/
bm+DSYbCkZcretH8aItvbmordO6KqNTI9sLK0srX/1orVsf+HexU6EX1L0ak
jW8r/pz74s6r2Yun/7SKnXe24oXNdVcHsheWm/wWLD61QJJ7Yt+/o71QfXFU
nMenGX1uZUZmRb0g290MbrU1oHHfi0Wupb1QS2q8bZ/VgEKLpAq/ql40nZYz
NwtpQLxeAJnc3AvBJveNHzY1wFhU1WB8oBfKp/cXtyfU43nJDe0E4T6M8p7W
eer5EWfl3BT7D/TBYLGeZZdSLdyttey7D/XBemPXs1HuWlj9xx3Z4dWHzi/H
ZlWpNVBhPZxo8ukDQzWfKpVSg88FzLKi0D4Eev+epK6sgZaln9vt7D78LOR3
G1pRDeb5sGSTuT7UH39r2r6pEmx7jaPpXFS8XbRIomxZJQ7+kOSRX0RFW2B9
wKffFbBQGtosLUCFQOLXy4dKK6B4PSJFTIIKlxnBH5usKtBq1+j9T5kKpwzF
xkt+5dAc2SfcsZuKCy/HWbeflaLQzrI00pqKW5Gq1QP+pdhZbOhP2FKxY5X3
/EWiFE6xG7oe7afi6mp/w4TPJbiuJfg8wIMKZeFyOUveEtADPphLnKNioXVI
Ltr3A9L+KUbuzqRixRTvTZWr76DpJUVwP6FCRO6og6fdO7xtFp0seEZF+lm5
2MG179CcOucom0vF984dMs9bCvFvx1e14Xec9fSHXqaKhXAKv/7xWgsVajpO
M1fb30BS9IdA1R8qIg29lo56FKCtODLC7B8VZrJm/Ad3FCDeW3lxywIVszb3
+njlCyBR77Sok7cfew9tcqF1voJEWPW/cZF+2FY0u4zavYLY36RJGaV+3D9R
Hsq7Nx8UhnG3v0U/LgUZaZedykNjAtVpdnc/HEwuvuTdm4doowvfL1v34/Li
GJOAzXkQzsj7en1fP7pvH/z2ZDYXQi4yn1Ld+iHapjW2SiYXAu0/qhv8+9Em
t2Vd4skX4C29n6uU3A+F/MyZid1Z6DQwMu170A/dhCN3I6SzkFs0Qk1K78c2
AZkJf8YzOL3ZLiHxpB8qPmfGrUKe4eWLvgCu/H6k5u414P7wFK7JSlt7avvR
7Jd0bIJ4gsJzz6sSp/rxiEm7xrqSidgZW5e90/2gWNEPBdlnwuPM3K8ls/24
NuPxY8+6TIj47l4bNt8P9097Iju6HuLw0fHr/oIDkFvUY7Pd4CEkHLT3WMsP
wO7Bs3hBoQyc0Hn/XdBiAFGUtLGuF6koa/2SXbh7AF8ntClfvFOx7OSPK0es
B3CW3nHfUDMVpY+UVar3DUDgrt6BoOwHkFwR5xd8cADDFuF3tuWn4P2sp/DM
mQGkU5ylY9ruQ7hUZPtg2gA2THnP0g7dxUFnNbFbDwewW+1cotr6u3g9s5O2
4/EAHP/z92j5cwduWueupz4fgKXklI5+wh28Sqd9cXozgDtGRMCZ5kQ4hxae
+tQwAIOXhkliexPw3Mw9rWR6ACG9ZX+n78VDR1OBwOwAnsuVsZj+8SgRoXaV
/h3AYpsRF3mreLS2u6wo56KBSNDS278oHj9dHGMrhWjQWhbsOuZzE4Sf9cW6
VTQ8OJp5z3Z/HFqTiP1tu2h4suXYo8dZ0XC89O/XXjMa5ibEEtVORWPA7cOt
dgsalicImMptisbPNVtbPlvTUHB5VMnufRSkcjfv6nCiQeX1kMNIWyTcKzV1
uk/RYOwu7r9++XX8GpYWoyfSsL3a0suTGYbbKYza5Hs0DBmEb8kvCIP2noIr
tsk0bBKY2+B9NQy++bvHy9I58ZMEIxRkwzAaFNx8P5sGmZRHPRftQzHER4+2
qaBBxzpqxqY3BKFv840EqmmwOxF9VvBlCJSOXZkrqaWhNsLxgkJoCA41rvTW
bKLBU3rS3EcjBD3xFhb832ioNDIePnP5Kr7IvxQsHqXh8M2G2KjNwQj4dKnc
/wcNIhslrvxZEgzJ/8zPqU/RUDpKK7jcdAU2dBrzzm8auLdeT43bdAVN2cvr
/BYNgks5PC2K9zKq9S+Gq0oNQqHE1qm55gJe25osum00CIGNlqVHPpzFNYvC
MFmTQTToxQx7h57FgZ1qAo/MBpGob81iWJ4Fj7bwkjdWg7huKTa3rS8QVhIt
y7/tH4TtjV87jQUDwWy1V5c9OYich2VRKn4BeF9Xm515ehAiat/vq+wIQGzZ
lg3r/AZxUOpFyg2xAOjkSesQZwexoujM0Xt5/rh6o3f7wauDyHRo5jr7yw/S
Vl42mQmcfJp11F/f9MWocUe75t1ByLn90Bj28kXZdlP710mDWPdu5PRlA194
rVN3rkkdxPR5p7/vmD54RRnzZD4bxLO1pf98jX1g2XAmSLNkEOV/HhxJW3UK
V0zDUgvog9hzgVsivewY2lyPHtBiDULpcvig7NVjWHPGQip7eBBjK3eYKBse
Q326+K2HPwaxuq80uKP6KJb+TQmP/zMIH0WJ/ZntR/D0xZuTPiJDYI+9l/3D
74U/lffUR8SG8FZXdqai9TB2d15kHJEcwq19HUoCSYcxuXjnIbeVQ1CI481c
tP4wDA622FkpDsFaxvh9prMnWiWY2zR1h2Cw9dnFskZ3KKo1/H6yZQihrrJN
vcnuOIOc10rbhlAZXtF8/KQ7pL0DNsiQQ/hnYhtUJ+oOz2ouJSHzIVyqaYgL
cTyE32elhJguQ5B228G3hesgFHrMvz0MG0LEf9czjdWdEVmxLXfftSH0d4+p
lHU7YfKJZjh/1BBOBBIbeOKcUOEnonMibggZ3u1Pv/x2hKdA241N94ewu/Fi
yvX2/Xiq7WhSnjeEVAo1Kuu5PcSkzFf5vxrCRjmP6ZZj9jg3v/XXmjdDKNo5
uypD1R7mH2UfXns/hAN3Uw/seroPw67U+T01Q5g8NZ7gkWuH9ZFH3vR2DSHw
znX3jK69SDy9PyaudwjGgRddeh/uxYKdmadh/xA8cNM713svWuU1JB7Th+Df
r3FImGsvfF+PnTw5MYS8xFORoetsUEA9ozy3mI5c8dOHsoz2YKte6G2pTXQs
q44Vjvxihq/uUropOnR4sTfXPIgyg39sTsdqPTo0aK77/Q3NkD30TVrVgI7o
AGTa5Zti1e116bq76HATPTZel2QCnomvL2yd6PBUvqXBH2OMB7LeezoO0FGp
bNi5x8oY20y5J5zc6Pim9luFEDNGQKqGjrsnHU/Myed8iUag7w4u8jlFR6eV
yY3lz3aiIUutNiaEjuC2Nwt/hnfg6NeSo+JhdPyzu3947M0O8PLYCSVE0HFY
XfSqT8gOEI6XdydH05HP6LgrI7MDefzt7VmJdGi9szjD3EvitudFam0WHTMh
X4qvvNkOrTjxEIsXdPSU/1sr6LIdTe8fK7Xk0tEymJ0WwbsdiyU/eX0toEOB
VOJ2tjdAULny6GAJHXrlJ3yl+bbhwKqWWe52OuwpU9xCMVsgIuX3+v0XOhyU
Gr/e2LYF5ZLLfM98oyPx0gV7yrAeVASdmcwejn6mS272WuphfIr+tYVJBxmj
FZYuo4uQj/OvUubpEL7rlXiWpg2dqvTTDtwMlC87nLwtTRuMEiMNcV4G+AqH
T7S4aMOyIDIjVJABj77Lkwe6NmFZ6vKbJ5YyEPFtOdHetxFPA9af0ldn4EMu
Q8uWogWn05/UpjQZCGH92aeYtQFLjgcMZW9g4GVq1pc/Bhvg51Z0YPVmBjZU
5prke63HNvNdFvwkAwXPugzbPmqiWd5V9cs+BihJFP+nDWoIluYejN3PwCE/
+ZubfdWgvSwz1dSZAWWd3QeGVqjhrhB7+YeDDJCxQQ0ZR1Xh/usM38MTDMj8
pMvor1iLX/UxAz5XGZhSs46XebwG3cJfjs79xwBDaEsNeWgNKixlxyPCGVju
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
          "]]}, Annotation[#, "Charting`Private`Tag$21542#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1:eJwVl3c81f8Xx82MKzuFrJRsKiPRPZ9EiJIikqyvpKmMlAYyEypJyIyEhDIz
Pvae2Xvc5V7uSBLK+N3fP/c+no/z/nzOeb/P6/2698i5ep6/ysbCwsJgfvz/
+/RV8o86ig32Dy40MDq2DzhOStydEdeC6fHXgfoTfXAkLSG5WNwIPFOCXtvu
/wHm3SPfUsSt4V/e6ORo+Q+wdVutiRV3g0Rbs09r+H6Y0gg/GS3uA53sfkl3
zg1B+i7LsEjxEAhcuJ0l8mAcgriLDz4Xj4MiK7ljZ1ZxoGzyOuLb3TjgDY2/
o6+Kh/5QT8pEaxykUPkHHFzwsJ9d9bP6/bcgdyGQ82gXHlo2s9QH++Mh0Npx
wSSLAHzL8doyUYlw3yxX9sUVEiRM+Z8s3UqFyli2l76/KGB3KaPw51IWjF6I
oBe2/wTMdpCDiXQheL5ukLz4YA0OWNHJjS9K4LFssLKrOAvi16MHCb+/Q659
bHc0PwfCr15KbOeuhHLNY05393IgWdGaUf/2VsKDHNXJ08ocyA+Lg2OOxpVw
KkD80rwxB6LSKep9IL4SvE+/y6t+zIHMtDKyv+lWwVDJQ4NOMgdiUv+Rv9u/
Gmxu1f4VqOREpmXlSrdiquHIreNl/S2ciE9g8mXNzGrgrfEOfTHAiWTAm5w3
ndWwGRurOEPlRP7VBBra762BbY9T3DtldiCFlZfvz9fUwDR6J9UvaAeyu0Ro
mpW1FjQElf00sFyIQ9Q/a4JYLUh6CdJfnuZCPrgRO1tUa2HdgpWEu8iFqO76
/v2FXS3o3M+XcfbkQgzvO7/dVVQL++vL1MvSuBCdZNvsOI062KjHfm/a5EJc
HLOv5EzXgRG3g5BQITcScloyMZFSBxObgeRP37mRbJ1Xg5G/66Dqs0ueRhM3
QuX3N7/NWw9XTacahMa4kfu1Z/QO69SD4HzWXhk2HiRKdkW0OroeOkTFA22s
eJAy3MmuXoMGKJYIM2XgeZBh06ClaJMGcJYARw8qD/KnABWzON8AD5/l9v74
zYPoPtJzabvWAJ3n13J9OXmRChGNP3WxDcD2TSqIRYEX+W4kIfuN3ABe90V0
pNx4kfE8W+O7yw3AZS7IlniTF/kr+PaG+lYD2LDdauXw5kWOTQmU5ok0gv85
S6X8IF6k0pfzdCa2EdIrNqv1UnmR6uyf3nFxjaC6I0HUYpAXmeRTTzyf1ghJ
/rJ6zeO8yIbXTVQwrxFiw04IqM/xIseBxB1d2wiXo1fqe2i8CDoykRK60Agn
Nfxw5jswSC13a+t9pAmGUumeh7UwyOwdDpqWeRO4qBdrf9TDICxDJ4SXbZqA
v+FxABdgECSj2sHzZhPsqzR8l2SGQer0vi1di28CXyW17L9XMEjDjRTJS9Qm
mGt/x5MRjEGKKTdvOv5pguIPwqTacAyS5XGs6j+WZnjbcvdS3wsMEuo+Yn9H
tBnicqLZW95gEFNXoaRgg2Z4dcXdmSMTg+jNzVAiTjXDf2lv6IXZGETZuUAv
5lwzxLxfFz6Th0H4HM3HEtyaof7AExmHrxik91LonoKoZtjn1XW+G2XWN3rB
ozi+Gci7PqVwNmCQItt9FRXpzXBRqvSZRjMGibWptW0saQabE83Sdp0Y5KLV
evzoZDO879pfuTGMQUz6WklTpGbY7fJ8qX4Mgxy1jNfB/2wGztP5nQ8mMYj4
mSPDNI4WSHzTdrtqDoNMmt7exa7WAn49gXFxixiku1X/KrduC4gqBPLN0zAI
eoq3dOeJFvDxM9RS+YlB0ow+We+xaYHvVnNJEb8xyKtG3ywppxaQPNA/lfEH
gwQaGv3ed70FftwuGM1fwyCuyNwbtSctsEEV3H63gUEu1BbiD4e3wG5BHY0H
WxjECPv0yNHXLdB7LUT2NAsfcsBAcsDwYwsknH13rpGdDyHr2gjbdbcA630l
TQwvHzJWJu96ZaQFevyKvz3E8CEd2r++us61wJF5Ub5xPj7k85GXVrdXWkC1
zsfyrgAfkvztSobXdgtw7MqBbEE+JOqQ6pIfTyvgX+8V6RHiQ+5otL96JtUK
F+LJd5dF+BCngnez4QdbIYG6xrokyoecU3PXjD7UChWLVcGzu/iQE/lagbH6
rcBWV7ZeL8aHHFZh73tn3ApZHU+vvd3Nh8jn/ZBJsWyF6tjvffZ7+BBRpXTP
D5da4UD5Xj1hcT6EI+dO7af/WsF35nZWFZNXFI4LfLndCrJfnonZSvAhWJxh
a+SDVtj79vEMg8lhKaYBHsGt0IyZPPlAkg/psTureyqGWe9co+lPJouJWjPk
E1vBPvvWsu1ePsSx99In1qxWmI3bb1bI5OxIJ6eZAmY9Dy0t/zCZbnx1d833
VubvkztGTYoP0WG92ZvU1Ap8X9aeXWDy0+q74Q96W+FIZm7VdSa3+N2Hi+Ot
YFt0uMqTyfxHHq8eIbZCqbxr+FUm29KDCoV+tkLiBUkFcyan54ZfY/xthfrQ
iymyTCa7Rct0c7bBxxHZZSIzv6bsm5E8wTaIUkhWe8/kBxMJLyMk2yBzdes8
wuS6+FQTd4U2WHOKuz7E3B/3+aztk4fa4Ci1ys+eyed25pXLGbSBRwQluJd5
PolthZ7bp9qg6trHOC0m44JLD05ZtQFx8UXRc+b5KkPVTKVDG3yKOjPdw+xH
ZWmL5X2vNtCeCo9UYvaL7V4Xl/WTNgjgaxYDZj9Pq/bXHopog6sH3PuMmP2e
+DClQUtpgwhHbbIsUx/7HfHzHTltkNzVZL3K1M8tcUpaTnEbxET7Y1CmvjZe
/hZwa2+Dc+8ZPnv5+RAj87+tJwbbYGIyV6eEqc+oHSyBMjNtEH0w0NmAqV+p
J5if47/b4OLFUxhpbj7E/ahQTsV2GzzPbH3vt4MPKVgWc47nbYcHCeHF9RxM
fdzY12cl2w5ld74mHGRl6uOAYoSGSjts/oT7J7cxSM+sGrJTpx30FS/+s9zE
II62ekVt5u2w/l5JSn8dgwQYnXsFfu1QQq/Ns2fe57ZtG1OpZ+3wqs65cIN5
3wWrLrP8i2qHc9d90l4y/SD90LW7ZR/awU9J62oEielP0k/PqfW0gzd7ZFDL
BAZhW/8sKHmgA9SaS7meNGIQyW7DZdDogPNtDk9v1GEQrYyxITe9DsCTzliZ
12CQq2Zc7wvOdEDFALvqfBkzf6LrAcP7HSCxvhEfkYtBXh4TP3a9tQMurFj6
P4zCIDn8RXtjfnRAr8zvF+kRzPy4U9vfJjogYHDoaVUIBvkV6dO0wegAk7sY
le7HTD+c6D37ak8nnGl4G+t8C4PsfRz2X/n1Toi5vHrdkun/2uekTk16d8Ln
yKNlFUYY5Oz+EkXWp50g8U7ZWwxhnk/XHO10bCeY4866FepgENze4w+mKzuh
VmRQyU4eg+TWLEdx8nUBJeLTq+i/vIjOtnPZhYIukIscWe9M50UsztQ9M67o
AnmrBunfSbzIf+9lLHUbumBa4b218Fte5JXu9LzEcBdoG4yIH3rOi1A8L4vj
Nrsg7P1OyfW7vEjyrM3ju2e6IRR/+FUVlhdhbThtGE3thvaCFalzAzxIV4hW
T4tyL3zd33lpBceNHBPoZHut3Qu3Plq4GY5zIzmJLrqXkV7ogq6GsB/cSHBB
TDrDphcU1A2/rdQy14+SvfYE9UJwFn30djJzvUrK7hsjvdBgMnNs4AI3Ykh5
VrTDsA8CxCWN+6u5EJlXi+u59D6oiAqrz/DfgSyuzkwPafbDxP21zXwaO5K1
UNXBHzMAfEdz3hbtYEX4pT4xCIRBUMElxxrf2ICo66Xu6fuHofFJ8ka/9yr8
QT4TPAJGIHlooRz75hf4HG4qEWschcXHf4LvHaaBu5Zs+uu2USi2v/w4TpgG
djqPX/D1jMLJLE+2nl9U0D+m5co2Ngq5qGdtSDEV2AyzBOj0UehX9lZl1aHC
S6uQG80SY7D6wXJBBxYh766RrI/XGBio6EQluFJgpqDpxQ+5ccCJuUZRqUTo
o3FQDx8ch5UU1b9KA0SoUzW2iFMdhyQeesvj70RIz2vms9UdBx/nEzddw4jg
mt0SPWkxDtWWcg5qckQgpbS9nPcbB8KXTyE19gSgRXW92eweh8onRmrpUzj4
d2PwvZL/BIQEHyRuyc6Ctc6V1+oBE5AlZMfXsnMW8llJYUdCJuBqD0eRwcoM
OCas3jseMwFJpOtBHLkzUN8sYWr1YQK8fxzepyY8A+GyLr8fdExAX3F0xdDC
FIgM0yzaJCYhbteRJMnSCbiVcd+wW2YSwvGZkcOxE9B0a1u3f/8kqKia4L7e
nYD77ELyk+qTEG80F9auOgFjmlrrDMNJoHS9mfXPHoe0F/4fd9+chLK4ipCR
tDFQOcG15V41CYgpWxR73ggU5X0+OFo3CbTXWbHSz0dAS/SclVnLJPiEiOle
8RgBg/mELJUfk3DjiCmL8cEROButbP6TNAlTJ23lqrOHwWvsTMJD4SlwHDQk
aOUPwfd7cYejrk8BxymDiKK+AcBOHHXYvDMF1R/0rERKBqDBaCr0js8UeIg/
noh/NwAduxXGzgVMwZ5PUsPbjgMwWVMesOvtFEBabv9FRj+w8E50pdZNwfa0
6VkOsX4w+SB37evuaWA41aeW+/eBVgK/QsveabjWyX/x0399IBvzjzAuNw0y
nDSurxZ98PfhkCuHKpMD6nYKy/TBF6vnjrbINJBmRzmEIntBhHXJZtNjGuoj
2pVuqfTAjFOdkVnlNKTw2JntedMJXTZf2B1rp6FM3UNX5WYnVJgnNXg1TQPP
Hbrh7ZOdEKvrgyT3TENC0/E9T393gLGAogEDNw0aEQZhPXYd8Bl9eeQtZga0
uzSHuZWZvivltG/OYQZWzMZoI7QWcD2neXHSZQZ0jy+Ga3a1wNlg1sgR9xmI
f8MY/prXAgqUzKXuuzPQFWK1Q92jBQZLyHWVITMQE6PWw01sBk0LL6e4/Bl4
LmdyQonUBGT/0GSTjRnoGI5ZkONshIWLKh4ZLLPwxivC5QxzDnD+KcImwz4L
GX1GOimdDWAuT9SW4J6FA5Fm93KZc8O+5+EpgsJM9rPyv7uvAfqsu25tHpgF
v5fFN9+b1oMq1QYzcmYWZpyFstccaqHC2qI28twsvKt2e4kerIWTNYbe2Auz
UCGVaNn3CwX7GI2Jj3azcH90nm/4OQrPNXk++/w3y/z/VxTjUlUDJJ/q08IP
ZwF3kjRzSLUa0jf3RZ7JmoUWm7WmSMPvoOoujmX9NAuPdBxVNcW+Q3mPwK+S
XGa+es7Q3QsV0JO2cWlv4SzcjGAdz4utgM0Tw0qL32dBetdC1wSpHOzDnrdH
9M7C+5XZMwfel4GIwE/upr+zcEIx55f1oRLor4kMN9uchQR/jYsSAiUQe+vA
jt7tWXDi4tITohWDcIc9+zjHHNDzbyTF5jI5tHmTwT8Hs+z8H6f2F4Pgv6Rf
kvJz0P2xXMFt/zfgmzee9DafgxqewrelxkXQ9XbWfv3MHDyb4TJDlIogyujR
2NNzc2DFyl6+wlcEmA9Fw89t5iBEfZlSm1sIvFckf6Q5zQG+SKferrsAuAd+
Nnd6z0GVQaPvkvwX4Kh9XyifPAfGlzkF+PjyYNzAyHQmdQ4Uaak9cmO5UFhJ
nU3KmAOTqxAUnZ0L9mXHhYU/zcGNHw3zboa58PXLjA/LtzkQIbks7niaA47J
8semWufA9mZM+zeOT1Dx8HNT/PIcZKY0ZydYZEHM6oUr5//MgV2I88NX8lnw
n+/Gys51Zr3dLdZ9fzOB/96Zg6Fbc8BpHRCqkJcJVz0Yz715cGBAzA6W48sE
YdsjludkcGAdm7G5NpkBN7WqxnjMcfBw6Z3vmmMa1PUN5VecwcFKyXOlBOk0
2HX7Z8C1czg4k+qv+Xk6FWo/HlBotsFB5Y3kcEXnVBDZ/cor0BkH1LmE8tse
KVC17oZZ9cUBRd7g3svo94Cp5T9OSMeBLFJ6qf5AAjhfVhJ8k4mDsz9XTKJ+
vYPS1ZP4E9k4wGZ03yurfQdOmg+fp33GwYTx4QMKl99BcQZ+yL4MB/9ZjVJd
4+PhckjFnR+dOBjwTj4/IPUWPpu5pqN/cPCOuJBbcysWtFTlsLCOg8dLNXVC
JrGA8s9O1P7DgZdewudcuVjoG7iyu54FD9Jns50yR17D7yuXYhp58RCgKbCz
+NRrwHqde9wmjYehZ9jri5qvoC8Ja9d/Cg9xcZIXNN2j4NKTzZXzZni4gtPK
OascBTin6jcD5nhAx8fjJukv4Pf+Y72D5/Cga0LxNHr4AsQLtU+N2OPhPlZq
XfNNJLg2qmpN3mE+/+lYPGk8AlYWJQRJ8Xg4xPPd91hpKMSlzLcmJ+KhYHKa
hHkWCkcsSwIuJOPhkj7ZwdQyFO59O8Ooy2Ay0cN2eyEEaA8Ce97n42F42bn5
3MEQIHKSoqwa8MAn9mJ9+tszCCn/ZsTdjAc3b+tV7rBnIH89YANtxYP7UN/9
2EvPwKVrzy3VbjzU5R/H1rM+g6lYc3OuUTwocd5if3QxCIZkvvLU0JjrHyue
6xQMBJ8fT+q9f+KBf6V29thAAIgEn36ovIwHJ/d55eehAWBFwpPfreFh0bOR
IE19Ct35Ym1e7AQwdrcK5qt/As16j8MUxQmw4gcW+IhHUHrBhD3OiADFTdo8
9yP8IMK8InSvCQGC/kU/5rDyA4eTStwfzQig0lYZxiXhB2xHMDvLzhIg518c
r8eX+3BWuFds1I4Ak6S5oUdjvkDuu6i89zYBTO0Hk4+d8oGqttb8LE8C0y8T
zn/d5QMxdUc11LwIcCHHDveS6A1aRRJaWD8CrBbufREU5g1BL6ePOwcRINjO
XnZftxdInHW3ynpLgCsilwVKb90DmvHIgGoCAfgD2LWsDO9B3XHTi6VJBDgQ
wJtptuceuKspX25JI8A46cIni+a7UMxHdyPnEmBYUt02Qv4uWHT6PlBFCeD9
98xKyOxtCDANTSshEcBCkVzwLeo69Dt6OGhSCPDukS1f/ZnrsN/XXDx/kQDX
5Uyf2wtch44MoTeZPwnwBydfphznAaL/UsJi/xLg9qbX931Z1yDnS9ntu/xE
CAhb8IyZvAp/GxOVqYJEiGZ/pz348SqcGX88f02ECA0ZLpi3nlfh146TLk57
iDAqfUsuhOMqGDj3Wp/dR4QWw53o5hE36BMm66vqEMHQwORwbI4r7FPqXPt0
lAjr2uGBEg9dwRcKSuX1ieCX1XZN4LQrSNzy0ZBEiFB+djhJn+YCbs0s8ryn
ieA/Zv039KgLrPmJ85KvEEGxkbfJpskJ5KZOj2aGEkE2O2v86Zo9RDboF9pE
EGFPa/LN5M/28OuTahjXCyLsVuF5EeBkDw1e/Fo3XxHB7gu/98v2S+DG3f/y
8Hvmfl3eZn7MtoOcI5dM6ouIMBZfXqcVfBEExU9LexcTga/+ru7siYvwcOvY
yv4yIrS1nazUYb0Ip9v3ZkZUEUHi6On26SAbWHSc3bJsIcLj/1av/Iy0BvXI
a2XTE8x6uVT9eirPQ7ynXfSraSJIbys1+wWfh21rMzfDOSKslmzWllichz4Z
FeFsEhEwn1IdCLNWcK+Ufvv2EhGqrXYG/hawgpJZ3wMbO0ggzB1Ud13AEo7p
hsSJHyZB6aLLvFGeGQy7iuukaJFgK8Ave8rZDLxjCkZkdUngb6n/QGuPGeQT
RyUUDUgAsgd373puCtJxahk6p0hw4WXTlLe3CbAtDX+5YE+C7SW3cL3rxpC6
95bliAMJsiqk1KnKxqBvyrpk70SCh6+vrxnSjMAnTUXL1Y0EHAZ6fCPeRkA6
E1h59w4J9DID8Z4RJ6EzT6k1+hkJHGxCE/b1nACPYdRDKJQE3bMTY9cTTwAH
mzXv23ASaFo/fY69egKwl56eSY4iwekGsuqLLQSKuAYG8uJJcPgaOThKF4E4
t8ezrXkkQDfUTymHHAfNV0LPzL+QYPjvEruOynHorsqW7y0kwaM4rUmtAQPY
IfLDfbiEBKO77IBNwQAe1B+gEVASqMsTzFOGj4GDdO866wAJHuAvzxJdjgK/
uFdp1RBzf884woYFj0K9yK57vqPM+qiW+Ko6XVDguUwmT5Hgj0XZxUvyusBY
Jg33kklAcUtNTVrWhmftW8UpWyTQcpL4IIgeAa2mDE9b1nmIfH/WQPbREZhH
jVSEOOahKsKTa+voEbAoifwQwjMP3X8DjkuUH4ZdaWKvb4rOw8fq4E+J1Ycg
x0f9jp7yPBzsj9KtHtIAe88fSsuq83Dgmd3d99c0YOcNH2K+xjy4Wi+fH/yr
Dl5OlQ6y2vOAkc44cvKAOuifPmXOhcyDe/wbvq/PVaFHxlFxyGYelP3+ohnR
ShAowUqIsZsHH6lgcD+iBEd2ZaWZXp6HowO7ws3HFSGBd0Gs2nkeiqWPbN1U
UQTXFV/OzJvzwPi3Opk3rgArHdG4u0HzsJUrr+d1Yz9MYoY8NoLnYRGpOJp7
YD80WOxlhIfNw/y9S7Xf5uThVU/ev9QX83DdN9zxkIM8KPe3ina/nQdCWXJl
pv0+cBxjNVHKmweBaQO1J49kwUjCrLskfx6kDhTs6DWUBZXLry4ghfOQfUL3
0g9eWViblHa2LZkHtwmLK6ieDMTO6j8MRefBVObWzx+vpaBl3vfzXP88ZCzQ
avWfSkC+Ys2h20PzQHk6U6MiJwFvrnNUrI3MgyKbFuFEszg4L8Y2CUzNg8b7
C/mDguLwl144dXx+HoQI5xD90t2g8YcikPSPWY86Lt1WcxeI6R6KP7A1D3s0
R9OPEkRhw+/B3q8sZOjVviuzM1EUOtZ3KLVxkqHf561LDKcouG3KG/4RIAO5
qlboPUUYEjgcfc7vJ0Nx2iGOsAlB2Ppvt/YPBTKMfx1j+5YqCG6NfSuWSmQ4
blzll+EqCJrPTvqdUSfD0q46zxdjAtC2rehvepQMxNrhjO8i/LD6dzkAa0GG
lm+XU9s7eMHB/gtSc5YMBS67HRKv8ULDd3dWAysy2BUf8yrl5IWYB2PP9C6S
4ZvyzkufjHlA4Q8aquVMBikz7vtSg1xwcen5C2UfMkRK72szVeSE6nMnLXLv
M9//x0m2YoQD9hVt8Ck+JEMRKUZDJ4ID6Hc8Yw48JYPr4NmrRlR2CKVav5aN
IMNZyvHMe3VsUDIv804smQycQSbSpvEsIGEyZvs2lQxpxpIK/DYsEJgdu0c0
gwxPM8oKv4qygMVVziShbDLInD08vlNtG0vALSTzFZHhT67lwd2mm1iR6dIP
bE1k2GvoyzPfto6N4XvypLyFDKzFx8LqL65jefWN7G61k+Hhhp/+BdIali2h
f+dwDxl8uCv3mPOuYX9ZMR7kjpFhTtVP7MDVP9i+ZkXLcwwydHzfnzrpsoy1
+M1Q4vxFhpKcP1YtXMvYtn3lHJW/yfAr5NknWsEvbG2AcaX8XzLs9rn+XI/1
F7ZAz/XAKgcFJPperjFKfmKjvrz/lyJBASupCz1LuVQs96Tr8HkpChxc+zu0
KEnFhvAqf+WSpYCX2u4slleL2EfXKtzvHaDAstmx3T5PF7A35IZ+GGlSILTg
l76lNxlLskzOXz9MAXL7TJTXyjzW9el/4QXaFFDCPmSzfDiPvTSxZLBHnwJ8
v36drggjYU3f8ucsGlMgOZdSTCkjYJsah56lm1JgfKFv5qwJAYv8Sr5iY04B
hd1DncfH8FhdSxWR2nMUCFSMrTjJhscq8Jg+jb1MAfW1NFmua3NYzidB1nr3
KPBUjvGnlT6JLVmirtd6U+Ar5UPowOlJrJu7Xdqp+xT4zfFKnpIzgW2y1Fi4
8IgCLq8t+uJvjWND9k0F3AmlwMMkx7qMnaNYjrajnzMTKXDOS5VcXDSALTHI
OqecTIHNTfv93moDWLevAn+KUinw1+JSv31+P7YpiYSgmRSITaxi4At+YINv
xw2PfqGAmu/577qxvVg2kZ+s/A0UEGxhc38W24b9Fn75U1wTBWScXYKC61qx
rhstFpKtzP25hy0SGS3YBmLKO8UuCpRfv7rleKkZ+6zCXO3kMAXqVIKrtCwa
sKyOn+weLFAA+ToRdtPyO7aoX3hri0oBE1HHjyc3yrHOJk8zQxnM+ODc1oP8
Mmydpg099jcF3NUjjd7uKcEGsrOHfNmigKjGfzwC5gVYllzHQpzwAjQdPCT3
e+4dtoU6cidt1wJckc1v9Zd5g43StFJ32LMAPdS/O29sR2F3V5z8MiS1AI5b
6g8Mcnyx6q2Kn9sUF+BOsU7nLoMI1IH4K7sAuwAbQjXiscbZ6D6lW+43TyzA
BcxD0b2HclDyLeIBRaMFoFIZ7yeF81Dv3yNZGWYLoNqlmbez7wsayV7zIc56
AWKCw7juBn1Dv8uFp/rfWAD3mofpA3rf0adXWRx1by/A2wC2zas7KlGj3IdS
vz0X4BEnh9LWQCXap3kr+bbvArBWTMftd61GyWCV5By4AG/uY+JXb9SiYo6S
8afiF+Ce8dlpemwD6pVUGC3csAChvlevTza1ouUbSeENTQugJWDueF+oDd1w
DAvyal2Aq61617iutKHh8ld8+7sWQHNeXurP7zY0OZ/3SuzIAugXohULkh1o
M3pVVZi2AFVLNs9NrnShe/CSnUJ7FoGNzX/RwqoPrVGJ4Ba6swif1e1SnZwH
UaHTXqrP+KkQTD1k5bo8gabXC2COCVGhLthrh7z4JKqp94WyJEIFEuV6CFVv
Ej2rSM52EadCQe1Xz8onk2jkDke5E/up0FO4cy2SbQrlaDQTYzlGhf0/8XKS
gtPoH305lqdXqcAm5r42smsWDS1Gp7U9qHAyJezp4MFZVFTFoYZ2gwpNImNH
cXqz6BGJd/5X7lJhnHPDI+nSLHp3jW/F4BEVylbyOhKTZ1FKyRrl3ysqPLp0
rCxx/xw6qdY38LCaCpnjWOWwgzg0bVHoCXstFf78QW5NHMKhrrkXFKLrqRD6
RLun3RCHKlx72yvWRIUrtx05f1viUMr+kQfpLVSQXHLRfeSKQ/9ITku19lGB
ErE+9vEdDhXipV4TJVLhyDa5sJcTjw62qgmlzlOhS2dyb6oIHk0I9aw8uECF
fu90zP19ePTyya//faVSYdkzPljhMB6VZl3m02dQwV3L9oGrLh7FoVplTUtU
WFHZMTB6Co9+fHzf6exvKnRvi1x3uIBHPY5VcI/+oUKuD3OQcsWjqmvrX13W
qeA/34ij3MOjp0hcGwU7afDfjv7gY314lCfL7ONRQRoIJyRW1Yzj0S6XF2cb
hGngZldzMpaER1/JdK+a76IB9ctX58FfePTCFH/G0G4aiE40ToVu41HnwV2n
NuRoELQT+/iEIgHdH2vLCN1Pg8w/i+8mdAnovGVigsBBGvje6B9PQAho3s6J
E4lKNFjzvbJANyagdzr3Lu5TpYHmRrnMbxsCeui5Y1y+Og2KjaeWJBwI6O9T
6cd1DtFgOiDpPds1AvqoQf6VmQ4NAsQ/aIQ9IKDYwKt6A0dp0LDadcnpMQFl
w37COejTQHb9s0rocwLa/I/8gnScBjrFXJvpqQQ04ruy9l2EBmrlcAbSCKiF
363pdUManLOdXPrFjAtoF4QHG9Pgw24B3lPFBLT/F0NzpykN0mOMjN0rCWh8
0aHx+NM02LeeszlaQ0Av3fEOlj1Dg83Octa3LQR0r2qpap4lDQqf7lj36yGg
s5Q/Q0fO0yDx1vpEWj8Bzfx0NKDGmgbBehY0kzEC6n7VX9HElgYPZa5moTgC
qixf/aPvEg3mz0vPPvtFQGmzm/72Dsz683iFl38S0KJU2E9wpMHVaLND9/4Q
0GX/ZS4XFxrwSN4NMVojoDq2nxan/qNBkScazrFFQB8cudxr704De1pk0092
IlolIFA84kGDEQ2rytmdRHRrsSHe+iYNPjbuiL4pRESRtvv+P27TQGPteZ8+
k4OzlB3P3qWBQoBHTJsoEW0JnD7R6UWD2u/Gk07SRJT7SuwBU18acIhglkvk
iKi53imeZj8avHEYYpwWJ6Ixu/5ST/jTwCjje1c5M9639KUPfUyDmXC5Daoi
ERXpcSnRD6DBjuMOsw80iOjFvF0JFUE0gKwP2uvqRDQhrP2RdggNFqRPTttq
EtEJ1ydO38JowG60+lFNj4hKw6GTGs9poC57bfw1M+4sSVTIf0EDg3Q7GR0d
Ipq5msCrFEODWfa1S5VYIkoasKB/fEWDjsD2SRk1IqpYxNK/7w0NTlfssM47
SkRvRpWUpr2lAflIn4mPLhEt8PBI3JtAA8GFLicfZj0/jfY+SUyiwRPxlt4u
LSJ6RK7PWSyFBlo/63xrmPH7m8FGb9JoYCyZyJJ7mIhWjOkqCn6gQewcT+wm
M/6vdBETnUWD9VOP1c8y82Nj0xg8n2iQG5WhcE2BiAbeuTAQlkuDU0/5zRWZ
59V4mqucPZ/Z/5x3DXuYvONgVVJgAQ0W/wiGGMsQUTN2z6ebRTQ4GRVRoCFG
RKNm9rn6FzP312GoJcdPRHuqho1XS2lwgNJZ8onZD6GESCWfCuZ97FE+j+Em
otY+2J1LlTTAcV8IW2bqJf7cr5+3a2ggc4Fu94CDiI6pZg8u1DL94cxzO/o6
U9889hXXGmigpElflaQTUCfizmRCEw0wZ9XS65mT4If6+gCXVhrYKNfRPjD1
TUjx/W+6nQZN8vbKggME9KC/ksnlLhrQLi+EfWTejxsXp5RHe2gwUdX4JbSJ
gOYffs1v84MGLodSfp0vI6AMfuNfPwZoYG66JRqfR0APL64NnR2mQYtokbhS
CgH1bc3/3jlKA9OyS5dlmFyR6ZxiOkED3jTTj6kvCOjfANGg5ika7GewDm09
I6DHHdrcDGdp4Dy8SF5j+kXg0cemtTga3PqiXK7tQ0AbRDVVDYhM/Xwdf8tt
SUA5l/AC3+dp8KnyzNv3Jwioafe7Ze0Fph80ixVrAgGNzDUf+UalgRXprHCX
HAHtDt2u1GDQYJVfH8MhRUDPY689U/rN7Gfsq1DPDTz6VkLSPfsP0x+kjVhc
mX47+qfHTH6dBnFSjs67B/GoxMAztfR/NMDK3+LcUYxHrxTqCElt0UA77GVh
WAkeLbNf4+9joYPzp2fGj+PxKP+OSr5gdjoQslZxZ5/g0TqH49wUbjrILLPY
yiF4dB+v0XaJCB00F7l1HUdxqH8p5+Y1MTo0pf22amjGoQPOrX8lxOlw7oel
u1w6DlXle77WLUmHy1XT0sPRODSk/PSfQGk6GMzteL90HYdOuvL9PiJHh+Z9
vzAv9XGoNn/PEkmeDpZnbK4qKuDQmO8vGYkKdEj58vD8U14cSnKzolko0eGV
8ffFONwcihUUWdxWoYMsVz6HedUc+q5qkPxNnQ5WnYd3+j2cQ3+6x5OuHqJD
+gf1Ev2bc6ipsB1hjxYd5t7rfP53eA5NrxHHderQwfsVdUZpzxy67jEx81SP
DrtKJju3/s2i50VTpg4Z0GGK+GC3zegsmlfrOEHA0uFvnMAx0dRZlO2m7Ni7
E3QIMNKJTrk+i14Www2fNqLDcKtxW4/mLFpSnzm4eYoOC3Mq+cvCsyjf7av9
RWZ0kNS+Hc3onUHd9hzs+8+CDgldDyLaDGbQmkZyt5glHfQedF9xGphGxTzz
OtutmOs9QsLqPafROxK32h9bM99/USOn4NQ02tKs1qphSwcvvR8Jb/OmUJl7
jCbcJTos3ZyYzeOaQpnTbsNbBzrc6Z+prpqcRPtavepMnZj5+DICmzwn0cO+
D8tFb9BhPtQw86THOBopq1/aeosOnIbqFREK4yi+c+ObvycdnjSMrifbjqEG
fmiRmhcdpNqDBAeHR9G4fYEFsz50sPvLXkcMGkVp3Sfy3/gx+Vt321LjCHrq
IXveKX86qG2zZsbuGUFT9zd/Wn9MB88H2heyS4bR1d6wj/kBdPjkt0tpb8MQ
eu6RaabTM+bzHZ8naLeH0BwF3gzhUDqE4+s4jJoHUdb+ztTmcDrcWjfuOKU9
iNo/iU5+EEmHh+el/7U5D6DVynFvjN7S/z+PyB0f7kNFh21er76jg2nIRtXj
gD70dtDul3lJTH3KphncL+9BW1THoq6k0KHVk338ols3Kj2aFCmYTgfKQsMy
mtSF3g92iGj8QIeG8/Whx6fb0V516bD7H+nQ0vryhOBQG6o4PhOslEOHKI6A
26VirWhgaEbQZB4dxPzWrx+RbkF3+nGddvlCB3nvebVJTBOa5HFbmFRIBw6S
//cnwo2ogv3A+I1vdEhludm4U7UeLTbXy2SU0OF3TlFURlMNShL60cRWSwfz
3udH4/WLUC923ejwejpMc901u/k7D93+nWzD10QHjHf/nvTkD2gUiU36dQsd
8HPeewmB8eieUQ/SrnY6WPg7XpRXDkHNU1m4lQbowC/9elfvxc/Y0ZfufV+G
6BBXl/j+sNBXrFtQV8LhUToUtjpypyuVYZe8DruUj9Nhtc7tq9f179inbglK
BlPMfppJrZwoq8EWKWuaW87ToX2tcvcO8zasWLlTjO8/OhhpBj1pIQ9hM3Oa
L/7dZL5vV3H1yOFRrGaSikwACwNeVOX47rw5iq1+8XqenZ0Bx24zymMlxrFm
T1YLIzgZ8JRdt1Tg+QT28cmXP94LMICjb+60Ud0slkd7JVFWmAE6EQtD0x5z
2HiFy64fRRkwuLJ6iOfXHHbfnnpl5d0M6J4rVoNtHLaQ5+BygTgDqII9Rnw0
PBbXi4o2yDNA6WRm1ODBeaxn/f6pUwoMMK4y6mzPn8dufIv82KnIAMcXLU86
MsjYiKyft8+pMMDEstpTk3cBuyv+os6QGgMKE8XKu00XsB/Cq7cuaTKg48TN
FpEji1j1h/tapw8zQISF9eaGBxVr6kC3JesygEWwn5zkTMd+IUu957dgQL2g
mr+wyTI2IiXUefosA+Tcsy8Uf1zGup2nHSiwYgBb8pt45zu/sXurq4vO2DLA
WvL0qdHEFWzky8stUa4MKJB2f7bPdg3roZO4xPuQAQtnZiXTxLewRoss5eOP
GLC0+zjbn8EtrEy6x+O8pww4IfXO+l3ANnaY5yjX6RAGXCnAc3DHscA3NK1L
PJzZDz1Hu4odrBDjzRVLec6AaFZcO82PFYynhvc+f8mAvmP7BjAebLAvRNSU
K5vZj/xU50ECJ2wdfbxzJIdZ/+5m2tC7HTBGw/dnf2aAzPo6ZXf/Dij5YJ5w
v4ABKpd3cguc54JXtsVXTn1lgJ3ZL1lxBhdsK5/3Dq1mAN/pt9cM2nlg8sfL
VPYBBsRL80Rc2cUPFWGr/w0MMaDxdgwZGeGHOH0npcxR5vle+HmZ/bwAmH9U
LzGcZoCU3XH5D1qCUPmguz2IwoCVFeHwz55CEK+m/dKKygA1ec2OpRwhuIdL
tpZjMEBaJdlDmyEEFu84JJaWGPCOwtkXqS4Miha3Zup+M+tJH37kUSQMHKyD
Wa9WGZDaX/QKOyQMs6X6N5z/MsDQUNi6UVkEqm9kamhuMuD6SZvk/CgReCeD
WdneZsDBaa3JjikR+B8Wj09R
          "]]}, Annotation[#, "Charting`Private`Tag$21542#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.35082, 0.595178, 0.853742]], 
         LineBox[CompressedData["
1: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
yaTV68jx2fPyP3A395+pu/aKCr514kmX1L7j9PqLHhzPodXLYp+Z0ygJJx0u
aMCaR8s/O6nCPZuA29EK5B59QwVrgs9X4/pl3DfywlDeWyroKnv/2zy4iKvM
Nk4NKKZCeu9mOX3fHC7OpsJer4wKFS5Zrj0uMzg3LtGDQpVU6GeZWNfLmcAZ
ND3AL1VToesS1wWTM2O4QwGr76o+0Px8rEkr5PRX3K6CpW/EJyoUB5L/008a
wo3PfNCybqCCjbKezge1AVx1otTOoWbaPL0wsJeT78UlGD5qWW+lQo110xP7
6504j53vD1s7qHBVUlFoUagNJ3O9UcC5jwobnG53bys24CYHn75gHKbNJ7+t
m0p5Na4m8s+V4a9UYGolTB1DK3CJJx3kc8ao4Ob1ZUMFKcUZv1au1Jmmwhfe
COYXrXk42YvJd/jnaP53/7tNt5SNY+DdQecXaPePm3UQKvsSV3u7ryuUQPMz
b1hBXVEiLlnp2FMLEhW4eOQaODPjcN7zGVZSVFp/2A5YVlyPxh02cZtpXKdC
23CkwhZTCI6J/ktu3B8qnGWertO3uI2brTrp6rhJhaKXwnR4Dh/cJ9ccFdV/
VNDnIAuZ07niUiQ4f+3uUoFDUeHLS3on3P8AIt2cLg==
          "]]}, Annotation[#, "Charting`Private`Tag$21542#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.000056888248128710166`}], 
               
               Offset[{2.1603628846114393`, 2.0815456292844843`}, {1.12, 
                0.000056888248128710166`}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.342695149864787}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.342695149864787}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.000056888248128710166`}], 
               
               Offset[{2.1603628846114393`, 2.0815456292844843`}, {1.12, 
                0.000056888248128710166`}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.342695149864787}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.342695149864787}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{84., 6.500000000000019}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{84., -6.499999999999981}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.342695149864787}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.001\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{47., 1.0436096431476471`*^-14}, {1.1800000000000002`, 
              0.342695149864787}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.00016896742733469466`}], 
               
               Offset[{1.068666359980003, 2.8032039189197584`}, {1.12, 
                0.00016896742733469466`}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.9329703539396608}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9329703539396608}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.00016896742733469466`}], 
               
               Offset[{1.068666359980003, 2.8032039189197584`}, {1.12, 
                0.00016896742733469466`}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.9329703539396608}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9329703539396608}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.9329703539396608}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00101\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.9329703539396608}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.00007578421268738447}], 
               
               Offset[{1.4610187207437342`, 2.6201954693565024`}, {1.12, 
                0.00007578421268738447}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.6378317657057042}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6378317657057042}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.00007578421268738447}], 
               
               Offset[{1.4610187207437342`, 2.6201954693565024`}, {1.12, 
                0.00007578421268738447}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.6378317657057042}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6378317657057042}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.6378317657057042}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00099\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.6378317657057042}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 7.809007365859153*^-18}], 
               
               Offset[{2.9735256228549747`, 0.3976749554912081}, {1.12, 
                7.809007365859153*^-18}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.047559051644850595`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.047559051644850595`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 7.809007365859153*^-18}], 
               
               Offset[{2.9735256228549747`, 0.3976749554912081}, {1.12, 
                7.809007365859153*^-18}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.047559051644850595`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.047559051644850595`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.047559051644850595`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.047559051644850595`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 134.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.000010130420206701533`, 3.662996791477432}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.001\"", "\"Old:VG=0.00101\"", "\"Old:VG=0.00099\"", 
       "\"NDSolve\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.35082, 0.595178, 0.853742]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9108149517330074`*^9, 3.911112247122283*^9, 
  3.911246083117031*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"ea1ce267-750c-440d-8ad8-39f8dc662517"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe1000", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00101"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108026445451193`*^9, 
   3.9108026520866733`*^9}, {3.910802920253564*^9, 3.9108029356201243`*^9}, {
   3.910804916429454*^9, 3.9108049343142605`*^9}, {3.910805320255932*^9, 
   3.9108053227780933`*^9}, {3.910805372641622*^9, 3.9108053745752125`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"0f8cecd4-5526-42c1-9d9b-550a061d848a"],

Cell[BoxData["0.0007306784049354021`"], "Output",
 CellChangeTimes->{3.910814970499958*^9, 3.911112264502223*^9, 
  3.91124610080696*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"2c8f37eb-86b1-48ea-8aac-e0bd795cff30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe1000", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00099"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.910802122148862*^9}, {
   3.9108022128506975`*^9, 3.9108022129259405`*^9}, {3.9108022559971285`*^9, 
   3.9108022587783585`*^9}, {3.9108026547373376`*^9, 
   3.9108026597940865`*^9}, {3.910802923947401*^9, 3.9108029380760612`*^9}, {
   3.910804921795312*^9, 3.910804935750843*^9}, {3.910805324425682*^9, 
   3.9108053303171315`*^9}, {3.910805379906988*^9, 3.910805381388592*^9}, 
   3.9108186849103937`*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"2ae585c1-1e1a-4559-9aa1-006ec132d706"],

Cell[BoxData["0.0007446581430617586`"], "Output",
 CellChangeTimes->{3.9108149888830295`*^9, 3.910818705597829*^9, 
  3.911112213519104*^9, 3.911112282219463*^9, 3.911246118410606*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"9acc11bb-4abf-4753-baf6-478293c49bf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe1000", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, 
   3.9108026624465485`*^9, {3.91080292688105*^9, 3.910802940903279*^9}, {
   3.910804928163669*^9, 3.9108049367570424`*^9}, 3.9108053325853095`*^9, {
   3.910805384418645*^9, 3.9108053853886385`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"c7a43afa-917a-48a1-998e-07d297ca9efb"],

Cell[BoxData[
 RowBox[{"{", "0.029800985927123158`", "}"}]], "Output",
 CellChangeTimes->{3.9108150153503013`*^9, 3.9111123000574503`*^9, 
  3.9112461502437925`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"460e14ed-8beb-47e5-9471-3f1049e755ed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Ne", " ", "=", " ", "500"}], "*)"}]], "Input",
 CellChangeTimes->{{3.91080464370375*^9, 3.910804646036909*^9}, {
  3.9108055410871973`*^9, 3.910805541511659*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"58381203-aee8-4431-a392-94f89ade9c85"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"time", ",", " ", "selectedNe"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectedNe", " ", "=", " ", "500"}], ";"}]}], "Input",
 CellChangeTimes->{{3.907125194243817*^9, 3.9071252064056964`*^9}, 
   3.907125243916231*^9, {3.907125305152856*^9, 3.9071253390972643`*^9}, {
   3.9071254528484173`*^9, 3.907125453703746*^9}, 3.9071331781905193`*^9, 
   3.907133520791461*^9, {3.9071335962492847`*^9, 3.907133597643078*^9}, {
   3.910804656416136*^9, 3.9108046619686084`*^9}, {3.910805531178693*^9, 
   3.9108055357598743`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"baeba677-bb66-4a77-88f3-3e64f8a2f81e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "0.001"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardNe500", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.001"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00101"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00099"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}, {3.9108022853779926`*^9, 
   3.910802304053191*^9}, {3.9108026205523844`*^9, 3.910802636680106*^9}, {
   3.910802851401987*^9, 3.9108028969227853`*^9}, {3.910805262315879*^9, 
   3.9108053065181503`*^9}, {3.9108053618906217`*^9, 
   3.9108053633425975`*^9}, {3.9108056255407543`*^9, 3.9108056257253075`*^9}, 
   3.910805702069395*^9},
 CellLabel->
  "In[117]:=",ExpressionUUID->"9dde2650-c8d9-4941-aff9-b2f388e1a09f"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 117, 31, 28771884763955561247, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910815015426646*^9, 3.911246150386737*^9},
 CellLabel->
  "During evaluation of \
In[117]:=",ExpressionUUID->"a5ce47f7-24f4-4e5f-bd30-81fef12c1e6e"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 117, 32, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910815015426646*^9, 3.9112461504232836`*^9},
 CellLabel->
  "During evaluation of \
In[117]:=",ExpressionUUID->"ea0325c8-40e8-4925-a657-349f9b4a43e8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$21976#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1:eJwVl3k8Fd8fxsUtohRJ0YJCyPatlNA8Y02WoogkIW3Kkki2pLJESiVJUhJK
WbIL2ZcshSxFZOdy3ask2X/z+2fm9Z4z5zPPnOfMc86I2TodPs3OxsYmTh3+
f9Y7PdxYTDclBj6PpXdJT4OmKez8U2gXVvFYtf+nOo2dzyOjM4S0MHRyMsDH
YBr69W3pz4RMoB718MSC4zTM7KYKHwjZYWKp/c34jGl0KgRqhgq5Yo9TeJu/
6gxerD0UECx0C3vO/qlw1p6FH1fGtttC4eiyX7Jitfo8ZPbfD0p3Dgdn/bKI
ZON5NPk70TuqwkF6VMmq285DnEP2rfyVR9gjau+kd3MelfOv5JubIiC1uOVr
f/k8VkxEKInceYK5z2FXlXQWENnpqZm1EAPepvuJMuqLMD8Wmzr+6xWMYy+q
fw5hI1kdJtwvhePB9iNP+NgDNjLAiuv0Ec14LPNaUP0ZyUZmnHISzg6Ph58C
x+HOeDaS13Gfv9eeBBziu5/8ooiNrLjx3WKZTyLsVTj3aP5mI3e841u2kSsJ
G1I0U8aPLCF5Fv0s929OxaSorVchFzsZed7MSlYnFR6p3w//W8lOijfLWvM5
pqIt47Sj/Bp2knjTdqqjMBVbNd473dnETua9icjKkU+DznGN0FU72MmxI4wC
/c9pSPTSrPvPgp00ff249vLKdHgXq97oS2Ano0/cMDgjlg5SzHBpwFt2spff
od5cKR07Vvwu2prGTjr5aHzZdyIdmVdG2o3y2Mnbh8eaOJPTkSia8uJSLTtZ
OKfR/tQgAy9HnqnUM9lJCWPmcFlIJnQkP/mP/sdBCvvuVzkbm4kWM5NJ/d0c
5OrkFyHcOZlIrgn+mKDCQc5wHZE37s1EydIfJ/Q1OciG4pzLXcpZWL3Y+MXI
hIP0VPRb+DeQBVUX/0ADNw7y8yoBAXkyB7leCwucGRxk2T6H042mOVAYba7I
yOYgcy9UZrteyEGYjvrIsQ8cZFzV1WP5ETkwWM1m+KiEg7zq2xmjO5YD3vzo
G9VfOMgtrATpU1G5+K57bUZ0lIN0/7wXkX/yoJ6+dS56E43klc8a+MT1Aek5
zbG2ojTyVajindmNH1DWv+HC1q00stFg23cr7Q9IszKyj5CikdtrBS5LRHyA
/ihDSmMnjfxZxUpI35OP38c8hd7vp5FXtl0w7NfPR3xP4y5pPRq5InBwYq11
PgZjBb2jDWjkXp1O0iMoH1fP5oW5GtPIh+U17fieD1b2fO+IBY3cXxLPW+9Z
gD0qn7PGL9LILlGxrIW7BdD/zv59gxONdL0efVwxrgAnleR2aFyikbF4+Pph
bQEm5EVuX3ejkbOF1zUsNhYCpVM/ynxoZOqH41eGCgthfqO68HQojdQRbtso
1FSI6B+Fj7Tu0cgfHofL9AYLEZdhkrr5Po1cvvfA6hTej7idfTupPJxGnsrZ
neR68iO8dU60tT2lkesy+bqWLCmC63HZ0g1vaKTlnVmTfsEiKD31iGtIopEv
7QZqK2WLcLJsF/v1dzRSdm1eXoh5Ef5bvKT2OZVGalyxfrQ2rQhMb3qZVDaN
DDqot+JfRRF8n15Ne59DI+sld91s7yiCw/aErUp5NPLd6M3cLxzFOCcb/XJ7
AY3cHW2WEK5QjEKeOPG2Ehp5LKiux1+lGN4vKs/uKqOR3q7qm9y1izFeqKZ6
p5xGlhhsDz92vBhfeMUit1fRSIP5Bb/NgcXwPbvPULqORtpYJZx43VUMkSfd
lWItNPKW3oYnT+jFKGs1eyPVSiMTdoc1B/8pxnna8v9k2mgkg9dT34G7BHJ7
Hitt+k75XWS4d8fuEhxcR6qU/aCRT96Wum5VLwHXlaMOzztpZMHjPWkCBiVI
0Ws2utJFI5c4i22bsilBzESxvEA3jbwjOilQEFoCbUa34+o+Gpmywt4oObIE
VVdfG5ZS3PivKyQmrgQGc97Djv00UrCxmt0vrwS9cRrmuQPUfCrcR7iUl+Dz
jp2KpoOUH2/SPU59KYFXiEINg+JYv+hx7YESqB+10lsxTCPLHfhk94yXIOFV
zM5wigePBZyVmi2Bp8uyAUE65dcO5y5uvlLM0b0SVozQyIObB4TmNpSi9n18
ni/Fl7gtTMckS3Fkh8LTMYqzezXrvqiVgjb/7kveKI1s1fX7Fbq/FKHduz0E
GTTyb8pHQYPDpbi7T32bI8WCa+dUuU+UwtPrUEcxxXu89tpUny3F1meDEbxj
NNK850pAgEsprBB63Iziq/sz32r5lCL5ca3MU4ojk381sAeVosZl+7J2inPX
KPwtflAKu53KrDVMGvnN4+IG32eliGu4NqRL8b+fb8h9r0vR3Rw6fpXi9TpD
p2fTS7HbcpLnFcXK78RD8gpLIbFmv2oNxeb8tmnu1aXYoSR4fZTiq1eftyh9
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
RvDg2UyvaKYltN54bPrjNIKqLe3/VC5YokHxYrSD2wjayZ5nWh3HMQzjKOvr
I7irmz5/r9QCglYbInQiRhB+rUB+U7I5XKJSQ/lLqffXVa1cPmqCnLmowNLy
EXR/LxLWzzTBnFWAn0vVCKJ9Ly1Zds0EgVtPuDXVjWBwZLfgAL8Jot9xn3jQ
NgL1lT13FTWOoOLjaVn+sRF0PNkkrpFtDG4xY8lS1ghKXyxl5AQYw+immqjL
7xHs7Lu+MsrMGO371wg0TY3gy+zc7hczRmA2FM/eZx9FPVP5aIy2Edb3bajl
Wz+KodqNfxw6DXFCm7OiRHgUJ0NFDsuGGOJl4u+PlzaNgu1Zj+LbvYaQvfgp
vXHLKFTWhiX3RxpAffJK1H25UZDXJRo3W+vDnrPpPJ/mKBhb7BfdVx9A4fYg
Lj7HUSip4Kw9Swu7m9fVP3Cm7u+/tTMxWwtp3on3BS6PQrK/ou/MNS28rK8U
Xn91FOnsx/kvrNJCkNNSOZEbo7BgXOi9sEcThzNuGMtFjMIz+F2DT4w6ao/z
C6ZGjmKyQa7Q3UEdWrSX7YpPR3F532T2gJo69piWnNr1YhT/1psaCHeS2Di1
6KaaNIpbibue1W8hMaTiE3Xg4yjOe4mSav77YN234mRt8SjMtaXL+hT3oT0k
eqth2ShaNz2yMu9UQ92P/HdG1aN4/nej20tlNaRfm/lo1jSK1ND6vtB/KvAu
de87PTiKUJslN89GK4NPz0X2Bi8D4nctlBvP78KLklU8KnwMjPlHB9K27YLi
3mT6rzUMZD948fdX/04clBpOsBFi4NC0+O0/tjsRvMxKTF2cgU9SgQ72Z3eA
VnZAkE2FgfRTtrfTwxTxUGXoT44aA39sPtdVmCtiS/qtr05gYPJmSYuHmCLI
2KKwn1oMdH6zve59XgE+vko8RYcYCFfG0OYKOfxVFWO7dpqBSFH19G2ZMvDP
+NildI6B06cIgZVmMhDYblk4Zs/AhL9Zy7JZaewUfux5wpkBfbXZSVkdaTj/
WzGp5sXAiZcuKTPD20DP/EefDaPaBb/7nbaSwFXZiOqMhwzIvlS1teKTANer
nYkXIhj4nt4SpVkhDsmHjnYdTxkY/nWr7pOCOGwv9Xd9SGCAf4a97Naqrfgh
1/DVo4ABh/ybkcVTong+yufDUcQA7wWOMzEForB9c0QytIQBs4uVAdtviIIu
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
srDbwztVZcyc+B/bspRO
          "]]}, Annotation[#, "Charting`Private`Tag$21976#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1: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
IpFFr4BqqKX6BMXdKYf3ePyoQAeno80cxXNrHrkqLVYgPpUndukUjRS52Bo2
xVUJ27jvy1ZSrNm7OjeFvxK3X6beWUWxlY5Jt8uGStC6OtS5KfZJvv1PRq4S
mUv5Odkpjlpdt2lEpRKc9mwLP6n933ktNYwjKlEXT4oO/f/8nt3u9gaVCFh1
8Xjj/8/X9g8XN6/E7v36nZkUiyQVv+21rYTycyvvexTv5Jnve3qyEhJJFvqn
KLb21KBZeVbCKHxQX5ti324vuXVXK1G55PVlPoqjyex9HbcqobrMdrCPym9R
wvT58PBK+CkkXEmg+MtKpSdmLyqx/byK2UmK/547VbImpRLORnm2mykW60oa
asqpxNrHX+O/UvXUwijXndJK/Eh0kntEsW38RiWj+kp81Jqb0KX4ygr7g8vb
K+EeZD7FovRT0tnzLGiiEnk/d+SqU9ynJVyp86sSgbc0/D9R+luMO0RfwlaF
+4lD909TTHi0bLsiWAWySvXeXUq/pVy1tRfIKkzwtMlFUfr/eobG2G5Uhb5k
1aO8FLO1a/P9sKiCPWExcI3qFzKmyNr9VBUOBzC+W1H9VLYj65tzRBWyx4ps
Wqj+/PqCtVYmpgqrdDScN1LMtkxx13BqFfLyOts8+mikdmtisF15FeYjPvYu
UP1d4fpM9MhUFfw+0ehfKT/IHj91yvZ3FVJ71oeIUfzKRbPwOFs1pqS81M0/
08igE51WZwSqkbw4+Sa/g0bqO/BGXdtVjTzeMMv9lP98PBK0Lj20GnHddlUV
DVR8nw+6ZEdUY7hpLKu0nkZmHpYqKHhZjU3D+ysL3tPIBxalhytzquGnufLA
i1oaecj0T8TnL9XIHnXcQ1B++EXfTZBDsQZrY79xVL+l/Ld2pxOXeg04coab
rlN+W7KXO3eVdg3yrmu3k/k08oVuovk6ixqcPVMQlZZDIx3IgYeKfjUo5zFU
s8qgkXR1Cz7LDzWYjtwgseQVjfwlo7U6za0WHp+lT96/TdVncHftbe9aKDxe
Vpl3k0YGP9O/6nKtFpltjYzOYMofBMxZG5/UwqyopWTVNcrvl5z6GFVVi++n
T4XqXab6sycy7KZoHZRy3Gt+Uc/Dv2E/Vzu+r0OS+ilXYz0aqWs0V6v9qQ7a
Dr4q07qUvy5j8xfvr4Pd6DnBe7tp5Hq/FdPdP+vw3NZAsUqLisdVqtlU4j3Y
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
a6xNu9FiQfwPx2pzRA==
          "]]}, Annotation[#, "Charting`Private`Tag$21976#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.35082, 0.595178, 0.853742]], 
         LineBox[CompressedData["
1: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
E+R/S5Caew==
          "]]}, Annotation[#, "Charting`Private`Tag$21976#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.3445131908320934`*^-8}], 
               
               Offset[{1.5049647329273732`, 2.595203489641003}, {1.12, 
                2.3445131908320934`*^-8}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.43851580917075145`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.43851580917075145`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.43851580917075145`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.43851580917075145`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.3445131908320934`*^-8}], 
               
               Offset[{1.5049647329273732`, 2.595203489641003}, {1.12, 
                2.3445131908320934`*^-8}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.43851580917075145`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.43851580917075145`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.43851580917075145`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.43851580917075145`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{84., 6.500000000000019}, {1.1800000000000002`, 
                0.43851580917075145`}], 
               
               Offset[{84., -6.499999999999981}, {1.1800000000000002`, 
                0.43851580917075145`}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.43851580917075145`}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.43851580917075145`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.001\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{47., 1.0436096431476471`*^-14}, {1.1800000000000002`, 
              0.43851580917075145`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.321477673906805*^-8}], 
               
               Offset[{2.2550893773359255`, 1.9785277102498888`}, {1.12, 
                2.321477673906805*^-8}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.22310975599619495`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.22310975599619495`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.22310975599619495`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.22310975599619495`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.321477673906805*^-8}], 
               
               Offset[{2.2550893773359255`, 1.9785277102498888`}, {1.12, 
                2.321477673906805*^-8}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.22310975599619495`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.22310975599619495`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.22310975599619495`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.22310975599619495`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.22310975599619495`}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.22310975599619495`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.22310975599619495`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.22310975599619495`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00101\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.22310975599619495`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.0320039711241458`*^-8}], 
               
               Offset[{2.9986240959764667`, 0.09084894622018544}, {1.12, 
                2.0320039711241458`*^-8}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.007704405830101516}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.007704405830101516}], 
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.007704405830101516}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.007704405830101516}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.0320039711241458`*^-8}], 
               
               Offset[{2.9986240959764667`, 0.09084894622018544}, {1.12, 
                2.0320039711241458`*^-8}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.007704405830101516}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.007704405830101516}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.007704405830101516}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.007704405830101516}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.007704405830101516}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.007704405830101516}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.007704405830101516}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.007704405830101516}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00099\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.007704405830101516}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.351164521656849*^-8}], 
               
               Offset[{1.0873103379708164`, 2.796025076593876}, {1.12, 
                2.351164521656849*^-8}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.6539246349410812}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.6539246349410812}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6539246349410812}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6539246349410812}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 2.351164521656849*^-8}], 
               
               Offset[{1.0873103379708164`, 2.796025076593876}, {1.12, 
                2.351164521656849*^-8}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.6539246349410812}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.6539246349410812}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6539246349410812}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6539246349410812}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.6539246349410812}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.6539246349410812}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.6539246349410812}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.6539246349410812}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.6539246349410812}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 134.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {0., 2.6193965277492453`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.001\"", "\"Old:VG=0.00101\"", "\"Old:VG=0.00099\"", 
       "\"NDSolve\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.35082, 0.595178, 0.853742]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9108150406693144`*^9, 3.9112461746773815`*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"99a013df-7fde-4601-b8aa-0c17ee08c3f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe500", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00101"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108026445451193`*^9, 
   3.9108026520866733`*^9}, {3.910802920253564*^9, 3.9108029356201243`*^9}, {
   3.910804916429454*^9, 3.9108049343142605`*^9}, {3.910805320255932*^9, 
   3.9108053227780933`*^9}, {3.910805372641622*^9, 3.9108053745752125`*^9}, {
   3.910805629450953*^9, 3.910805629642226*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"5207d0cd-282e-4788-93d4-0d53b2b805e2"],

Cell[BoxData["0.00017477423350533667`"], "Output",
 CellChangeTimes->{3.9108150588913355`*^9, 3.911246192017149*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"ab7795de-434d-4297-9c68-44e02411f586"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe500", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00099"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.910802122148862*^9}, {
   3.9108022128506975`*^9, 3.9108022129259405`*^9}, {3.9108022559971285`*^9, 
   3.9108022587783585`*^9}, {3.9108026547373376`*^9, 
   3.9108026597940865`*^9}, {3.910802923947401*^9, 3.9108029380760612`*^9}, {
   3.910804921795312*^9, 3.910804935750843*^9}, {3.910805324425682*^9, 
   3.9108053303171315`*^9}, {3.910805379906988*^9, 3.910805381388592*^9}, {
   3.910805634274371*^9, 3.9108056345103626`*^9}, 3.9108186968087463`*^9},
 CellLabel->
  "In[121]:=",ExpressionUUID->"8e20ec20-4fb9-4692-b132-973f97d21215"],

Cell[BoxData["0.0001745227491762873`"], "Output",
 CellChangeTimes->{3.9108150771446505`*^9, 3.91081872160146*^9, 
  3.911246209373876*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"ac20b427-7e42-4bd0-b27e-db39b39507ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe500", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, 
   3.9108026624465485`*^9, {3.91080292688105*^9, 3.910802940903279*^9}, {
   3.910804928163669*^9, 3.9108049367570424`*^9}, 3.9108053325853095`*^9, {
   3.910805384418645*^9, 3.9108053853886385`*^9}, {3.9108056372882566`*^9, 
   3.9108056375274105`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"9a0282ca-ca39-430c-a2ab-a9840e30569f"],

Cell[BoxData[
 RowBox[{"{", "0.0012913504183844138`", "}"}]], "Output",
 CellChangeTimes->{3.9108150970472317`*^9, 3.9112462289986296`*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"92519e48-eaf3-49d1-a650-4522640f79e9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Ne", " ", "=", " ", "250"}], "*)"}]], "Input",
 CellChangeTimes->{{3.91080464370375*^9, 3.910804646036909*^9}, {
  3.9108055410871973`*^9, 3.910805541511659*^9}, {3.9108057388179026`*^9, 
  3.9108057391899385`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"d16caa43-ceef-432c-b0b3-65640591314c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"time", ",", " ", "selectedNe"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectedNe", " ", "=", " ", "250"}], ";"}]}], "Input",
 CellChangeTimes->{{3.907125194243817*^9, 3.9071252064056964`*^9}, 
   3.907125243916231*^9, {3.907125305152856*^9, 3.9071253390972643`*^9}, {
   3.9071254528484173`*^9, 3.907125453703746*^9}, 3.9071331781905193`*^9, 
   3.907133520791461*^9, {3.9071335962492847`*^9, 3.907133597643078*^9}, {
   3.910804656416136*^9, 3.9108046619686084`*^9}, {3.910805531178693*^9, 
   3.9108055357598743`*^9}, {3.910805742813879*^9, 3.9108057458574142`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"62631f5e-accd-437e-b4c2-128e8d3f3092"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "0.001"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardNe250", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.001"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00101"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00099"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}, {3.9108022853779926`*^9, 
   3.910802304053191*^9}, {3.9108026205523844`*^9, 3.910802636680106*^9}, {
   3.910802851401987*^9, 3.9108028969227853`*^9}, {3.910805262315879*^9, 
   3.9108053065181503`*^9}, {3.9108053618906217`*^9, 
   3.9108053633425975`*^9}, {3.9108056255407543`*^9, 3.9108056257253075`*^9}, 
   3.910805702069395*^9, {3.9108057515396557`*^9, 3.91080575514063*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"d2c32f7d-b287-4c5d-8dc4-4b2e1488f48d"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 127, 33, 28771884763955561247, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910815097130817*^9, 3.911246229085314*^9},
 CellLabel->
  "During evaluation of \
In[127]:=",ExpressionUUID->"154a9beb-ad3e-4430-ac51-51d3fcf73ae2"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 127, 34, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910815097130817*^9, 3.9112462291080694`*^9},
 CellLabel->
  "During evaluation of \
In[127]:=",ExpressionUUID->"7325a1ac-be36-446c-b000-eb0dfb7ff221"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
m15eJjCet9DxyUAH/wN065XH
          "]]}, Annotation[#, "Charting`Private`Tag$22411#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1: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
dmWFBbsrC2S5v7XxPzwIi1E=
          "]]}, Annotation[#, "Charting`Private`Tag$22411#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1: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
+U3TcTySXD+3skJgSeVTV4DhcfwP6XSpsg==
          "]]}, Annotation[#, "Charting`Private`Tag$22411#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.35082, 0.595178, 0.853742]], 
         LineBox[CompressedData["
1:eJwV1Hc01u0fB3AzKlkpI/KTkQqpJK3n3RbiySiEG6GkSEbJVkh2JYRslb0p
PPaojAolZWXf7sVTItxfv/v54zrXeZ3zOde5PuN8ZC7fNLDjYGNjm2Od/25t
u+lP9eQLf1U+NXF4xiTAdVLCeVhcDbb+ypHJLO9LiU8qFT8FjdCH42ksj0vK
BdxR0MOxzhLHDJZ1OvtKnosbodmTseM/y4VLZa1Km+LE9yDx/+JXtG3irBVI
MNWrOfKc5ZnA3mbrWGv0avc/iWPZ2Hbhn8fitsgjyUpHs9x8UqKyKekKfqv8
GApmWVX2aNEv6WuYumPa48VyEodVtnzGdXzh61lxYpl39F76RQUnyH2NMbNi
uWqku7PJyBmHv08w/mbZ+byttnnsLTxV2VB1lGWF+vnWX30uaGM3qNrB8uDu
BycjxN1wJnF5diPLMSli9fJm7kgx0SetrBDQFsg5Upt0G7oFCRxjLFfQO/Yz
pO9C5qrCXA7LN0ikkgfWnliVXzwczvK2LobK/zK84K42UHud5ch8YUV9BV84
/FxylGf5tFRmJvmqH8IrWhJWlwn4tiYINhj5I4feyPaVZTV1pQjT2AAEDbnf
vc9y6qa/g0PFA6GemCPfskTAqzOu+WJVIIJPz8s+Yvli0AiHrFkQnOYrLMxY
5pu/5VedFIxei6bAmT8EPHpjPKjSD5G5lj375yIBw/DBitf1D/FniTOsmGWV
UwrzgdahWK/8NseR5fHSyltSGWFIkKrOHFkgoP/km4OeQiT2pVuGFv8moKQj
my3RFokGR//L1izzct6YmrwaBfOLJZ4CLFu+IYrrjKJhs9n1xpV5Apt2RKuY
xD4Cj1m0xepPAgG8pdsfiseg/UJT5eAsgZ2aj0JKnGPQ8Hb0oT3L3UE3yd/b
YkC9Lmo4x2DNE6dSrsrtpwiNOdGxQifQysxU6e2Oha/BAdtlKivfn7H7pcOf
YVai3C9umkD5HvfYs2PPcGQhd5adZZKz4cKtQwko4/5AcpgiUEgTeNM8nYCB
eFm1/ZMEDKZDjjicTsLr492dJWME4gc9T5YTyVjTzyWiN0TguKRp5tCFFMz8
kAuOH2TN76UD3Lz5KZCTfrE8MkBgK/WuTb5yKpyCLP69/p3AzWvq8mwDqch8
liLu8JWAsG3hqyyNdBStdL7k6SZgYppWODuXCee0yrD3TQQY343WpUtkIdXT
+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
1xd0TuP/I8GXFA==
          "]]}, Annotation[#, "Charting`Private`Tag$22411#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.0006497874018952769}], 
               
               Offset[{2.3800978202731167`, 1.8262350248341965`}, {1.12, 
                0.0006497874018952769}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.14498899532269038`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.14498899532269038`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.14498899532269038`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.14498899532269038`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.0006497874018952769}], 
               
               Offset[{2.3800978202731167`, 1.8262350248341965`}, {1.12, 
                0.0006497874018952769}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.14498899532269038`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.14498899532269038`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.14498899532269038`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.14498899532269038`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{84., 6.500000000000019}, {1.1800000000000002`, 
                0.14498899532269038`}], 
               
               Offset[{84., -6.499999999999981}, {1.1800000000000002`, 
                0.14498899532269038`}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.14498899532269038`}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.14498899532269038`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.001\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{47., 1.0436096431476471`*^-14}, {1.1800000000000002`, 
              0.14498899532269038`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.0006487534755695961}], 
               
               Offset[{2.984839310877657, -0.3012213276635545}, {1.12, 
                0.0006487534755695961}], 
               Offset[{0, 0}, {1.1800000000000002`, -0.018335224404664778`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -0.018335224404664778`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -0.018335224404664778`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -0.018335224404664778`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.0006487534755695961}], 
               
               Offset[{2.984839310877657, -0.3012213276635545}, {1.12, 
                0.0006487534755695961}], 
               Offset[{0, 0}, {1.1800000000000002`, -0.018335224404664778`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -0.018335224404664778`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -0.018335224404664778`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -0.018335224404664778`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {
                1.1800000000000002`, -0.018335224404664778`}], 
               
               Offset[{90., -6.4999999999999805`}, {
                1.1800000000000002`, -0.018335224404664778`}], 
               
               Offset[{10., -6.499999999999998}, {
                1.1800000000000002`, -0.018335224404664778`}], 
               
               Offset[{10., 6.500000000000002}, {
                1.1800000000000002`, -0.018335224404664778`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00101\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {
              1.1800000000000002`, -0.018335224404664778`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.0006508235015601766}], 
               
               Offset[{1.1127324105109024`, 2.7860054886160217`}, {1.12, 
                0.0006508235015601766}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.47164299252270275`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.47164299252270275`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.47164299252270275`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.47164299252270275`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.0006508235015601766}], 
               
               Offset[{1.1127324105109024`, 2.7860054886160217`}, {1.12, 
                0.0006508235015601766}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.47164299252270275`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.47164299252270275`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.47164299252270275`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.47164299252270275`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.47164299252270275`}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.47164299252270275`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.47164299252270275`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.47164299252270275`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00099\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.47164299252270275`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.0006498497540600102}], 
               
               Offset[{1.564940715942714, 2.55948443159647}, {1.12, 
                0.0006498497540600102}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.3083141166649235}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.3083141166649235}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.3083141166649235}], 
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.3083141166649235}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.0006498497540600102}], 
               
               Offset[{1.564940715942714, 2.55948443159647}, {1.12, 
                0.0006498497540600102}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.3083141166649235}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.3083141166649235}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.3083141166649235}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.3083141166649235}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.3083141166649235}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.3083141166649235}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.3083141166649235}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.3083141166649235}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.3083141166649235}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 134.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {0., 1.9376867340248272`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.001\"", "\"Old:VG=0.00101\"", "\"Old:VG=0.00099\"", 
       "\"NDSolve\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.35082, 0.595178, 0.853742]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9108151226077747`*^9, 3.911246252364829*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"2987999d-d104-4a71-8384-e8e51f0ef71f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe250", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00101"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108026445451193`*^9, 
   3.9108026520866733`*^9}, {3.910802920253564*^9, 3.9108029356201243`*^9}, {
   3.910804916429454*^9, 3.9108049343142605`*^9}, {3.910805320255932*^9, 
   3.9108053227780933`*^9}, {3.910805372641622*^9, 3.9108053745752125`*^9}, {
   3.910805629450953*^9, 3.910805629642226*^9}, {3.910805768405221*^9, 
   3.9108057707835274`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"56047da5-64fd-417a-aa99-08e9c2332825"],

Cell[BoxData["0.0001145465054374031`"], "Output",
 CellChangeTimes->{3.91081514100513*^9, 3.911246272356021*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"43eec2d4-a751-4f6d-8c7e-df3da6ca1bc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe250", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00099"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.910802122148862*^9}, {
   3.9108022128506975`*^9, 3.9108022129259405`*^9}, {3.9108022559971285`*^9, 
   3.9108022587783585`*^9}, {3.9108026547373376`*^9, 
   3.9108026597940865`*^9}, {3.910802923947401*^9, 3.9108029380760612`*^9}, {
   3.910804921795312*^9, 3.910804935750843*^9}, {3.910805324425682*^9, 
   3.9108053303171315`*^9}, {3.910805379906988*^9, 3.910805381388592*^9}, {
   3.910805634274371*^9, 3.9108056345103626`*^9}, {3.910805776200283*^9, 
   3.9108057765775623`*^9}, 3.910818705680827*^9},
 CellLabel->
  "In[131]:=",ExpressionUUID->"b6ec8940-880b-43af-8761-69dc19a244e7"],

Cell[BoxData["0.00011461335019095632`"], "Output",
 CellChangeTimes->{3.910815159239614*^9, 3.9108187397578354`*^9, 
  3.9112462896375136`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"fedb3fda-d3da-473e-ab99-8c4ceb3d3cbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe250", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, 
   3.9108026624465485`*^9, {3.91080292688105*^9, 3.910802940903279*^9}, {
   3.910804928163669*^9, 3.9108049367570424`*^9}, 3.9108053325853095`*^9, {
   3.910805384418645*^9, 3.9108053853886385`*^9}, {3.9108056372882566`*^9, 
   3.9108056375274105`*^9}, {3.9108057792769184`*^9, 3.910805780467504*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"292e570f-823e-47af-8556-0937a443333e"],

Cell[BoxData[
 RowBox[{"{", "0.00006132647770785403`", "}"}]], "Output",
 CellChangeTimes->{3.910815178894347*^9, 3.911246308200233*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"6d0e7562-de29-4a56-82e9-eabe8963b79c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Ne", " ", "=", " ", "200"}], "*)"}]], "Input",
 CellChangeTimes->{{3.91080464370375*^9, 3.910804646036909*^9}, {
  3.9108055410871973`*^9, 3.910805541511659*^9}, {3.9108057388179026`*^9, 
  3.9108057391899385`*^9}, {3.9108058148232975`*^9, 3.9108058150951004`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"5f3c9289-ea2d-4b3f-b2f2-55c02f72f1ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"time", ",", " ", "selectedNe"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", " ", "=", " ", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectedNe", " ", "=", " ", "200"}], ";"}]}], "Input",
 CellChangeTimes->{{3.907125194243817*^9, 3.9071252064056964`*^9}, 
   3.907125243916231*^9, {3.907125305152856*^9, 3.9071253390972643`*^9}, {
   3.9071254528484173`*^9, 3.907125453703746*^9}, 3.9071331781905193`*^9, 
   3.907133520791461*^9, {3.9071335962492847`*^9, 3.907133597643078*^9}, {
   3.910804656416136*^9, 3.9108046619686084`*^9}, {3.910805531178693*^9, 
   3.9108055357598743`*^9}, {3.910805742813879*^9, 3.9108057458574142`*^9}, {
   3.9108058034608164`*^9, 3.910805813095408*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"59a21f8c-3597-45c8-97cd-a32d92600741"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "0.001"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardNe200", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.001"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00101"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "0.00099"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}, {3.9108022853779926`*^9, 
   3.910802304053191*^9}, {3.9108026205523844`*^9, 3.910802636680106*^9}, {
   3.910802851401987*^9, 3.9108028969227853`*^9}, {3.910805262315879*^9, 
   3.9108053065181503`*^9}, {3.9108053618906217`*^9, 
   3.9108053633425975`*^9}, {3.9108056255407543`*^9, 3.9108056257253075`*^9}, 
   3.910805702069395*^9, {3.9108057515396557`*^9, 3.91080575514063*^9}, {
   3.910805820108266*^9, 3.9108058201802206`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"ed213763-b48d-461e-8a3f-b3d2fed21db1"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 137, 35, 28771884763955561247, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910815178974283*^9, 3.911246308279002*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"df3f2b25-d510-4deb-bb4e-bcb07d90d962"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 137, 36, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910815178974283*^9, 3.9112463083092527`*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"e9019ab9-c363-46e4-b266-80380a8b3e36"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$22846#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1: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
JKpNt+Z7htLwP+2V04uLJO425EadsqPhH9F9faY=
          "]]}, Annotation[#, "Charting`Private`Tag$22846#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1:eJwVjms4lAkDhicUChOpDFk5VVJLpYPaer7iymGsQrIdJFJJB2tiHTahjOQQ
1VRyjIlNlqk12tYhkiQpZigJYxpjdjDzvlGamGL7fjzXfd3X/ecxDQjxPKxC
oVBCvu//dD0s5dUPeW95+Vajj++shJqD4a/9NDvsjnNEtpMSa/IzcypojrjJ
yO0P2K4E/WXXX7m0XTDw1e8hHZTwCVTUXqEF4rNkXj0FSvTZXHBIo4XhyOkD
e6fslLg1f0diMi0B0azHl48tViJeo2LpRRoLZ7322M4an8Qvewo4H0Zv4xB3
6aKp1EnMmY7f7/QDB/QViuCvJpOw9CCkT1K4GIrdmxN7dwIRr+yR+ekfuB37
5v7EZAILubqCGTPqsNbI2mU76wseiBxa235qwI7fRJmiMQUagnON9sgacaZi
3zK+qwLjSzZTy04+w/vGwmHT4s9QmSida2TZgnfCyoK7I+NYN33wgVd5K5p3
BLIl68bRmmD3qml5G/yO3p82jPsEk4yRiRKiHbXdBXw69yNGFP2C17Z8fNlg
dqFqdAy3h6tbdC51YF7zuXyh4Rh0jP8gxeJOzL3jLeQ7jiL1WOWRWxZvML3T
hbri9w/4/L9ScVBsFxL8F5vZbiERtrqRu+DJWzw7SE3ZXShHf3ljCs/0HYZX
UrPLxSNQBndmW0X34Nq1tKroVcOw3qo+daS6Fy8WtW/Ty5fCqdD06P2FAoTE
vePSP0gQYexn9n5/P/ibYi5WBg5ihcx7TtfPQhjMvHbfXzqAedQPGo2TQhSG
rDJP8xZBrS6bY57zHgtKr7tpSIU4blfdrUkXIc2c1anJE6DUJeDWo88iHB/g
28z52oPxEcO5kusDKPHa2NbD6Eall5Mqy1GMt708X3f+G8Q6M/O5EjFOpTEZ
hTGdMO1zfctmDmKvZuyrtV58bFyfwKKtluAJVeExuagd+39om5jRIUFVw8Wp
y76tGG9JE/0a/y+WRHl3Tkc1I1PtQJinhRRef07g3OKnmCeoLFRplGLWluRX
zUYNmBkTv8s+dAhe2ld/HNv2CJSSAxyR3jBu89INVbb+A0YWJ02vYRirrOY3
c4O5qLVO0tA9NYIXkQ6ybNyDritjxTkdGSg1u5vzHpagd2V7R1SNDFY7Dewo
x9nIH9GNUa2TYcB2SxvDm42AEq8laY9lKNAyq/0INoYsuiJvNcnw0L78/OL5
bHw2Ehg/a5eBVuHka1lfCN3ZsqP6gzLsX3LfudugENsl6l/LteXo6dAX8Dpv
4V4eLMQH5IgZtbkSK8vBx+iP6v7+cszW93yv9TwH63z+GOk7JEf7uIoqtygH
1VRqRVeQHFOTzQU7/HLQFCfY+oIhh4vQM7G6Ixs9ATF+fyXKMVotLPN7nIVZ
S6uz4srloKWS34o5mfDlrNM1npLDIfzohmtvWHiw94tOO4XAxjPRlwcesKAz
q0rrvCqBw8o1Zu43WKjfv1ljSOO7i62fRPzCgtlsx2nuPAL1dScIo96rkAR6
yN2sCJgHWdrnS6/glOGJ52d2EcgSLw6mL7iMpqcrn9n4EKAdbvHTnsyASSjZ
KNpDYGyvL324LwPtzxj1zn4EStVW9XwqysDq8Ki/9YMJlGVF1tLXZ0DRllj0
ZyyBhacOqZK1lxDHLIjvvUtg602q5dfzKdCOUHf1LyNQe0CHEuydgqygk3oS
DgGboNSLaktTUEG3Z5NcAgZyYUBdSzIkurxGlToC2mUTLq76yaDnUTSsOghc
D3PkFnGSsOBvv0vhSgI3pC4hX2Ylgn3n6e7JbwRcaVvd3vUxYZtlbRJLIfHb
/NRiCZcJlxgFJ2kmCS37f1POHmLijEM6L5tKYubrPUtKGhIganuk32BOIk//
wVh30nmUSY2zddxIrCFtJNZ28UjKZR4UuJM4al6+jKoVj0BPuWW5B4lkY6NU
C3EcFtXU3PvZh8TJOwt2DrLikJy+ryk1gMQxfoR65GgsgtbdHJ0dRcLvkfTc
jqsxMEvQd1YvJpHbnnfhokkUpjac0e66Q6K4eZ9aeE8kuuUD/OJSEoRz3K5H
NyKR4VPhu/0+CQvf7LxjupGYXu55mllDYiDJx9JYMwK9vPQ81Q4SYt6nDS2a
4XiYqDjU8ZpELef8yegXYWBt8rNivyVxIfOlDTMtDPSiH7nbBCQ00z8ml+iF
oSry5fP4IRJ6oT5dS01P4/rKtekeMhLHf3peWTzIQKgoZ5cpScJKR/D72bsM
LHM70V//icRsJ6eR9WsZUJvReTtDQSLnXMVymjIUwspNwQcnv/fNozGej0NR
E8y2sf32/Z/RBGfgQihumMwZn54m4WtfldLqHor/APUqfAU=
          "]]}, Annotation[#, "Charting`Private`Tag$22846#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.35082, 0.595178, 0.853742]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$22846#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.004220099090663357}], 
               
               Offset[{2.4694869689695897`, 1.7034183602654362`}, {1.12, 
                0.004220099090663357}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.11849747894999199`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.11849747894999199`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.11849747894999199`}], 
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.11849747894999199`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.004220099090663357}], 
               
               Offset[{2.4694869689695897`, 1.7034183602654362`}, {1.12, 
                0.004220099090663357}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.11849747894999199`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.11849747894999199`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.11849747894999199`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.11849747894999199`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{84., 6.500000000000019}, {1.1800000000000002`, 
                0.11849747894999199`}], 
               
               Offset[{84., -6.499999999999981}, {1.1800000000000002`, 
                0.11849747894999199`}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.11849747894999199`}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.11849747894999199`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.001\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{47., 1.0436096431476471`*^-14}, {1.1800000000000002`, 
              0.11849747894999199`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.0042146688013397285`}], 
               
               Offset[{2.947591236115564, -0.5583062822275251}, {1.12, 
                0.0042146688013397285`}], 
               Offset[{0, 0}, {1.1800000000000002`, -0.027165187270286176`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -0.027165187270286176`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -0.027165187270286176`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -0.027165187270286176`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.0042146688013397285`}], 
               
               Offset[{2.947591236115564, -0.5583062822275251}, {1.12, 
                0.0042146688013397285`}], 
               Offset[{0, 0}, {1.1800000000000002`, -0.027165187270286176`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -0.027165187270286176`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -0.027165187270286176`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -0.027165187270286176`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {
                1.1800000000000002`, -0.027165187270286176`}], 
               
               Offset[{90., -6.4999999999999805`}, {
                1.1800000000000002`, -0.027165187270286176`}], 
               
               Offset[{10., -6.499999999999998}, {
                1.1800000000000002`, -0.027165187270286176`}], 
               
               Offset[{10., 6.500000000000002}, {
                1.1800000000000002`, -0.027165187270286176`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00101\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {
              1.1800000000000002`, -0.027165187270286176`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.004225539214202404}], 
               
               Offset[{1.134385021661445, 2.777259552622002}, {1.12, 
                0.004225539214202404}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.4098290215047617}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.4098290215047617}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.4098290215047617}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.4098290215047617}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.004225539214202404}], 
               
               Offset[{1.134385021661445, 2.777259552622002}, {1.12, 
                0.004225539214202404}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.4098290215047617}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.4098290215047617}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.4098290215047617}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.4098290215047617}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.4098290215047617}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.4098290215047617}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.4098290215047617}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.4098290215047617}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00099\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.4098290215047617}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.004220342850602352}], 
               
               Offset[{1.6123844919329378`, 2.529864867967094}, {1.12, 
                0.004220342850602352}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.2641611127235814}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.2641611127235814}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.2641611127235814}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.2641611127235814}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.004220342850602352}], 
               
               Offset[{1.6123844919329378`, 2.529864867967094}, {1.12, 
                0.004220342850602352}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.2641611127235814}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.2641611127235814}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.2641611127235814}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.2641611127235814}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.2641611127235814}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.2641611127235814}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.2641611127235814}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.2641611127235814}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.2641611127235814}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 134.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {0., 1.7065019880840635`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.001\"", "\"Old:VG=0.00101\"", "\"Old:VG=0.00099\"", 
       "\"NDSolve\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.35082, 0.595178, 0.853742]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9108152045146503`*^9, 3.911246333055325*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"2b80c35e-6b5b-4ad0-b08c-10740164ff3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe200", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00101"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108026445451193`*^9, 
   3.9108026520866733`*^9}, {3.910802920253564*^9, 3.9108029356201243`*^9}, {
   3.910804916429454*^9, 3.9108049343142605`*^9}, {3.910805320255932*^9, 
   3.9108053227780933`*^9}, {3.910805372641622*^9, 3.9108053745752125`*^9}, {
   3.910805629450953*^9, 3.910805629642226*^9}, {3.910805768405221*^9, 
   3.9108057707835274`*^9}, {3.910805824214615*^9, 3.9108058242930984`*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"c3a62e25-6dce-443a-b147-2a2f40358dfb"],

Cell[BoxData["0.00009563386232242549`"], "Output",
 CellChangeTimes->{3.9108152227917433`*^9, 3.9112463505326514`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"ed73ac83-5205-4823-9627-8802a40b3465"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe200", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "0.00099"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.910802122148862*^9}, {
   3.9108022128506975`*^9, 3.9108022129259405`*^9}, {3.9108022559971285`*^9, 
   3.9108022587783585`*^9}, {3.9108026547373376`*^9, 
   3.9108026597940865`*^9}, {3.910802923947401*^9, 3.9108029380760612`*^9}, {
   3.910804921795312*^9, 3.910804935750843*^9}, {3.910805324425682*^9, 
   3.9108053303171315`*^9}, {3.910805379906988*^9, 3.910805381388592*^9}, {
   3.910805634274371*^9, 3.9108056345103626`*^9}, {3.910805776200283*^9, 
   3.9108057765775623`*^9}, {3.9108058264366207`*^9, 3.910805826527983*^9}, 
   3.910818713325307*^9},
 CellLabel->
  "In[141]:=",ExpressionUUID->"d0a029e6-73a1-4329-9f16-8cc4b83f2d10"],

Cell[BoxData["0.00009570012383173566`"], "Output",
 CellChangeTimes->{3.910815240962736*^9, 3.9108187579313936`*^9, 
  3.9112463680071177`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"0486ed94-3a7d-4511-a18a-8539a5b0e94d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe200", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "0.001"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, 
   3.9108026624465485`*^9, {3.91080292688105*^9, 3.910802940903279*^9}, {
   3.910804928163669*^9, 3.9108049367570424`*^9}, 3.9108053325853095`*^9, {
   3.910805384418645*^9, 3.9108053853886385`*^9}, {3.9108056372882566`*^9, 
   3.9108056375274105`*^9}, {3.9108057792769184`*^9, 3.910805780467504*^9}, {
   3.9108058289133987`*^9, 3.9108058290181327`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"d4fcdab3-c8fe-4f6d-8867-b0bd2eab52ad"],

Cell[BoxData[
 RowBox[{"{", "0.00002211062749469804`", "}"}]], "Output",
 CellChangeTimes->{3.9108152604629803`*^9, 3.9112463870442853`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"ae3e2535-402a-42a3-9a2c-824e0dd35d58"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                 "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
          "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "******)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**"}], "******)"}]}]], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.911091292198033*^9}, {
  3.9110916044204383`*^9, 3.911091612334941*^9}, {3.911110190078397*^9, 
  3.9111101902629185`*^9}, {3.9111125623916492`*^9, 3.911112562769867*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"95323a42-df1f-421c-9ae0-332b0db013dc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<path-integrals-vary-ne.m\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"kmax", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kimura", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_", ",", "n_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "m", "}"}], ",", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"4", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "m"}], "+", "1"}], ")"}], "*", "x", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"m", "+", "1"}], ")"}]}], ")"}]}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "x"}]}]}], "]"}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "y"}]}]}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], "*", "m", "*", 
         RowBox[{"(", 
          RowBox[{"m", "+", "1"}], ")"}], "*", "t"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"haywardNe1000", " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Kimura", "[", 
       RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
         RowBox[{
          RowBox[{"pints", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "pints", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.911091292198033*^9}, {
  3.9110916044204383`*^9, 3.911091612334941*^9}, {3.911110190078397*^9, 
  3.9111101902629185`*^9}, {3.9111125623916492`*^9, 3.911112562769867*^9}, {
  3.9111129294169846`*^9, 3.911112932585181*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"aadd6e62-504d-4f04-ae98-69b78dc3e33a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<new1through5Sequential_50Kimura.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SimplifiedHayward50", " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", 
           SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", "*", " ", 
       RowBox[{"new", "[", "j", "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "0", ",", " ", "kmax"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.910441098479672*^9, 3.9104411460445724`*^9}, {
   3.9104655620267887`*^9, 3.9104655727661486`*^9}, {3.910801146850128*^9, 
   3.9108011553372817`*^9}, 3.910806315821726*^9},
 CellLabel->
  "In[149]:=",ExpressionUUID->"b9baae2e-9826-4f83-b488-271515edc216"],

Cell[BoxData[
 RowBox[{"Clear", "[", "new", "]"}]], "Input",
 CellChangeTimes->{{3.9108011604998713`*^9, 3.910801162494501*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"92d980d9-4fae-4534-93da-b5f4ec2c48a6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "fitVar", ",", " ", "selectedNe", ",", " ", "jumpSize", ",", " ", 
    "selCoef", ",", " ", "genVar", ",", " ", "start", ",", "time", ",", " ", 
    "soln"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitVar", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectedNe", " ", "=", " ", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jumpSize", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", " ", "=", " ", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genVar", " ", "=", " ", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", " ", "=", " ", "0.00001"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}]}], "Input",
 CellChangeTimes->{{3.910440697865986*^9, 3.9104406988182306`*^9}, {
  3.911091317251209*^9, 3.9110913357472963`*^9}, {3.9111117485605016`*^9, 
  3.911111775095213*^9}, {3.9111119031459775`*^9, 3.9111119151108294`*^9}, {
  3.9111124204485407`*^9, 3.9111124207295227`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8d8df561-1929-45f5-be81-50cc89320ef5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ne", " ", "=", " ", "1000"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"time", ",", " ", "selectedNe"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"time", " ", "=", " ", "0.05"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"selectedNe", " ", "=", " ", "1000"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.911091294798537*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"59c45ae6-84a7-4e9b-8dcf-534038d5f17f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardNe1000", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", 
          RowBox[{"genVar", " ", "+", " ", "\[Epsilon]"}]}]}], "}"}]}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", 
          RowBox[{"genVar", " ", "-", " ", "\[Epsilon]"}]}]}], "}"}]}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.911091294798537*^9}, {
  3.9110913463371763`*^9, 3.9110913740059795`*^9}, {3.911091583478368*^9, 
  3.911091588586109*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"08080160-846d-4390-a30e-fd6a07d00fc9"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 164, 37, 28771884763955561247, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9111113584274673`*^9, 3.9111117863943586`*^9, 
  3.911112056251872*^9, 3.911112741657242*^9, 3.911114000142561*^9, 
  3.9112482146888404`*^9},
 CellLabel->
  "During evaluation of \
In[164]:=",ExpressionUUID->"4496df08-2518-404c-8400-d0d704067a1a"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 164, 38, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9111113584274673`*^9, 3.9111117863943586`*^9, 
  3.911112056251872*^9, 3.911112741657242*^9, 3.911114000142561*^9, 
  3.911248214814116*^9},
 CellLabel->
  "During evaluation of \
In[164]:=",ExpressionUUID->"23f0c4e6-c73d-477b-804d-cdd578d58a2a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
QvxVXWstQyKiFc+RR9Igwt9s/Uzd18tIc9NQ4HstIgw7NfsrSi4j6PcUCxNd
IlCyjlVX4QiIsv4J7joDIoyiI9GU9SVEgk3LN9aMCNm2gexP7BYRJp8A47Nu
RFBIIhT+SJtDyjfIO3UPicCTIayeaDSH2N67mXbZgwiiXzdd7zHPIc36cqvX
nhHhvcuWXoPbLPJcZMrPOZgIOXtjO/ofphHFN1riW6FE+KWS/7pKZBpZxJZ3
PAsjQp7Z+yi2lClEfSvs0MtXREjWw8Stxk0ijG0qHzKTiHDM/qaZ+7txpPx8
loF0ChEKJfD4YvFxxLaU82fJO1o86+fpjhSPIc1vCSgukwjBEqoVvq2jSJBT
3PDoRyLgTA3lNLAjyD7udXqORiLQxw51Wy8MImWhZrlxzUS4HWqSORE8iNj8
ab1yFE8EzM6pvA7JQaRxKfWNZBcR+r4NcDk9GkACq3VlLw0TIaTKd9xCoB85
LVs10D5KBJ1Ar7Kp9j5kPl3E02CCCCp0q+7Gnn2IWvhOo8UsER6KtOhHlPUi
9Ja5Nz1XibDhd6ws0KQbKRk4+O8fmQglW35Xapu7EGtN38xgKhG+ae6P2VXs
QurlTSixm0ToOuI5GibYifgzMDz/+I8IgvIxLEcx7QhdvmXx/MFVSPnxPOfG
5RaklTzinHZoFco6Tx/52tmMRMgbnjQ/sgryZ9ujL5g0I4erL30cElyF1/QX
pOedmpCTeMkPbZKrwCbRZBhf2YBsYjIcgk+sQh1hXzKzfgPy5epRabWTq7Dp
gZ9IXq5HNIb359corILd1zeKTUL1iPnS95wiZBUSV62lm7W+IiJSjvceXFyF
+Ki/HqWva5EVxyVxSfVVWC87+PL3XA3ycHMkK117FXykzv/XHPIFCWP4mhFn
vArNitI9Q7+qkM/Coe+eOqxCLWVHV8buE+J7l85S2WkVCi89XEucL0PU870E
N11W4VPWhSEWyzKkT94xxenxKpz4Oe6bZF2KrIDhW2t/Wj7CSRuyv4uQoqCO
W4JBq1DPGOOZz1WEPMJf4hsPXgVP+3OR80ofkb2rZxKvha8Ckxo57X7AB4TX
8mjC5YRV8E0i4ZLV85DJ9DgThqRVkFV1/m7pmYtkLO0/VJ+8CppiquZKjTmI
rBNd3Nn0VSit0qbe08xG1L2XYmQKV2G0oVXQIzwDwdRbGhKLVkGQciDFnJCO
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
vT0q8ArYG9kP7of/Aef6oMg=
          "]]}, Annotation[#, "Charting`Private`Tag$23296#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1: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
cTyE32elhJguQ5B228G3hesgFHrMvz0MG0LEf9czjdWdEVmxLXfftSH0d4+p
lHU7YfKJZjh/1BBOBBIbeOKcUOEnonMibggZ3u1Pv/x2hKdA241N94ewu/Fi
yvX2/Xiq7WhSnjeEVAo1Kuu5PcSkzFf5vxrCRjmP6ZZj9jg3v/XXmjdDKNo5
uypD1R7mH2UfXns/hAN3Uw/seroPw67U+T01Q5g8NZ7gkWuH9ZFH3vR2DSHw
znX3jK69SDy9PyaudwjGgRddeh/uxYKdmadh/xA8cNM713svWuU1JB7Th+Df
r3FImGsvfF+PnTw5MYS8xFORoetsUEA9ozy3mI5c8dOHsoz2YKte6G2pTXQs
q44Vjvxihq/uUropOnR4sTfXPIgyg39sTsdqPTo0aK77/Q3NkD30TVrVgI7o
AGTa5Zti1e116bq76HATPTZel2QCnomvL2yd6PBUvqXBH2OMB7LeezoO0FGp
bNi5x8oY20y5J5zc6Pim9luFEDNGQKqGjrsnHU/Myed8iUag7w4u8jlFR6eV
yY3lz3aiIUutNiaEjuC2Nwt/hnfg6NeSo+JhdPyzu3947M0O8PLYCSVE0HFY
XfSqT8gOEI6XdydH05HP6LgrI7MDefzt7VmJdGi9szjD3EvitudFam0WHTMh
X4qvvNkOrTjxEIsXdPSU/1sr6LIdTe8fK7Xk0tEymJ0WwbsdiyU/eX0toEOB
VOJ2tjdAULny6GAJHXrlJ3yl+bbhwKqWWe52OuwpU9xCMVsgIuX3+v0XOhyU
Gr/e2LYF5ZLLfM98oyPx0gV7yrAeVASdmcwejn6mS272WuphfIr+tYVJBxmj
FZYuo4uQj/OvUubpEL7rlXiWpg2dqvTTDtwMlC87nLwtTRuMEiMNcV4G+AqH
T7S4aMOyIDIjVJABj77Lkwe6NmFZ6vKbJ5YyEPFtOdHetxFPA9af0ldn4EMu
Q8uWogWn05/UpjQZCGH92aeYtQFLjgcMZW9g4GVq1pc/Bhvg51Z0YPVmBjZU
5prke63HNvNdFvwkAwXPugzbPmqiWd5V9cs+BihJFP+nDWoIluYejN3PwCE/
+ZubfdWgvSwz1dSZAWWd3QeGVqjhrhB7+YeDDJCxQQ0ZR1Xh/usM38MTDMj8
pMvor1iLX/UxAz5XGZhSs46XebwG3cJfjs79xwBDaEsNeWgNKixlxyPCGVju
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
          "]]}, Annotation[#, "Charting`Private`Tag$23296#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1: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
WdneZsDBaa3JjikR+B8Wj09R
          "]]}, Annotation[#, "Charting`Private`Tag$23296#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.35082, 0.595178, 0.853742]], 
         LineBox[CompressedData["
1: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
yaTV68jx2fPyP3A395+pu/aKCr514kmX1L7j9PqLHhzPodXLYp+Z0ygJJx0u
aMCaR8s/O6nCPZuA29EK5B59QwVrgs9X4/pl3DfywlDeWyroKnv/2zy4iKvM
Nk4NKKZCeu9mOX3fHC7OpsJer4wKFS5Zrj0uMzg3LtGDQpVU6GeZWNfLmcAZ
ND3AL1VToesS1wWTM2O4QwGr76o+0Px8rEkr5PRX3K6CpW/EJyoUB5L/008a
wo3PfNCybqCCjbKezge1AVx1otTOoWbaPL0wsJeT78UlGD5qWW+lQo110xP7
6504j53vD1s7qHBVUlFoUagNJ3O9UcC5jwobnG53bys24CYHn75gHKbNJ7+t
m0p5Na4m8s+V4a9UYGolTB1DK3CJJx3kc8ao4Ob1ZUMFKcUZv1au1Jmmwhfe
COYXrXk42YvJd/jnaP53/7tNt5SNY+DdQecXaPePm3UQKvsSV3u7ryuUQPMz
b1hBXVEiLlnp2FMLEhW4eOQaODPjcN7zGVZSVFp/2A5YVlyPxh02cZtpXKdC
23CkwhZTCI6J/ktu3B8qnGWertO3uI2brTrp6rhJhaKXwnR4Dh/cJ9ccFdV/
VNDnIAuZ07niUiQ4f+3uUoFDUeHLS3on3P8AIt2cLg==
          "]]}, Annotation[#, "Charting`Private`Tag$23296#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.000056888248128710166`}], 
               
               Offset[{2.1603628846114393`, 2.0815456292844843`}, {1.12, 
                0.000056888248128710166`}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.342695149864787}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.342695149864787}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.000056888248128710166`}], 
               
               Offset[{2.1603628846114393`, 2.0815456292844843`}, {1.12, 
                0.000056888248128710166`}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.342695149864787}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.342695149864787}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{84., 6.500000000000019}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{84., -6.499999999999981}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.342695149864787}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.342695149864787}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.001\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{47., 1.0436096431476471`*^-14}, {1.1800000000000002`, 
              0.342695149864787}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.00016896742733469466`}], 
               
               Offset[{1.068666359980003, 2.8032039189197584`}, {1.12, 
                0.00016896742733469466`}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.9329703539396608}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9329703539396608}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.00016896742733469466`}], 
               
               Offset[{1.068666359980003, 2.8032039189197584`}, {1.12, 
                0.00016896742733469466`}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.9329703539396608}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9329703539396608}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.9329703539396608}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.9329703539396608}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00101\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.9329703539396608}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.00007578421268738447}], 
               
               Offset[{1.4610187207437342`, 2.6201954693565024`}, {1.12, 
                0.00007578421268738447}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.6378317657057042}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6378317657057042}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.00007578421268738447}], 
               
               Offset[{1.4610187207437342`, 2.6201954693565024`}, {1.12, 
                0.00007578421268738447}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.6378317657057042}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6378317657057042}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.6378317657057042}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.6378317657057042}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00099\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.6378317657057042}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 7.809007365859153*^-18}], 
               
               Offset[{2.9735256228549747`, 0.3976749554912081}, {1.12, 
                7.809007365859153*^-18}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.047559051644850595`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.047559051644850595`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 7.809007365859153*^-18}], 
               
               Offset[{2.9735256228549747`, 0.3976749554912081}, {1.12, 
                7.809007365859153*^-18}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.047559051644850595`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.047559051644850595`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.047559051644850595`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.047559051644850595`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.047559051644850595`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 134.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.000010130420206701533`, 3.662996791477432}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.001\"", "\"Old:VG=0.00101\"", "\"Old:VG=0.00099\"", 
       "\"NDSolve\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.35082, 0.595178, 0.853742]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.911111370875152*^9, 3.911111807277289*^9, 
  3.911112076193819*^9, 3.911112762244272*^9, 3.91111402513081*^9, 
  3.9112482435246696`*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"33487d5d-9c04-4ec4-aee6-5d48ac8fb00d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe1000", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], " ", ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", 
           RowBox[{"genVar", " ", "+", " ", "\[Epsilon]"}]}]}], "}"}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.9110912774974585`*^9}, {
  3.9110914487613397`*^9, 3.911091492934575*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"ac13a8d3-44dc-48ab-9bd0-cd383ec5153c"],

Cell[BoxData["0.0007306784049354021`"], "Output",
 CellChangeTimes->{3.9111113833039045`*^9, 3.9111118238124046`*^9, 
  3.9111120921702566`*^9, 3.9111140429826965`*^9, 3.911248261309501*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"3d28a0ca-99e1-4401-a9b7-8accd0c1ceb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe1000", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], " ", ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", 
           RowBox[{"genVar", " ", "-", " ", "\[Epsilon]"}]}]}], "}"}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.9110912774974585`*^9}, {
  3.9110914487613397`*^9, 3.911091492934575*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"c24a8171-8ef6-4b49-8286-6ed3b44f523b"],

Cell[BoxData["0.0007446581430617586`"], "Output",
 CellChangeTimes->{3.9111113976190066`*^9, 3.9111118415132046`*^9, 
  3.911112109843725*^9, 3.911114060884965*^9, 3.9112482790497785`*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"b8ed7dde-7b03-4c73-832f-f703631a19af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe1000", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.9110912774974585`*^9}, {
  3.9110914487613397`*^9, 3.9110914913309245`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"07bc977f-d9a2-42eb-a431-e1cd3cff24a7"],

Cell[BoxData[
 RowBox[{"{", "0.029800985927123158`", "}"}]], "Output",
 CellChangeTimes->{3.9111114043218956`*^9, 3.9111118609454527`*^9, 
  3.9111121275406528`*^9, 3.9111140790482087`*^9, 3.911248300869836*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"dd6e5a42-7709-463e-a61d-904ad212a64f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"**", "**"}], "**"}], "**"}], "******)"}]], "Input",
 CellChangeTimes->{{3.911091409689348*^9, 3.9110914108167286`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"71789f4f-0aee-45e2-bfd1-d428a3c54ff3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Epsilon]", " ", "=", " ", "0.0000001"}]], "Input",
 CellChangeTimes->{{3.9110914319516983`*^9, 3.9110914320859303`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"21f76555-18c5-4c83-829a-495492f54e58"],

Cell[BoxData["1.`*^-7"], "Output",
 CellChangeTimes->{3.911111404353369*^9, 3.9111118609933815`*^9, 
  3.911112623150446*^9, 3.9111140791075172`*^9, 3.9112483009148912`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"4e02e9f2-a86d-49f6-86a3-7360f9359aab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardNe1000", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", 
          RowBox[{"genVar", " ", "+", " ", "\[Epsilon]"}]}]}], "}"}]}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", 
          RowBox[{"genVar", " ", "-", " ", "\[Epsilon]"}]}]}], "}"}]}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.911091294798537*^9}, {
  3.9110913463371763`*^9, 3.9110913740059795`*^9}, {3.9110916566691856`*^9, 
  3.9110916736993*^9}, {3.9111127225720587`*^9, 3.9111127233336616`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"243a6ceb-24aa-4e1f-bacd-b90b3e7273d4"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 172, 39, 28771884763955561247, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.911112829694981*^9, 3.911114079160822*^9, 
  3.911248300996269*^9},
 CellLabel->
  "During evaluation of \
In[172]:=",ExpressionUUID->"1b6df7be-a4b0-4d17-9dea-da2b17595ef9"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 172, 40, 28771884763955561247, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.911112829694981*^9, 3.911114079160822*^9, 
  3.911248301028797*^9},
 CellLabel->
  "During evaluation of \
In[172]:=",ExpressionUUID->"8bbeffea-0e3e-449b-9abe-c5e90a2d2d29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.0010001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.0009999\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.0010001\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.0009999\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}], "\n", 
 TemplateBox[{"", 
   FormBox["", TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.911091294798537*^9}, {
  3.9110913463371763`*^9, 3.9110913740059795`*^9}, {3.9110916566691856`*^9, 
  3.9110916736993*^9}, {3.9111127225720587`*^9, 3.9111127233336616`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"8edbadc3-7eea-4bbf-8cbb-56b630d89a80"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.396811, 0.31014, 0.204105]], 
         LineBox[CompressedData["
1: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
QvxVXWstQyKiFc+RR9Igwt9s/Uzd18tIc9NQ4HstIgw7NfsrSi4j6PcUCxNd
IlCyjlVX4QiIsv4J7joDIoyiI9GU9SVEgk3LN9aMCNm2gexP7BYRJp8A47Nu
RFBIIhT+SJtDyjfIO3UPicCTIayeaDSH2N67mXbZgwiiXzdd7zHPIc36cqvX
nhHhvcuWXoPbLPJcZMrPOZgIOXtjO/ofphHFN1riW6FE+KWS/7pKZBpZxJZ3
PAsjQp7Z+yi2lClEfSvs0MtXREjWw8Stxk0ijG0qHzKTiHDM/qaZ+7txpPx8
loF0ChEKJfD4YvFxxLaU82fJO1o86+fpjhSPIc1vCSgukwjBEqoVvq2jSJBT
3PDoRyLgTA3lNLAjyD7udXqORiLQxw51Wy8MImWhZrlxzUS4HWqSORE8iNj8
ab1yFE8EzM6pvA7JQaRxKfWNZBcR+r4NcDk9GkACq3VlLw0TIaTKd9xCoB85
LVs10D5KBJ1Ar7Kp9j5kPl3E02CCCCp0q+7Gnn2IWvhOo8UsER6KtOhHlPUi
9Ja5Nz1XibDhd6ws0KQbKRk4+O8fmQglW35Xapu7EGtN38xgKhG+ae6P2VXs
QurlTSixm0ToOuI5GibYifgzMDz/+I8IgvIxLEcx7QhdvmXx/MFVSPnxPOfG
5RaklTzinHZoFco6Tx/52tmMRMgbnjQ/sgryZ9ujL5g0I4erL30cElyF1/QX
pOedmpCTeMkPbZKrwCbRZBhf2YBsYjIcgk+sQh1hXzKzfgPy5epRabWTq7Dp
gZ9IXq5HNIb359corILd1zeKTUL1iPnS95wiZBUSV62lm7W+IiJSjvceXFyF
+Ki/HqWva5EVxyVxSfVVWC87+PL3XA3ycHMkK117FXykzv/XHPIFCWP4mhFn
vArNitI9Q7+qkM/Coe+eOqxCLWVHV8buE+J7l85S2WkVCi89XEucL0PU870E
N11W4VPWhSEWyzKkT94xxenxKpz4Oe6bZF2KrIDhW2t/Wj7CSRuyv4uQoqCO
W4JBq1DPGOOZz1WEPMJf4hsPXgVP+3OR80ofkb2rZxKvha8Ckxo57X7AB4TX
8mjC5YRV8E0i4ZLV85DJ9DgThqRVkFV1/m7pmYtkLO0/VJ+8CppiquZKjTmI
rBNd3Nn0VSit0qbe08xG1L2XYmQKV2G0oVXQIzwDwdRbGhKLVkGQciDFnJCO
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
vT0q8ArYG9kP7of/Aef6oMg=
          "]]}, Annotation[#, "Charting`Private`Tag$23734#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.726732, 0.538136, 0.31593]], 
         LineBox[CompressedData["
1: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
95klXj6A9KTLAiBiL5mcfQhLF5fY3d0XQHmT5mRadQg77HLmho4sQN2r5zvz
x0Mo4+V91ee1gDv3gk5mcVqjIWRYp9WPsb54JLHb2xoDlCDXgvAFnDjt42K7
ywZssmXJIXkL6JX874f0oC2c83fwiawu4Kfz4YPVug4odvjF08m0iOO6m+40
uDmAh62U+9raRXya1HtSesUB1U57OWgcizhqPB5aWuoASS69f4UCizhxZWD1
urojpj2sFkzlF/HwixIRKOEEH6FTzZetF8HTYPTnwC9nNNQrNarYLeKMvryS
60YXiPnS68YPL+LqS7vow+ou6Gz0qzZ0XcT64+rHjp90gfrZC683nFjEJSfz
N7xDLvjZEf74efAi7FUU+ttKXRESlnl1MHcRpae3ap585oZ159iN3V8sYoUl
Jq212A3JXt780/mL8BVp125664ZXJrse0QsX8TYxa/9qnxum+brq1lQtombR
53z6Gnf4rdWKjXi7COL2V+UZbnf8+5Zqw123COq5H97bN7tjy0ev6Y3Ni/jv
EtGBbe4wecDEId+ziLX14+OrVu74GOfZ+eLDIrhrntXudXSHx9W2e+ofF3Eu
dv7UTQ93XPG4J79naBF+mcmlboHueKmgamIxs4hTvImLUffcsVc4SeA9bRH+
j+TVTmW4o2XdyoD9/CLYszJUU564Y+Jz4ynKl0XYXnCP6X7tjk2vXW+eXV7E
mkeFC2Hv3fHoSb3tn7+LyFQ+Yvp8wB2qydvEgpnokAtLCUwZc4dR0M/8SFY6
frtdm9u26I5eH+fz6zjoSD/zqm9syR0Ut1oigYuOtTw3S4d+u+Py/riuFF46
gjXe6t1hoYBT8/t9cX465Ht2/brGSUHSVkfK4w105KbJdUrxUCC55a2CwmY6
dl8ua/jHT0E+p+xSniAd7hHrSCGbKdizHFO2XZiOHI1yKXkyBU3zX6+ViDLs
HSlCghgFNsP2pnsl6CAn9G2VkqJgvKNyQ40UHYSCV33kVgpOv5UeOrCVDjOF
F86O8hSsFEQ/bpWjIyM4MOywIgWRWZ+9LbfRsSWVk3xdhYKNSbY7PijRcTZn
Ry/UKHgYUb56WJWOGXanly7bKVC+INk4rE7H0WZD1yuaFJSdiIw7oknH6yTY
zu2gwNBp0Y6qRYd15N1zp3dS8N7MWtxbm47I5OT6wF0UuKOU+mUPHZZlRTq8
2hQsqor/Fwg6Pg6EHbdk8EXJ8AvLOnTovvPvc2Mw+4Z5nRA9Oo5UhNueYHAi
60EuVgM6HqfUGs4zzhP/+bo7yoiOxtD3E1sZ/IIqksJjyshfB/djeYb9yLQw
t2FzOjgV9qTxMPzzOLggk2dFxx6/e4u2GhQQ7DZzQdZ0HDaYKMtnxCtcXv7S
zI6Oz+dEY94pU/DrjHSgiAMd3bqViuHbKOiRidm94MTIn1eaxxtZCvL6l5gq
XOkIaxY/GcvIf3ScY0MMhQ5KoZoDH6M+nnq1N5yO0jFo6B+6SYgC3d8KVope
dPxbGjp2cQMFonkJm1ZO0PEzrSXPnqGH35Q/A63edAisXBYrY2fkbzMlM+UM
HeWz6wTWM1Pwsq3Z86Q/HWwjnxdJDL157bj/hesCHRtlwj+fpLpDb47pdf8l
Or4i7DAx4g6xDK/LuVfoGJCq3u38gaFfzp3sxtfpCN3d1xdV7Y6CyvQ2wQg6
jKgaDkeL3HHTnz2BFkVHq9Wjc2lP3aE/1CscFUeH19MvXf7x7hBP2Ddun0DH
zi/1+dqh7lg5kJ0jd4eOCr+pp+cD3FH48qx6UzId9JlUwcs27pC8vsGQPZsO
e92cP+v53LG68/K6vieMfIuZlZP/ueHTwkR39jOG/pe1J+7OuiHe7pXzgf/o
MNghHfOFMX9OcZOlNhXSkT9V/ETjuRsM34ZSp4oZ9T0ym5F0xw3/FA76h5XT
oX9M9NImTzf0j7zZaVNFh90x0coL5m4oTpRYla6ho+1AX260hht8Vj9H1jXS
Mequtff9qisGu+IerO2hA3KzVQ8FXFES/vNIzwc6rLZ3LF7qdUHiblf5Rx8Z
zzsZrnG/4wKTx8qFusOM/tja+S6DxwWl59ubr9IY/Rjt+/7YvBOSlDTjrObp
IPGyLGSlOcF3PNVags6o56G5wFgzJ8iZnhqp/kbH5jDv/bdyHcHC/D4r/idD
37R/8WIHHTFatPuE2x86aNTdtil/HFB+4pGK6l9GfxxaLqrNdMBdMdL3f/8Y
8RINLlf1HfA/cmTPbQ==
          "]]}, Annotation[#, "Charting`Private`Tag$23734#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.831964, 0.810543, 0.372854]], 
         LineBox[CompressedData["
1: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
HuJ/wuefMw==
          "]]}, Annotation[#, "Charting`Private`Tag$23734#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0.35082, 0.595178, 0.853742]], 
         LineBox[CompressedData["
1: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
yaTV68jx2fPyP3A395+pu/aKCr514kmX1L7j9PqLHhzPodXLYp+Z0ygJJx0u
aMCaR8s/O6nCPZuA29EK5B59QwVrgs9X4/pl3DfywlDeWyroKnv/2zy4iKvM
Nk4NKKZCeu9mOX3fHC7OpsJer4wKFS5Zrj0uMzg3LtGDQpVU6GeZWNfLmcAZ
ND3AL1VToesS1wWTM2O4QwGr76o+0Px8rEkr5PRX3K6CpW/EJyoUB5L/008a
wo3PfNCybqCCjbKezge1AVx1otTOoWbaPL0wsJeT78UlGD5qWW+lQo110xP7
6504j53vD1s7qHBVUlFoUagNJ3O9UcC5jwobnG53bys24CYHn75gHKbNJ7+t
m0p5Na4m8s+V4a9UYGolTB1DK3CJJx3kc8ao4Ob1ZUMFKcUZv1au1Jmmwhfe
COYXrXk42YvJd/jnaP53/7tNt5SNY+DdQecXaPePm3UQKvsSV3u7ryuUQPMz
b1hBXVEiLlnp2FMLEhW4eOQaODPjcN7zGVZSVFp/2A5YVlyPxh02cZtpXKdC
23CkwhZTCI6J/ktu3B8qnGWertO3uI2brTrp6rhJhaKXwnR4Dh/cJ9ccFdV/
VNDnIAuZ07niUiQ4f+3uUoFDUeHLS3on3P8AIt2cLg==
          "]]}, Annotation[#, "Charting`Private`Tag$23734#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.000056888248128710166`}], 
               
               Offset[{2.1609928215783913`, 2.080891641841704}, {1.12, 
                0.000056888248128710166`}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.34250747613777693`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.34250747613777693`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.34250747613777693`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.34250747613777693`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.000056888248128710166`}], 
               
               Offset[{2.1609928215783913`, 2.080891641841704}, {1.12, 
                0.000056888248128710166`}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.34250747613777693`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.34250747613777693`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.34250747613777693`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.34250747613777693`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{84., 6.500000000000019}, {1.1800000000000002`, 
                0.34250747613777693`}], 
               
               Offset[{84., -6.499999999999981}, {1.1800000000000002`, 
                0.34250747613777693`}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.34250747613777693`}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.34250747613777693`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.001\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{47., 1.0436096431476471`*^-14}, {1.1800000000000002`, 
              0.34250747613777693`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.001603485429857458}], 
               
               Offset[{1.4640576357422541`, 2.6184986612990278`}, {1.12, 
                0.001603485429857458}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.6376603686087426}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.6376603686087426}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6376603686087426}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6376603686087426}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.001603485429857458}], 
               
               Offset[{1.4640576357422541`, 2.6184986612990278`}, {1.12, 
                0.001603485429857458}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.6376603686087426}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.6376603686087426}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6376603686087426}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.6376603686087426}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{101., 6.500000000000022}, {1.1800000000000002`, 
                0.6376603686087426}], 
               
               Offset[{101., -6.499999999999978}, {1.1800000000000002`, 
                0.6376603686087426}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.6376603686087426}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.6376603686087426}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.0010001\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{55.5, 1.2323475573339238`*^-14}, {1.1800000000000002`, 
              0.6376603686087426}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.03772009551863506}], 
               
               Offset[{1.1077103813706128`, 2.7880060457258287`}, {1.12, 
                0.03772009551863506}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.9328153606756445}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.9328153606756445}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9328153606756445}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9328153606756445}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 0.03772009551863506}], 
               
               Offset[{1.1077103813706128`, 2.7880060457258287`}, {1.12, 
                0.03772009551863506}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.9328153606756445}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.9328153606756445}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9328153606756445}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.9328153606756445}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{101., 6.500000000000022}, {1.1800000000000002`, 
                0.9328153606756445}], 
               Offset[{101., -6.499999999999978}, {1.1800000000000002`, 
                0.9328153606756445}], 
               
               Offset[{10., -6.499999999999997}, {1.1800000000000002`, 
                0.9328153606756445}], 
               
               Offset[{10., 6.500000000000003}, {1.1800000000000002`, 
                0.9328153606756445}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.0009999\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{55.5, 1.2323475573339238`*^-14}, {1.1800000000000002`, 
              0.9328153606756445}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 7.809007365859153*^-18}], 
               
               Offset[{2.97375220891249, 0.39597701952018044`}, {1.12, 
                7.809007365859153*^-18}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.0473551241275167}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.0473551241275167}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.0473551241275167}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.0473551241275167}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 7.809007365859153*^-18}], 
               
               Offset[{2.97375220891249, 0.39597701952018044`}, {1.12, 
                7.809007365859153*^-18}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.0473551241275167}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.0473551241275167}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.0473551241275167}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.0473551241275167}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.0473551241275167}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.0473551241275167}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.0473551241275167}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.0473551241275167}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.0473551241275167}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 145.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.00022221548563131015`, 3.662996791477432}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"New:VG=0.001\"", "\"Old:VG=0.0010001\"", "\"Old:VG=0.0009999\"", 
       "\"NDSolve\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.396811, 0.31014, 0.204105]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.726732, 0.538136, 0.31593]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.831964, 0.810543, 0.372854]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0.35082, 0.595178, 0.853742]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.35082, 0.595178, 0.853742]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9111114156044397`*^9, 3.9111118845852823`*^9, 
  3.911112644365381*^9, 3.9111127279457154`*^9, 3.911112789416729*^9, 
  3.9111128576183615`*^9, 3.911114102148426*^9, 3.9112483247051277`*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"664bf787-258b-4502-ae49-ffcc06253446"],

Cell[BoxData[
 TemplateBox[{"Null", "Null"},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9111114156044397`*^9, 3.9111118845852823`*^9, 
  3.911112644365381*^9, 3.9111127279457154`*^9, 3.911112789416729*^9, 
  3.9111128576183615`*^9, 3.911114102148426*^9, 3.91124832476748*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"f153dbc5-e968-43d7-9c83-ee8660f3844f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe1000", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], " ", ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", 
           RowBox[{"genVar", " ", "+", " ", "\[Epsilon]"}]}]}], "}"}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.9110912774974585`*^9}, {
  3.9110914487613397`*^9, 3.911091492934575*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"9a4649f5-3be1-44c7-8027-08bc1726e509"],

Cell[BoxData["0.00011546109696082313`"], "Output",
 CellChangeTimes->{3.911111427815087*^9, 3.9111119018851557`*^9, 
  3.9111126602609687`*^9, 3.9111129363541436`*^9, 3.9111141202942796`*^9, 
  3.9112483420788593`*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"f8c2324d-eeb9-4a7b-bcd1-aa6b7c2588b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe1000", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], " ", ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", 
           RowBox[{"genVar", " ", "-", " ", "\[Epsilon]"}]}]}], "}"}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.9110912774974585`*^9}, {
  3.9110914487613397`*^9, 3.911091492934575*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"9566d61b-59b3-4564-9159-3cf4aceacbad"],

Cell[BoxData["0.0005746962291136566`"], "Output",
 CellChangeTimes->{3.9111114399478226`*^9, 3.9111119192274675`*^9, 
  3.9111129538397074`*^9, 3.911114137756958*^9, 3.9112483593730736`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"6386b71c-d229-4932-8d96-ac9182d1a759"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardNe1000", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.9110912774974585`*^9}, {
  3.9110914487613397`*^9, 3.9110914913309245`*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"1f30b5eb-82ae-4d38-b56e-744088638e02"],

Cell[BoxData[
 RowBox[{"{", "0.029800985927123158`", "}"}]], "Output",
 CellChangeTimes->{3.9111114461610117`*^9, 3.91111193728446*^9, 
  3.9111126785641766`*^9, 3.911112973410494*^9, 3.911114155815939*^9, 
  3.9112483779528646`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"cbe6038f-5a67-49f2-bb8c-383747c6f24f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                 "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
          "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "******)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**"}], "******)"}]}]], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.911091292198033*^9}, {
  3.9110916044204383`*^9, 3.911091612334941*^9}, {3.911110190078397*^9, 
  3.9111101902629185`*^9}, {3.9111125623916492`*^9, 3.911112562769867*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"c2e7f059-f4e3-46bd-99ea-d1cc2c2e872e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<path-integrals-testing-epsilon.m\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"kmax", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kimura", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_", ",", "n_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "m", "}"}], ",", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"4", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "m"}], "+", "1"}], ")"}], "*", "x", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"m", "+", "1"}], ")"}]}], ")"}]}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "x"}]}]}], "]"}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "y"}]}]}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], "*", "m", "*", 
         RowBox[{"(", 
          RowBox[{"m", "+", "1"}], ")"}], "*", "t"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"haywardVG00099", " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Kimura", "[", 
       RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
         RowBox[{
          RowBox[{"pints", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"haywardVG00101", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Kimura", "[", 
       RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", 
            SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"\[CapitalLambda]", " ", "/", " ", 
             SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
         RowBox[{
          RowBox[{"pints", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "pints", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.911091246803501*^9, 3.911091292198033*^9}, {
  3.9110916044204383`*^9, 3.911091612334941*^9}, {3.911110190078397*^9, 
  3.9111101902629185`*^9}, {3.9111125623916492`*^9, 3.911112562769867*^9}, {
  3.9111129294169846`*^9, 3.911112932585181*^9}, {3.91125234067916*^9, 
  3.9112524023099265`*^9}, {3.911253142070022*^9, 3.9112531421392965`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"7b6a9df4-22fc-4392-a971-a04d2688c34b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<new1through5Sequential_50Kimura.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SimplifiedHayward50", " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", 
           SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", "*", " ", 
       RowBox[{"new", "[", "j", "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "0", ",", " ", "kmax"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.910441098479672*^9, 3.9104411460445724`*^9}, {
   3.9104655620267887`*^9, 3.9104655727661486`*^9}, {3.910801146850128*^9, 
   3.9108011553372817`*^9}, 3.910806315821726*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"9c82e463-b000-4b41-9bd7-77c595c82885"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "0.00099", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"selCoef", ",", " ", "genVar"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genVar", " ", "=", " ", "0.00099"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9103976448668547`*^9, 3.9103976932189517`*^9}, {
   3.9104022113188157`*^9, 3.910384000757211*^9}, {3.910384066276121*^9, 
   3.910384094852061*^9}, {3.9103841499873133`*^9, 3.91038415076552*^9}, 
   3.910384223707341*^9, {3.9103842578040724`*^9, 3.9103842578441367`*^9}, {
   3.9103843777405386`*^9, 3.9103843984445653`*^9}, {3.910384725668249*^9, 
   3.9103847257083445`*^9}, {3.910384770668659*^9, 3.9103847835625954`*^9}, {
   3.9108038646922736`*^9, 3.910803875194992*^9}, {3.9112524729383774`*^9, 
   3.9112525032834034`*^9}, {3.9112525616423626`*^9, 3.9112525664387007`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"0aa41994-d335-45c7-b254-09b340b12cd0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardVG00099", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}, {3.9108022853779926`*^9, 
   3.910802304053191*^9}, {3.9108026205523844`*^9, 3.910802636680106*^9}, {
   3.910802851401987*^9, 3.9108028969227853`*^9}, {3.9108032508819113`*^9, 
   3.910803314120039*^9}, {3.9108033573104753`*^9, 3.9108033676004925`*^9}, {
   3.9108035300513897`*^9, 3.9108035576488266`*^9}, {3.910803768769035*^9, 
   3.9108037957329817`*^9}, {3.9108038963362427`*^9, 3.91080392451641*^9}, {
   3.91125251747499*^9, 3.911252526566203*^9}, {3.9112525872780848`*^9, 
   3.9112526034028454`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"63bd34db-ba35-496b-aebf-217282d4f219"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 21, 1, 28771829905105559862, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108117354863625`*^9, 3.911117955785926*^9, 
  3.911145595452705*^9, 3.9112429495229406`*^9, 3.911253545759757*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"c5a1e522-05a3-44e1-83f7-a15e775214e5"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 21, 2, 28771829905105559862, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108117354863625`*^9, 3.911117955785926*^9, 
  3.911145595452705*^9, 3.9112429495229406`*^9, 3.911253545926027*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"8d7e66fb-98b1-4227-9aae-34958fe49f69"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
T/qfeVemhl6cPrH17x8JVmhY6oPV1ND/APpjoIg=
          "]]}, Annotation[#, "Charting`Private`Tag$5345#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$5345#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$5345#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 6.80803233346944*^-9}], 
               
               Offset[{1.4379470355777744`, 2.6329277093898895`}, {1.12, 
                6.80803233346944*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.8295830045505864}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.8295830045505864}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8295830045505864}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8295830045505864}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 6.80803233346944*^-9}], 
               
               Offset[{1.4379470355777744`, 2.6329277093898895`}, {1.12, 
                6.80803233346944*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.8295830045505864}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.8295830045505864}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8295830045505864}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8295830045505864}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{95., 6.500000000000021}, {1.1800000000000002`, 
                0.8295830045505864}], 
               
               Offset[{95., -6.499999999999979}, {1.1800000000000002`, 
                0.8295830045505864}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.8295830045505864}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.8295830045505864}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.00099\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{52.5, 1.1657341758564144`*^-14}, {1.1800000000000002`, 
              0.8295830045505864}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.5330005955521437`*^-9}], 
               
               Offset[{2.110390651079938, 2.132194010833535}, {1.12, 
                1.5330005955521437`*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.45774927338343296`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.45774927338343296`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.45774927338343296`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.45774927338343296`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.5330005955521437`*^-9}], 
               
               Offset[{2.110390651079938, 2.132194010833535}, {1.12, 
                1.5330005955521437`*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.45774927338343296`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.45774927338343296`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.45774927338343296`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.45774927338343296`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.45774927338343296`}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.45774927338343296`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.45774927338343296`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.45774927338343296`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00099\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.45774927338343296`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 4.702947051802869*^-21}], 
               
               Offset[{2.947470599128197, 0.5589428121685323}, {1.12, 
                4.702947051802869*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.0859175118016378}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.0859175118016378}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.0859175118016378}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.0859175118016378}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 4.702947051802869*^-21}], 
               
               Offset[{2.947470599128197, 0.5589428121685323}, {1.12, 
                4.702947051802869*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.0859175118016378}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.0859175118016378}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.0859175118016378}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.0859175118016378}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.0859175118016378}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.0859175118016378}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.0859175118016378}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.0859175118016378}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.0859175118016378}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 139.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0., 4.666861438902922}},
      PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}},
      Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"New:VG=0.00099\"", "\"Old:VG=0.00099\"", "\"NDSolve\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910811757318201*^9, 3.9111179780204678`*^9, 
  3.9111456173029003`*^9, 3.911242969261039*^9, 3.911253565321828*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"74bf8364-9fcf-44e0-8980-de761bf6a1ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVG00099", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108026445451193`*^9, 
   3.9108026520866733`*^9}, {3.910802920253564*^9, 3.9108029356201243`*^9}, {
   3.9108032881039443`*^9, 3.910803290290577*^9}, {3.910803324770018*^9, 
   3.910803326972967*^9}, {3.910803533876922*^9, 3.910803533925921*^9}, {
   3.9108037757374287`*^9, 3.910803775799735*^9}, {3.9108038990851316`*^9, 
   3.910803899166355*^9}, {3.9108050501698422`*^9, 3.9108050508816886`*^9}, {
   3.9112525403612328`*^9, 3.9112525418305264`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"c1d3b56f-9fcc-4277-89d8-bf8cc021b381"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 24, 3, 28771829905105559862, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108117753316264`*^9, 3.9111179964444265`*^9, 
  3.9111456355170155`*^9, 3.9112429862688274`*^9, 3.911253631543547*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"f0e85eab-e198-49f2-b382-9b6f7917387d"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9238125833594676`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.2892810321542461`*^-10\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.4759337641428098`*^-14\\\"}]\\) for the integral and \
error estimates.\"", 2, 24, 4, 28771829905105559862, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108117753316264`*^9, 3.9111179964444265`*^9, 
  3.9111456355170155`*^9, 3.9112429862688274`*^9, 3.911253632705461*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"bf8d1fd4-3f2e-4772-babe-f46d06b02764"],

Cell[BoxData["1.1446405160771231`*^-10"], "Output",
 CellChangeTimes->{3.9108117766608152`*^9, 3.9111179980035114`*^9, 
  3.911145637037241*^9, 3.9112429875225277`*^9, 3.911253632721294*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"fe486bf2-752b-48bd-8f6f-751790144a21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVG00099", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, 
   3.9108026624465485`*^9, {3.91080292688105*^9, 3.910802940903279*^9}, 
   3.9108032981903443`*^9, {3.9108033397481766`*^9, 3.910803341230857*^9}, {
   3.9108035389388466`*^9, 3.9108035389870763`*^9}, {3.9108037779556804`*^9, 
   3.9108037780486813`*^9}, {3.910803902111907*^9, 3.9108039051368046`*^9}, {
   3.910805053358075*^9, 3.9108050557737045`*^9}, 3.9112525537631598`*^9, {
   3.9112526103065414`*^9, 3.9112526107766447`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"30ce6949-efb5-49d9-9eeb-4a6b6fc00abc"],

Cell[BoxData[
 RowBox[{"{", "0.000049863211216945044`", "}"}]], "Output",
 CellChangeTimes->{3.91125364975665*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"90f3d7a1-62db-41b3-9e2e-b786fe85d651"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "0.00101", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"selCoef", ",", " ", "genVar"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genVar", " ", "=", " ", "0.00101"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9103976448668547`*^9, 3.9103976932189517`*^9}, {
   3.9104022113188157`*^9, 3.910384000757211*^9}, {3.910384066276121*^9, 
   3.910384094852061*^9}, {3.9103841499873133`*^9, 3.91038415076552*^9}, 
   3.910384223707341*^9, {3.9103842578040724`*^9, 3.9103842578441367`*^9}, {
   3.9103843777405386`*^9, 3.9103843984445653`*^9}, {3.910384725668249*^9, 
   3.9103847257083445`*^9}, {3.910384770668659*^9, 3.9103847835625954`*^9}, {
   3.9108038646922736`*^9, 3.910803875194992*^9}, {3.9112524729383774`*^9, 
   3.9112525032834034`*^9}, {3.9112525616423626`*^9, 
   3.9112525664387007`*^9}, {3.911252642991214*^9, 3.911252648558988*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"52094ed3-230e-4d1b-aabb-d7eb0798ec4d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"haywardVG00101", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"SimplifiedHayward50", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", "start"}], ",", 
         RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
         RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
         " ", 
         RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
         RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
         RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
         RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<New:VG=0.00101\>\"", ",", "\[IndentingNewLine]", 
       "\"\<Old:VG=0.00099\>\"", ",", "\[IndentingNewLine]", 
       "\"\<NDSolve\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9104656915106726`*^9, {3.910468313142999*^9, 3.9104683186609592`*^9}, {
   3.910468360509692*^9, 3.91046836868458*^9}, {3.9104765926532507`*^9, 
   3.9104766316622887`*^9}, {3.9104766987431393`*^9, 3.910476860332534*^9}, {
   3.910476895093213*^9, 3.910476914636882*^9}, 3.910477346981352*^9, {
   3.91047900034589*^9, 3.910479001318201*^9}, {3.9104795332796593`*^9, 
   3.9104795337523527`*^9}, {3.9104866436124835`*^9, 
   3.9104866616678452`*^9}, {3.9104867142998996`*^9, 3.910486720153243*^9}, {
   3.9104868826069746`*^9, 3.910486897271054*^9}, {3.9104869359581766`*^9, 
   3.910486946474605*^9}, {3.910487009825046*^9, 3.910487020455436*^9}, {
   3.9104870758273153`*^9, 3.9104870760094633`*^9}, {3.910487109345481*^9, 
   3.910487111461463*^9}, {3.9108013521188173`*^9, 3.9108014597714176`*^9}, {
   3.9108016169513555`*^9, 3.9108016905934367`*^9}, {3.9108018342460523`*^9, 
   3.910801860796139*^9}, {3.9108019379919777`*^9, 3.910801973777832*^9}, {
   3.9108021920220537`*^9, 3.910802192075038*^9}, {3.9108022853779926`*^9, 
   3.910802304053191*^9}, {3.9108026205523844`*^9, 3.910802636680106*^9}, {
   3.910802851401987*^9, 3.9108028969227853`*^9}, {3.9108032508819113`*^9, 
   3.910803314120039*^9}, {3.9108033573104753`*^9, 3.9108033676004925`*^9}, {
   3.9108035300513897`*^9, 3.9108035576488266`*^9}, {3.910803768769035*^9, 
   3.9108037957329817`*^9}, {3.9108038963362427`*^9, 3.91080392451641*^9}, {
   3.91125251747499*^9, 3.911252526566203*^9}, {3.9112526346664543`*^9, 
   3.9112526562019916`*^9}, {3.911253705630061*^9, 3.911253712434062*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"571a3e84-12ef-428b-bc51-9ddc1af491e1"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 34, 13, 28771829905105559862, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108117354863625`*^9, 3.911117955785926*^9, 
  3.911145595452705*^9, 3.9112429495229406`*^9, 3.911253677508593*^9, 
  3.9112537283539643`*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"698548b5-a278-4d96-8be5-82efd8ebf6ef"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 34, 14, 28771829905105559862, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108117354863625`*^9, 3.911117955785926*^9, 
  3.911145595452705*^9, 3.9112429495229406`*^9, 3.911253677508593*^9, 
  3.911253728391689*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"9231c0d1-d492-4b7c-9c98-8193485fe91c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ocDG+P3kJOE7dfnF3i1j4v8BQsS2hQ==
          "]]}, Annotation[#, "Charting`Private`Tag$8080#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$8080#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVV3c8Vf8bFw1RxiUhFbJJKkKc89yMbCElW0ZfmWVXZkZS2SFk76xkZc9U
KHvved3rXgnZ/O7vr/t6v845z/O8x2dcLnNHHStKCgqKD1QUFP//VbXCdTcs
3UNzXIJ+z/cS4Kg8+5NJNnGwUiusnFdYhuvJcYlf2BRgUhv5I1G+DGqdgyUf
2XShpf4bpukDEfQsN2sj2Szh2MZ8jqXlCoxfeSX/js0FXGXkd/T8VyHlzJ2g
ELYAEGh95SMsswF+1F/4X7NFw4rW3MPs8T14oJ9a9Gc1A2IvCtSeDT2OXRnV
pUljz4R0/ufn2vOOY4NMqK3uymfCCbzEuF3bcewXC0f28uhM6NFs+vyc4gSW
zgEJfCGZBY6eRc1fn57Atr4cNjjulQ11x0vnY7WosdfyGY9zUOeBc5ZD5POD
k9gfoq1mnWJ5sOr37HocKw3W7LNHtbd+HiTLJfIkXaPBviuffDKdlwcsUYca
5o9osLiGgtEsjU9QeVLvWlsHDTapX+Xz1ah8EJRoEZiKpsXSHvoZKV0ogpH/
IggqjKexcY/1TERuF4HA6bNoKf9pLE+fiBmjQxFoZOU8pkJPY9HcQYvR2iLI
MjscvmNzGvs1N6asQrQYXrjznUlqPI0l3l2uUftVDLJRTE1bNnTYezmx7c6n
S+D95mPew2x6bKLxS/VHXCXwLjFjoLeKHjuDse98IFEC419L3EI66bGOXnK/
EeMSwGfIyX78S499rUPsOVFQAhsa9D6fzjNga/fkRhLUv8BIUk9lkAUDlleb
hGt+UwojLQVZUbMMWHYfpZv/pZaCVROiVUxgwDIUpLyhqSgF22Hqe1VrDNgd
6rui2jOl4FHnaBRDxYjtaqhwnpAqg3eSlTP23IzY52J+B1vzZRCD4XOPNWLE
OpqM3EncLQM6xRD8KwtGrOXb66nAWA6aed2+VjaM2Du4efkg2XJocvxBh3Nn
xPKkqL5miioHr8TrwTSRjNhf9MzMotgKONAyVG9pYsQ2I/ZW3fcqwOJ5vHvQ
d0Zspe23chfbCnh/qF4n8YsRm97moV8dUwHTV16lGQ4zYj18xpOUiRWQYe6x
0kJixNoX3PhDoKyEY/KyF/6sMWLNR8NuhbFWQpo8yZV6mxGrISk31y9fCXgC
ex4FFQbLvZIlaBFfCeoknAs9CwZ79jzFi+PFlXBkC5XOYMdgT6npd+S2VgLU
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
          "]]}, Annotation[#, "Charting`Private`Tag$8080#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 3.8374518120639317`*^-10}], 
               
               Offset[{2.11036256437541, 2.1322218099632235`}, {1.12, 
                3.8374518120639317`*^-10}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.45783297599393874`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.45783297599393874`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.45783297599393874`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.45783297599393874`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 3.8374518120639317`*^-10}], 
               
               Offset[{2.11036256437541, 2.1322218099632235`}, {1.12, 
                3.8374518120639317`*^-10}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.45783297599393874`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.45783297599393874`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.45783297599393874`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.45783297599393874`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{95., 6.500000000000021}, {1.1800000000000002`, 
                0.45783297599393874`}], 
               
               Offset[{95., -6.499999999999979}, {1.1800000000000002`, 
                0.45783297599393874`}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.45783297599393874`}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.45783297599393874`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"New:VG=0.00101\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{52.5, 1.1657341758564144`*^-14}, {1.1800000000000002`, 
              0.45783297599393874`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.215009814421388*^-9}], 
               
               Offset[{1.4379341232728964`, 2.632934761274462}, {1.12, 
                1.215009814421388*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.8297225085276666}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.8297225085276666}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8297225085276666}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8297225085276666}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.215009814421388*^-9}], 
               
               Offset[{1.4379341232728964`, 2.632934761274462}, {1.12, 
                1.215009814421388*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.8297225085276666}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.8297225085276666}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8297225085276666}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.8297225085276666}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{90., 6.5000000000000195`}, {1.1800000000000002`, 
                0.8297225085276666}], 
               
               Offset[{90., -6.4999999999999805`}, {1.1800000000000002`, 
                0.8297225085276666}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.8297225085276666}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.8297225085276666}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"Old:VG=0.00101\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{50., 1.1102230246251565`*^-14}, {1.1800000000000002`, 
              0.8297225085276666}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 4.686735439631583*^-21}], 
               Offset[{2.947453388207661, 0.5590335628056505}, {1.12, 
                4.686735439631583*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.08594541231939641}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.08594541231939641}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.08594541231939641}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.08594541231939641}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 4.686735439631583*^-21}], 
               
               Offset[{2.947453388207661, 0.5590335628056505}, {1.12, 
                4.686735439631583*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 0.08594541231939641}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                0.08594541231939641}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.08594541231939641}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                0.08594541231939641}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                0.08594541231939641}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                0.08594541231939641}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                0.08594541231939641}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                0.08594541231939641}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              0.08594541231939641}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 139.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0., 4.667591841714889}},
      PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}},
      Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"New:VG=0.00101\"", "\"Old:VG=0.00099\"", "\"NDSolve\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910811757318201*^9, 3.9111179780204678`*^9, 
  3.9111456173029003`*^9, 3.911242969261039*^9, 3.91125369397014*^9, 
  3.911253748541381*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"190d8aae-9de4-4cdf-b178-eef750937f90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVG00101", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SimplifiedHayward50", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108020925534344`*^9}, {
   3.9108022099364777`*^9, 3.9108022100042534`*^9}, {3.9108022508119273`*^9, 
   3.9108022536789093`*^9}, {3.9108026445451193`*^9, 
   3.9108026520866733`*^9}, {3.910802920253564*^9, 3.9108029356201243`*^9}, {
   3.9108032881039443`*^9, 3.910803290290577*^9}, {3.910803324770018*^9, 
   3.910803326972967*^9}, {3.910803533876922*^9, 3.910803533925921*^9}, {
   3.9108037757374287`*^9, 3.910803775799735*^9}, {3.9108038990851316`*^9, 
   3.910803899166355*^9}, {3.9108050501698422`*^9, 3.9108050508816886`*^9}, {
   3.9112525403612328`*^9, 3.9112525418305264`*^9}, {3.9112526640693073`*^9, 
   3.9112526643059373`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"687780b9-5780-484b-bf0d-9015dbff58b2"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 32, 7, 28771829905105559862, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108117753316264`*^9, 3.9111179964444265`*^9, 
  3.9111456355170155`*^9, 3.9112429862688274`*^9, 3.91125371229279*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"f9615567-a54d-42c0-987a-748eb09f85c1"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"0.9813160608149541115630132281921760295517742633819580078125`65.\
954589770191\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.7168858220972161`*^-10\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.0077898733015999`*^-14\\\"}]\\) for the integral and \
error estimates.\"", 2, 32, 8, 28771829905105559862, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9108117753316264`*^9, 3.9111179964444265`*^9, 
  3.9111456355170155`*^9, 3.9112429862688274`*^9, 3.9112537123955345`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"a809c2c8-fcd0-4486-aac3-a84a945e46d1"],

Cell[BoxData["8.584429110486081`*^-11"], "Output",
 CellChangeTimes->{3.9108117766608152`*^9, 3.9111179980035114`*^9, 
  3.911145637037241*^9, 3.9112429875225277`*^9, 3.9112537124037*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"342baa83-6026-4b93-984e-68dccf01dbb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"haywardVG00101", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Rule]", "start"}], ",", 
          RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
          RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
          RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
          " ", 
          RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
          RowBox[{"VG", "->", "genVar"}], ",", "  ", 
          RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.910802046524207*^9, 3.9108021415662503`*^9}, {
   3.9108022154977255`*^9, 3.9108022155629034`*^9}, 3.9108022611374655`*^9, 
   3.9108026624465485`*^9, {3.91080292688105*^9, 3.910802940903279*^9}, 
   3.9108032981903443`*^9, {3.9108033397481766`*^9, 3.910803341230857*^9}, {
   3.9108035389388466`*^9, 3.9108035389870763`*^9}, {3.9108037779556804`*^9, 
   3.9108037780486813`*^9}, {3.910803902111907*^9, 3.9108039051368046`*^9}, {
   3.910805053358075*^9, 3.9108050557737045`*^9}, 3.9112525537631598`*^9, {
   3.9112526684480333`*^9, 3.9112526686329*^9}, {3.9112538206005125`*^9, 
   3.9112538207857018`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"2d988311-72a8-4bd3-bb6e-66bc371387c8"],

Cell[BoxData[
 RowBox[{"{", "0.00004818391423529434`", "}"}]], "Output",
 CellChangeTimes->{3.91125372815409*^9, 3.911253839040928*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"4a72dbca-928b-4899-b017-7b6198e7708e"]
}, Open  ]]
},
WindowSize->{960, 478},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
Magnification:>0.9 Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"47fcd931-3f8a-476b-a217-b2790d73f447"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 226, 4, 25, "Input",ExpressionUUID->"a99218c7-fa7a-43a0-8b3c-3b5e8f9c0358"],
Cell[787, 26, 6639, 189, 193, "Input",ExpressionUUID->"3413e537-263a-4028-9b58-b06451794b9c"],
Cell[7429, 217, 1417, 36, 46, "Input",ExpressionUUID->"bb40df93-4bf5-4677-bc11-90ccbb60a5b5"],
Cell[8849, 255, 207, 3, 25, "Input",ExpressionUUID->"85b961f4-da12-48e7-8a79-5d575914e8f0"],
Cell[9059, 260, 1531, 40, 77, "Input",ExpressionUUID->"243893cb-6c17-498d-baec-9f9370a9287b"],
Cell[10593, 302, 820, 18, 112, "Input",ExpressionUUID->"c0cefd7c-3c95-4f41-96b6-8c241b67f79b"],
Cell[11416, 322, 501, 10, 43, "Input",ExpressionUUID->"2a114194-2f16-4430-a98f-6b4cd0bcd21c"],
Cell[11920, 334, 234, 4, 26, "Input",ExpressionUUID->"727f8a25-25f0-437b-baf3-763489a71901"],
Cell[CellGroupData[{
Cell[12179, 342, 6995, 164, 387, "Input",ExpressionUUID->"e0e4f817-9411-4da4-bac3-ff7a7f8f0a21"],
Cell[19177, 508, 572, 11, 26, "Message",ExpressionUUID->"5613aba6-38b3-498b-a954-f0f433060521"],
Cell[19752, 521, 604, 12, 26, "Message",ExpressionUUID->"ce968ba5-5a7d-4276-8bcb-9db6e2ee0420"],
Cell[20359, 535, 117980, 2113, 194, "Output",ExpressionUUID->"fbbce0ac-d5c2-4d23-8a5e-53486d34b1e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138376, 2653, 1636, 36, 94, "Input",ExpressionUUID->"15b6765f-addd-4244-9e7f-14c0cc529c29"],
Cell[140015, 2691, 290, 4, 30, "Output",ExpressionUUID->"15f5a7ef-4f50-46f8-924d-083166aec05b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140342, 2700, 1636, 36, 94, "Input",ExpressionUUID->"9f99dcf8-e90e-4ded-aa3f-409b6ebfa74d"],
Cell[141981, 2738, 266, 3, 30, "Output",ExpressionUUID->"c5365aa0-1977-466d-8b61-f9eb701281e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142284, 2746, 1317, 31, 77, "Input",ExpressionUUID->"7593efa4-f98c-4987-b42b-33618232bc3a"],
Cell[143604, 2779, 284, 4, 28, "Output",ExpressionUUID->"1ef260b1-37bf-492a-9a11-d431acfaba26"]
}, Open  ]],
Cell[143903, 2786, 225, 4, 26, "Input",ExpressionUUID->"fbd3fba0-9253-47db-9085-19b991988d73"],
Cell[CellGroupData[{
Cell[144153, 2794, 7098, 165, 387, "Input",ExpressionUUID->"444350de-20b8-41ab-a879-df6cfd07e8b1"],
Cell[151254, 2961, 544, 11, 26, "Message",ExpressionUUID->"29a0742f-7849-4c27-9f2e-d20ae1ead61c"],
Cell[151801, 2974, 580, 12, 26, "Message",ExpressionUUID->"2d1d4ac0-dfdc-467e-9d5d-c8cb2ce18152"],
Cell[152384, 2988, 106425, 1922, 195, "Output",ExpressionUUID->"3eff31c3-24d2-40bd-9237-5021dc49e542"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258846, 4915, 1746, 37, 94, "Input",ExpressionUUID->"dc6f0bf3-2dc5-43be-a84e-4c9a8bfd9367"],
Cell[260595, 4954, 834, 16, 43, "Message",ExpressionUUID->"e66eef81-2b90-4aa1-857f-04878ecf6a3b"],
Cell[261432, 4972, 246, 3, 28, "Output",ExpressionUUID->"68bf67d1-2fde-4f2e-8b4b-dc73412a73f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261715, 4980, 1744, 37, 94, "Input",ExpressionUUID->"829113c6-c2c2-4f41-8638-59860410bbe4"],
Cell[263462, 5019, 835, 16, 43, "Message",ExpressionUUID->"8b6dacc1-cbe0-4f27-9949-9e456ddcb123"],
Cell[264300, 5037, 247, 3, 28, "Output",ExpressionUUID->"420d848a-bbdd-44f9-8fa7-7d4367acc1c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264584, 5045, 1401, 32, 77, "Input",ExpressionUUID->"7744d24d-5a27-46e7-926b-641281971385"],
Cell[265988, 5079, 265, 4, 28, "Output",ExpressionUUID->"ceb52dd2-53e5-4ebd-afe8-fee1baa50a58"]
}, Open  ]],
Cell[266268, 5086, 254, 5, 26, "Input",ExpressionUUID->"ec09f5eb-ea0c-42b1-b0fd-4663a18d42a1"],
Cell[CellGroupData[{
Cell[266547, 5095, 7202, 166, 387, "Input",ExpressionUUID->"d0763b1a-5f7b-4830-9cf4-d0f78b8cc975"],
Cell[273752, 5263, 544, 11, 26, "Message",ExpressionUUID->"18b495b8-fc8f-4cd3-bbe8-c48ae84abe10"],
Cell[274299, 5276, 580, 12, 26, "Message",ExpressionUUID->"c8265b4f-af1e-48fb-9d65-a2475bcfb9f2"],
Cell[274882, 5290, 112110, 2015, 192, "Output",ExpressionUUID->"c77c3f86-8059-42b3-993f-7dae8ea5dd2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387029, 7310, 1803, 38, 94, "Input",ExpressionUUID->"c3bfab02-767a-4031-ab6e-51a1fa04d2f2"],
Cell[388835, 7350, 244, 3, 28, "Output",ExpressionUUID->"de906ef0-b7ed-4985-afc8-a3bdf8b88fc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389116, 7358, 1853, 39, 94, "Input",ExpressionUUID->"c50e7bca-46fa-46b1-9edd-f15a84bb8048"],
Cell[390972, 7399, 244, 3, 28, "Output",ExpressionUUID->"9c52947c-303d-4335-b5ae-d0ab7144e387"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391253, 7407, 1478, 33, 77, "Input",ExpressionUUID->"23a3257e-d6d3-4463-b47e-89ecbc049c87"],
Cell[392734, 7442, 267, 4, 28, "Output",ExpressionUUID->"85fe3063-ca06-4227-bd70-714fe26b98f6"]
}, Open  ]],
Cell[393016, 7449, 277, 5, 26, "Input",ExpressionUUID->"334d7513-0c6a-410a-bbbd-854f83196066"],
Cell[CellGroupData[{
Cell[393318, 7458, 7258, 167, 387, "Input",ExpressionUUID->"ba032d5f-1102-4531-8b61-db208bdd29c3"],
Cell[400579, 7627, 546, 11, 26, "Message",ExpressionUUID->"e5650a43-fcea-4fc1-9ca1-03c97dbf5e1a"],
Cell[401128, 7640, 583, 12, 26, "Message",ExpressionUUID->"7266ec7f-e860-4597-b4e2-aff95cde9df6"],
Cell[401714, 7654, 105284, 1906, 192, "Output",ExpressionUUID->"43e57afa-b58f-438f-a1e3-fb3c082aa99e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[507035, 9565, 1854, 39, 111, "Input",ExpressionUUID->"104b2344-c836-4c22-b709-013f0bbcbc28"],
Cell[508892, 9606, 836, 16, 43, "Message",ExpressionUUID->"62a6f32a-f8b0-42af-9542-5687931e9649"],
Cell[509731, 9624, 242, 3, 28, "Output",ExpressionUUID->"87cc0a5b-72c9-47b0-bbfa-6155d6eaf0a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510010, 9632, 1872, 39, 111, "Input",ExpressionUUID->"61d05773-1f6b-4a4e-aae5-f1d5cc8c5eab"],
Cell[511885, 9673, 831, 16, 43, "Message",ExpressionUUID->"1953c940-950e-4b10-b6eb-c0accb8009b2"],
Cell[512719, 9691, 246, 3, 28, "Output",ExpressionUUID->"f73b3e75-faa2-441d-b1bd-a9ee04bf06aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513002, 9699, 1476, 33, 94, "Input",ExpressionUUID->"3d80b4ef-2088-438a-8223-a37f10981c5a"],
Cell[514481, 9734, 264, 4, 28, "Output",ExpressionUUID->"67c01e90-ca6a-4ccd-bf6f-a1f6bb6e8b17"]
}, Open  ]],
Cell[514760, 9741, 2404, 70, 77, "Input",ExpressionUUID->"aef13741-39a4-430a-8285-35842a3d0ff9"],
Cell[517167, 9813, 326, 6, 26, "Input",ExpressionUUID->"9ec84a6a-fe5b-4a96-9bd7-5358dc54bc07"],
Cell[517496, 9821, 2404, 70, 77, "Input",ExpressionUUID->"761c78c2-1e82-4ac3-82dd-9d611df93088"],
Cell[519903, 9893, 1650, 46, 95, "Input",ExpressionUUID->"42cf727b-69f5-4de1-95cc-61bd437da0ec"],
Cell[521556, 9941, 5439, 149, 91, "Input",ExpressionUUID->"429972d2-00ee-4c7f-ad99-671bf486a07b"],
Cell[526998, 10092, 209, 3, 26, "Input",ExpressionUUID->"e82e0a3f-8df2-476a-9ea9-a57ebb56e7f5"],
Cell[527210, 10097, 679, 16, 77, "Input",ExpressionUUID->"2d4e44f9-21b6-4b98-8d95-17d8ef5a5a21"],
Cell[CellGroupData[{
Cell[527914, 10117, 6663, 153, 335, "Input",ExpressionUUID->"d0f21884-6f73-4574-b7a1-28afd24b1872"],
Cell[534580, 10272, 545, 11, 26, "Message",ExpressionUUID->"ce4d70a5-55dc-4091-b2d4-cdac98f2e577"],
Cell[535128, 10285, 581, 12, 26, "Message",ExpressionUUID->"305b2f22-a5ad-4f28-bf51-54ce9e53e0cf"],
Cell[535712, 10299, 75236, 1371, 180, "Output",ExpressionUUID->"04af2266-6cee-40b0-bfaa-7ba51d97be3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610985, 11675, 1954, 40, 111, "Input",ExpressionUUID->"22b17289-e711-4f4c-a64f-38c3d6fbe77d"],
Cell[612942, 11717, 557, 12, 26, "Message",ExpressionUUID->"a0d8514b-6ab5-4a49-ba89-5625bb1461c8"],
Cell[613502, 11731, 833, 16, 43, "Message",ExpressionUUID->"7350e73e-9565-4fc3-987f-502042ad6073"],
Cell[614338, 11749, 249, 3, 30, "Output",ExpressionUUID->"c41daf8f-ac37-436a-8a46-f0d1c9dfcded"]
}, Open  ]],
Cell[CellGroupData[{
Cell[614624, 11757, 1551, 34, 94, "Input",ExpressionUUID->"62bce0c7-dd17-4fe6-a5f6-041d97543068"],
Cell[616178, 11793, 839, 16, 43, "Message",ExpressionUUID->"3b8b2634-3600-4a2d-9eb6-4ea5f9130bdf"],
Cell[617020, 11811, 267, 4, 33, "Output",ExpressionUUID->"fbe91517-beae-406e-918f-32dea33593f2"]
}, Open  ]],
Cell[617302, 11818, 799, 17, 95, "Input",ExpressionUUID->"5dec2fdf-8951-4aa5-a73d-a5646c5eda5a"],
Cell[CellGroupData[{
Cell[618126, 11839, 6717, 154, 335, "Input",ExpressionUUID->"659138b2-edc2-4574-a9c0-b9c60260cc8e"],
Cell[624846, 11995, 549, 11, 26, "Message",ExpressionUUID->"db00e779-eeb2-4311-a624-ce7e94a80f2e"],
Cell[625398, 12008, 583, 12, 26, "Message",ExpressionUUID->"7bd8ffcd-67de-4716-aec8-31279b7d37a3"],
Cell[625984, 12022, 81627, 1477, 180, "Output",ExpressionUUID->"f3020029-bb9b-4102-8a01-c07c7d5132dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[707648, 13504, 2002, 41, 111, "Input",ExpressionUUID->"f3331a37-ec25-4da3-95b2-bc200cfeebd0"],
Cell[709653, 13547, 834, 16, 43, "Message",ExpressionUUID->"5414f96c-55f3-4772-99e2-2489dc1a4896"],
Cell[710490, 13565, 247, 3, 30, "Output",ExpressionUUID->"bfd863c9-c318-4519-b1c1-6c273ea8e361"]
}, Open  ]],
Cell[CellGroupData[{
Cell[710774, 13573, 1654, 35, 94, "Input",ExpressionUUID->"47b6bda0-cd9f-478c-9bf9-40a16df7dc24"],
Cell[712431, 13610, 265, 4, 28, "Output",ExpressionUUID->"4dd1bc71-58d3-470f-a6a4-8cb14224b6d6"]
}, Open  ]],
Cell[712711, 13617, 907, 19, 77, "Input",ExpressionUUID->"cfceb5b5-0c8d-4835-ba14-e6c13ec6bf72"],
Cell[CellGroupData[{
Cell[713643, 13640, 6815, 155, 335, "Input",ExpressionUUID->"026fe143-7c45-449d-a8da-bb6be1df2974"],
Cell[720461, 13797, 549, 11, 26, "Message",ExpressionUUID->"372c73b3-ca74-44f7-a523-eeae19abf449"],
Cell[721013, 13810, 583, 12, 26, "Message",ExpressionUUID->"2d0e29e0-49ac-486b-8711-197dc454357f"],
Cell[721599, 13824, 89666, 1610, 180, "Output",ExpressionUUID->"207c8864-51d8-43d8-abb8-f3cd861658cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[811302, 15439, 2102, 42, 111, "Input",ExpressionUUID->"96367f1a-1fc4-4a9b-932c-fc807297e693"],
Cell[813407, 15483, 555, 12, 26, "Message",ExpressionUUID->"49400588-16c6-4a2c-86f1-8533c64c1608"],
Cell[813965, 15497, 833, 16, 43, "Message",ExpressionUUID->"dab18862-67e7-41af-bcf4-bef102bd6614"],
Cell[814801, 15515, 249, 3, 30, "Output",ExpressionUUID->"f2627b32-96dc-4a45-a7ce-56768ffcacf6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[815087, 15523, 1657, 35, 94, "Input",ExpressionUUID->"a4f8f3ff-bcfb-4757-bc81-937356b843c4"],
Cell[816747, 15560, 270, 4, 28, "Output",ExpressionUUID->"dbea8748-2848-4c0c-b21d-f739dd4811d1"]
}, Open  ]],
Cell[817032, 15567, 1008, 20, 77, "Input",ExpressionUUID->"dc75dabe-a4bc-494d-aa2e-2fc58e2e6b6e"],
Cell[CellGroupData[{
Cell[818065, 15591, 6816, 155, 335, "Input",ExpressionUUID->"bf27d57b-8a56-49d9-ac43-910fa4541859"],
Cell[824884, 15748, 547, 11, 26, "Message",ExpressionUUID->"b29e90a9-a6af-4360-b89e-0e698553e152"],
Cell[825434, 15761, 581, 12, 26, "Message",ExpressionUUID->"9cea787a-53dc-4c4d-9e0b-587606544b8f"],
Cell[826018, 15775, 88045, 1582, 180, "Output",ExpressionUUID->"6c9124e7-f59e-4f1b-870d-1b3f6143929e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[914100, 17362, 2104, 42, 111, "Input",ExpressionUUID->"10d552b7-672f-4b5a-aa39-32d178a3803b"],
Cell[916207, 17406, 561, 12, 26, "Message",ExpressionUUID->"9cd03227-3f05-44ae-90c9-60f0bdf7ca62"],
Cell[916771, 17420, 840, 16, 43, "Message",ExpressionUUID->"c832cea3-d2aa-4ca2-9551-aa15af561b55"],
Cell[917614, 17438, 245, 3, 30, "Output",ExpressionUUID->"336a53e2-eb72-4da5-ade9-a722de5c6eba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[917896, 17446, 1709, 36, 94, "Input",ExpressionUUID->"22077ad0-54e1-49cf-9c4c-6d77d2341634"],
Cell[919608, 17484, 265, 4, 28, "Output",ExpressionUUID->"9295f21e-72cf-48fe-9805-82f166c512d8"]
}, Open  ]],
Cell[919888, 17491, 2404, 70, 77, "Input",ExpressionUUID->"18a91155-20df-4028-b1ba-2e60d5bfb7f1"],
Cell[922295, 17563, 383, 7, 26, "Input",ExpressionUUID->"5f15f362-3563-4bff-b506-49e84106affc"],
Cell[922681, 17572, 7903, 209, 296, "Input",ExpressionUUID->"eb3c7c80-e108-41a7-8d74-c9e4ec3d1dd7"],
Cell[930587, 17783, 236, 5, 26, "Input",ExpressionUUID->"02973fc3-a91e-498f-9c9b-388d77264011"],
Cell[930826, 17790, 723, 15, 60, "Input",ExpressionUUID->"3137d197-373c-4a59-8a13-c1dcbab63749"],
Cell[CellGroupData[{
Cell[931574, 17809, 7383, 170, 387, "Input",ExpressionUUID->"d1a62d0c-d09e-4821-af29-1a0e82252094"],
Cell[938960, 17981, 530, 12, 26, "Message",ExpressionUUID->"949d5f6b-912c-43eb-9610-a86b07826d62"],
Cell[939493, 17995, 561, 12, 26, "Message",ExpressionUUID->"46bff7d7-0e3f-4841-8a6f-cefc6f29b7e4"],
Cell[940057, 18009, 88916, 1637, 191, "Output",ExpressionUUID->"ea1ce267-750c-440d-8ad8-39f8dc662517"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1029010, 19651, 1955, 41, 94, "Input",ExpressionUUID->"0f8cecd4-5526-42c1-9d9b-550a061d848a"],
Cell[1030968, 19694, 220, 4, 28, "Output",ExpressionUUID->"2c8f37eb-86b1-48ea-8aac-e0bd795cff30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1031225, 19703, 1977, 42, 94, "Input",ExpressionUUID->"2ae585c1-1e1a-4559-9aa1-006ec132d706"],
Cell[1033205, 19747, 267, 4, 28, "Output",ExpressionUUID->"9acc11bb-4abf-4753-baf6-478293c49bf1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1033509, 19756, 1553, 35, 77, "Input",ExpressionUUID->"c7a43afa-917a-48a1-998e-07d297ca9efb"],
Cell[1035065, 19793, 248, 5, 28, "Output",ExpressionUUID->"460e14ed-8beb-47e5-9471-3f1049e755ed"]
}, Open  ]],
Cell[1035328, 19801, 286, 6, 26, "Input",ExpressionUUID->"58381203-aee8-4431-a392-94f89ade9c85"],
Cell[1035617, 19809, 773, 16, 60, "Input",ExpressionUUID->"baeba677-bb66-4a77-88f3-3e64f8a2f81e"],
Cell[CellGroupData[{
Cell[1036415, 19829, 7437, 171, 387, "Input",ExpressionUUID->"9dde2650-c8d9-4941-aff9-b2f388e1a09f"],
Cell[1043855, 20002, 502, 11, 26, "Message",ExpressionUUID->"a5ce47f7-24f4-4e5f-bd30-81fef12c1e6e"],
Cell[1044360, 20015, 534, 11, 26, "Message",ExpressionUUID->"ea0325c8-40e8-4925-a657-349f9b4a43e8"],
Cell[1044897, 20028, 70126, 1328, 189, "Output",ExpressionUUID->"99a013df-7fde-4601-b8aa-0c17ee08c3f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1115060, 21361, 2004, 42, 94, "Input",ExpressionUUID->"5207d0cd-282e-4788-93d4-0d53b2b805e2"],
Cell[1117067, 21405, 199, 3, 28, "Output",ExpressionUUID->"ab7795de-434d-4297-9c68-44e02411f586"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1117303, 21413, 2024, 42, 94, "Input",ExpressionUUID->"8e20ec20-4fb9-4692-b132-973f97d21215"],
Cell[1119330, 21457, 222, 4, 28, "Output",ExpressionUUID->"ac20b427-7e42-4bd0-b27e-db39b39507ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1119589, 21466, 1606, 36, 77, "Input",ExpressionUUID->"9a0282ca-ca39-430c-a2ab-a9840e30569f"],
Cell[1121198, 21504, 222, 4, 28, "Output",ExpressionUUID->"92519e48-eaf3-49d1-a650-4522640f79e9"]
}, Open  ]],
Cell[1121435, 21511, 339, 7, 26, "Input",ExpressionUUID->"d16caa43-ceef-432c-b0b3-65640591314c"],
Cell[1121777, 21520, 821, 16, 60, "Input",ExpressionUUID->"62631f5e-accd-437e-b4c2-128e8d3f3092"],
Cell[CellGroupData[{
Cell[1122623, 21540, 7484, 171, 387, "Input",ExpressionUUID->"d2c32f7d-b287-4c5d-8dc4-4b2e1488f48d"],
Cell[1130110, 21713, 502, 11, 26, "Message",ExpressionUUID->"154a9beb-ad3e-4430-ac51-51d3fcf73ae2"],
Cell[1130615, 21726, 534, 11, 26, "Message",ExpressionUUID->"7325a1ac-be36-446c-b000-eb0dfb7ff221"],
Cell[1131152, 21739, 44509, 908, 189, "Output",ExpressionUUID->"2987999d-d104-4a71-8384-e8e51f0ef71f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1175698, 22652, 2056, 43, 94, "Input",ExpressionUUID->"56047da5-64fd-417a-aa99-08e9c2332825"],
Cell[1177757, 22697, 195, 3, 28, "Output",ExpressionUUID->"43eec2d4-a751-4f6d-8c7e-df3da6ca1bc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1177989, 22705, 2074, 43, 94, "Input",ExpressionUUID->"b6ec8940-880b-43af-8761-69dc19a244e7"],
Cell[1180066, 22750, 226, 4, 28, "Output",ExpressionUUID->"fedb3fda-d3da-473e-ab99-8c4ceb3d3cbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1180329, 22759, 1654, 36, 77, "Input",ExpressionUUID->"292e570f-823e-47af-8556-0937a443333e"],
Cell[1181986, 22797, 219, 4, 28, "Output",ExpressionUUID->"6d0e7562-de29-4a56-82e9-eabe8963b79c"]
}, Open  ]],
Cell[1182220, 22804, 389, 7, 26, "Input",ExpressionUUID->"5f3c9289-ea2d-4b3f-b2f2-55c02f72f1ab"],
Cell[1182612, 22813, 874, 17, 60, "Input",ExpressionUUID->"59a21f8c-3597-45c8-97cd-a32d92600741"],
Cell[CellGroupData[{
Cell[1183511, 22834, 7536, 172, 387, "Input",ExpressionUUID->"ed213763-b48d-461e-8a3f-b3d2fed21db1"],
Cell[1191050, 23008, 502, 11, 26, "Message",ExpressionUUID->"df3f2b25-d510-4deb-bb4e-bcb07d90d962"],
Cell[1191555, 23021, 534, 11, 26, "Message",ExpressionUUID->"e9019ab9-c363-46e4-b266-80380a8b3e36"],
Cell[1192092, 23034, 34043, 735, 187, "Output",ExpressionUUID->"2b80c35e-6b5b-4ad0-b08c-10740164ff3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1226172, 23774, 2104, 43, 94, "Input",ExpressionUUID->"c3a62e25-6dce-443a-b147-2a2f40358dfb"],
Cell[1228279, 23819, 201, 3, 28, "Output",ExpressionUUID->"ed73ac83-5205-4823-9627-8802a40b3465"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1228517, 23827, 2126, 44, 94, "Input",ExpressionUUID->"d0a029e6-73a1-4329-9f16-8cc4b83f2d10"],
Cell[1230646, 23873, 226, 4, 28, "Output",ExpressionUUID->"0486ed94-3a7d-4511-a18a-8539a5b0e94d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1230909, 23882, 1708, 37, 77, "Input",ExpressionUUID->"d4fcdab3-c8fe-4f6d-8867-b0bd2eab52ad"],
Cell[1232620, 23921, 223, 4, 28, "Output",ExpressionUUID->"ae3e2535-402a-42a3-9a2c-824e0dd35d58"]
}, Open  ]],
Cell[1232858, 23928, 3379, 92, 95, "Input",ExpressionUUID->"95323a42-df1f-421c-9ae0-332b0db013dc"],
Cell[1236240, 24022, 3216, 88, 149, "Input",ExpressionUUID->"aadd6e62-504d-4f04-ae98-69b78dc3e33a"],
Cell[1239459, 24112, 1422, 37, 46, "Input",ExpressionUUID->"b9baae2e-9826-4f83-b488-271515edc216"],
Cell[1240884, 24151, 211, 4, 25, "Input",ExpressionUUID->"92d980d9-4fae-4534-93da-b5f4ec2c48a6"],
Cell[1241098, 24157, 1294, 28, 163, "Input",ExpressionUUID->"8d8df561-1929-45f5-be81-50cc89320ef5"],
Cell[1242395, 24187, 574, 15, 77, "Input",ExpressionUUID->"59c45ae6-84a7-4e9b-8dcf-534038d5f17f"],
Cell[CellGroupData[{
Cell[1242994, 24206, 6339, 156, 387, "Input",ExpressionUUID->"08080160-846d-4390-a30e-fd6a07d00fc9"],
Cell[1249336, 24364, 602, 13, 26, "Message",ExpressionUUID->"4496df08-2518-404c-8400-d0d704067a1a"],
Cell[1249941, 24379, 630, 13, 26, "Message",ExpressionUUID->"23f0c4e6-c73d-477b-804d-cdd578d58a2a"],
Cell[1250574, 24394, 88984, 1638, 191, "Output",ExpressionUUID->"33487d5d-9c04-4ec4-aee6-5d48ac8fb00d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1339595, 26037, 1632, 38, 94, "Input",ExpressionUUID->"ac13a8d3-44dc-48ab-9bd0-cd383ec5153c"],
Cell[1341230, 26077, 273, 4, 28, "Output",ExpressionUUID->"3d28a0ca-99e1-4401-a9b7-8accd0c1ceb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1341540, 26086, 1632, 38, 94, "Input",ExpressionUUID->"c24a8171-8ef6-4b49-8286-6ed3b44f523b"],
Cell[1343175, 26126, 271, 4, 28, "Output",ExpressionUUID->"b8ed7dde-7b03-4c73-832f-f703631a19af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1343483, 26135, 1252, 31, 77, "Input",ExpressionUUID->"07bc977f-d9a2-42eb-a431-e1cd3cff24a7"],
Cell[1344738, 26168, 294, 5, 28, "Output",ExpressionUUID->"dd6e5a42-7709-463e-a61d-904ad212a64f"]
}, Open  ]],
Cell[1345047, 26176, 268, 7, 26, "Input",ExpressionUUID->"71789f4f-0aee-45e2-bfd1-d428a3c54ff3"],
Cell[CellGroupData[{
Cell[1345340, 26187, 229, 4, 25, "Input",ExpressionUUID->"21f76555-18c5-4c83-829a-495492f54e58"],
Cell[1345572, 26193, 256, 4, 30, "Output",ExpressionUUID->"4e02e9f2-a86d-49f6-86a3-7360f9359aab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1345865, 26202, 5224, 132, 146, "Input",ExpressionUUID->"243a6ceb-24aa-4e1f-bacd-b90b3e7273d4"],
Cell[1351092, 26336, 527, 12, 26, "Message",ExpressionUUID->"1b6df7be-a4b0-4d17-9dea-da2b17595ef9"],
Cell[1351622, 26350, 557, 12, 26, "Message",ExpressionUUID->"8bbeffea-0e3e-449b-9abe-c5e90a2d2d29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1352216, 26367, 2212, 48, 267, "Input",ExpressionUUID->"8edbadc3-7eea-4bbf-8cbb-56b630d89a80"],
Cell[1354431, 26417, 87984, 1621, 186, "Output",ExpressionUUID->"664bf787-258b-4502-ae49-ffcc06253446"],
Cell[1442418, 28040, 1024, 23, 31, "Output",ExpressionUUID->"f153dbc5-e968-43d7-9c83-ee8660f3844f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1443479, 28068, 1632, 38, 94, "Input",ExpressionUUID->"9a4649f5-3be1-44c7-8027-08bc1726e509"],
Cell[1445114, 28108, 301, 5, 28, "Output",ExpressionUUID->"f8c2324d-eeb9-4a7b-bcd1-aa6b7c2588b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1445452, 28118, 1632, 38, 94, "Input",ExpressionUUID->"9566d61b-59b3-4564-9159-3cf4aceacbad"],
Cell[1447087, 28158, 273, 4, 28, "Output",ExpressionUUID->"6386b71c-d229-4932-8d96-ac9182d1a759"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1447397, 28167, 1252, 31, 77, "Input",ExpressionUUID->"1f30b5eb-82ae-4d38-b56e-744088638e02"],
Cell[1448652, 28200, 316, 6, 28, "Output",ExpressionUUID->"cbe6038f-5a67-49f2-bb8c-383747c6f24f"]
}, Open  ]],
Cell[1448983, 28209, 3379, 92, 95, "Input",ExpressionUUID->"c2e7f059-f4e3-46bd-99ea-d1cc2c2e872e"],
Cell[1452365, 28303, 4583, 125, 170, "Input",ExpressionUUID->"7b6a9df4-22fc-4392-a971-a04d2688c34b"],
Cell[1456951, 28430, 1418, 36, 46, "Input",ExpressionUUID->"9c82e463-b000-4b41-9bd7-77c595c82885"],
Cell[1458372, 28468, 1083, 20, 77, "Input",ExpressionUUID->"0aa41994-d335-45c7-b254-09b340b12cd0"],
Cell[CellGroupData[{
Cell[1459480, 28492, 6901, 157, 335, "Input",ExpressionUUID->"63bd34db-ba35-496b-aebf-217282d4f219"],
Cell[1466384, 28651, 568, 11, 26, "Message",ExpressionUUID->"c5a1e522-05a3-44e1-83f7-a15e775214e5"],
Cell[1466955, 28664, 602, 12, 26, "Message",ExpressionUUID->"8d7e66fb-98b1-4227-9aae-34958fe49f69"],
Cell[1467560, 28678, 82315, 1488, 190, "Output",ExpressionUUID->"74bf8364-9fcf-44e0-8980-de761bf6a1ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1549912, 30171, 2156, 43, 94, "Input",ExpressionUUID->"c1d3b56f-9fcc-4277-89d8-bf8cc021b381"],
Cell[1552071, 30216, 582, 12, 26, "Message",ExpressionUUID->"f0e85eab-e198-49f2-b382-9b6f7917387d"],
Cell[1552656, 30230, 859, 16, 43, "Message",ExpressionUUID->"bf8d1fd4-3f2e-4772-babe-f46d06b02764"],
Cell[1553518, 30248, 269, 3, 30, "Output",ExpressionUUID->"fe486bf2-752b-48bd-8f6f-751790144a21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1553824, 30256, 1785, 37, 77, "Input",ExpressionUUID->"30ce6949-efb5-49d9-9eeb-4a6b6fc00abc"],
Cell[1555612, 30295, 193, 3, 28, "Output",ExpressionUUID->"90f3d7a1-62db-41b3-9e2e-b786fe85d651"]
}, Open  ]],
Cell[1555820, 30301, 1133, 21, 77, "Input",ExpressionUUID->"52094ed3-230e-4d1b-aabb-d7eb0798ec4d"],
Cell[CellGroupData[{
Cell[1556978, 30326, 6947, 157, 335, "Input",ExpressionUUID->"571a3e84-12ef-428b-bc51-9ddc1af491e1"],
Cell[1563928, 30485, 596, 12, 26, "Message",ExpressionUUID->"698548b5-a278-4d96-8be5-82efd8ebf6ef"],
Cell[1564527, 30499, 628, 13, 26, "Message",ExpressionUUID->"9231c0d1-d492-4b7c-9c98-8193485fe91c"],
Cell[1565158, 30514, 84514, 1524, 190, "Output",ExpressionUUID->"190d8aae-9de4-4cdf-b178-eef750937f90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1649709, 32043, 2210, 44, 94, "Input",ExpressionUUID->"687780b9-5780-484b-bf0d-9015dbff58b2"],
Cell[1651922, 32089, 581, 12, 26, "Message",ExpressionUUID->"f9615567-a54d-42c0-987a-748eb09f85c1"],
Cell[1652506, 32103, 920, 17, 43, "Message",ExpressionUUID->"a809c2c8-fcd0-4486-aac3-a84a945e46d1"],
Cell[1653429, 32122, 266, 3, 30, "Output",ExpressionUUID->"342baa83-6026-4b93-984e-68dccf01dbb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1653732, 32130, 1835, 38, 77, "Input",ExpressionUUID->"2d988311-72a8-4bd3-bb6e-66bc371387c8"],
Cell[1655570, 32170, 214, 3, 52, "Output",ExpressionUUID->"4a72dbca-928b-4899-b017-7b6198e7708e"]
}, Open  ]]
}
]
*)

