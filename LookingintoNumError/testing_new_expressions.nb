(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    500192,       9507]
NotebookOptionsPosition[    496954,       9453]
NotebookOutlinePosition[    497384,       9470]
CellTagsIndexPosition[    497341,       9467]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{"path", "-", 
    RowBox[{"itegrals", ".", "m"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", "VG"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"VG", ",", 
         RowBox[{"PowerRange", "[", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"-", "4"}]], ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "1"}]]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"path", "-", "integrals", "-", 
       RowBox[{"simulations", ".", "m"}]}], "*)"}], "\n", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", "VG"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"VG", ",", 
         RowBox[{"{", 
          RowBox[{
          "0.002249954", ",", "0.007050979", ",", "0.019860999", ",", 
           "0.056859878"}], "}"}]}], "}"}]}], "]"}], "\n", 
     RowBox[{"(*", "\"\<path-integrals-testing-num-error.m\>\"", "*)"}], 
     "\[IndentingNewLine]", "pints"}], "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", "VG"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"VG", ",", 
        RowBox[{"{", 
         RowBox[{
         "0.00999", ",", " ", "0.01", ",", " ", "0.01001", ",", " ", "0.007", 
          ",", " ", "0.00705", ",", " ", "0.007050979", ",", " ", "0.008"}], 
         "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
   RowBox[{"(*", 
    RowBox[{"path", "-", "integrals", "-", "testing", "-", "fractions"}], 
    "*)"}], "\n", 
   RowBox[{"pints", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", "VG"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"VG", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"999", "/", 
           RowBox[{"10", "^", "5"}]}], ",", " ", 
          RowBox[{"1", "/", "100"}], ",", " ", 
          RowBox[{"1001", "/", 
           RowBox[{"10", "^", "5"}]}], ",", " ", 
          RowBox[{"7", "/", 
           RowBox[{"10", "^", "3"}]}], ",", " ", 
          RowBox[{"705", "/", 
           RowBox[{"10", "^", "5"}]}], ",", " ", 
          RowBox[{"7050979", "/", 
           RowBox[{"10", "^", "9"}]}], ",", " ", 
          RowBox[{"8", "/", 
           RowBox[{"10", "^", "3"}]}]}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";", "\n", 
   RowBox[{"Get", "[", "\"\<new1through5Sequential_50Kimura.m\>\"", "]"}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"seq", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"new", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", "\n", 
   RowBox[{"Save", "[", 
    RowBox[{"\"\<oldmethod.m\>\"", ",", "seq"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.9107085776042194`*^9, 3.910708589853216*^9}, {
  3.910711679606737*^9, 3.9107116859522204`*^9}, {3.910711932920845*^9, 
  3.91071193764252*^9}, {3.9107120093159494`*^9, 
  3.9107120107438946`*^9}},ExpressionUUID->"35b92584-595f-4ba6-a2bd-\
49d0b108e7fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Kimura", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_", ",", "n_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "m", "}"}], ",", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"4", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "m"}], "+", "1"}], ")"}], "*", "x", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"m", "+", "1"}], ")"}]}], ")"}]}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "x"}]}]}], "]"}], "*", 
       RowBox[{"GegenbauerC", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"3", "/", "2"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", "*", "y"}]}]}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], "*", "m", "*", 
         RowBox[{"(", 
          RowBox[{"m", "+", "1"}], ")"}], "*", "t"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"c7c161c6-8b25-4988-92f6-6395f3566df3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", "\"\<path-integrals-testing-num-error.m\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9107119860405283`*^9, 3.910712006990199*^9}, 
   3.910712067835163*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"b1be8a36-a606-4254-87ad-c076a629bc3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"num00999", "[", "0", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{"Kimura", "[", 
      RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"num01", "[", "0", "]"}], "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{"Kimura", "[", 
      RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"num01001", "[", "0", "]"}], "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{"Kimura", "[", 
      RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"num007", "[", "0", "]"}], "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{"Kimura", "[", 
      RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"num00705", "[", "0", "]"}], "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{"Kimura", "[", 
      RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"num007050979", "[", "0", "]"}], "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{"Kimura", "[", 
      RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"num008", "[", "0", "]"}], "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{"Kimura", "[", 
      RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"k", " ", "\[LessEqual]", "3"}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"num00999", "[", "k", "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num01", "[", "k", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num01001", "[", "k", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num007", "[", "k", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num00705", "[", "k", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num007050979", "[", "k", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "6", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num008", "[", "k", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "7", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.910712089240077*^9, 3.910712316108619*^9}, {
  3.910712461802215*^9, 3.910712581588669*^9}, {3.910712728405061*^9, 
  3.9107127363136215`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"f392ab55-fa2c-4e20-b096-e5552267b1cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"num007050979", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.9107130100806427`*^9, 3.9107130242859583`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"4d87384b-ed89-4206-b7ce-fdd13f5048f8"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"2", " ", "Ne", " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", "x"}], "+", 
               RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "Ne", " ", "t", " ", "VG"}], "W"]}]], 
                 " ", "y"}]}], ")"}], " ", "\[Alpha]", " ", 
           "\[CapitalLambda]"}], "W"]], " ", 
       RowBox[{"(", 
         RowBox[{
           RowBox[{"6", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], "+", 
           RowBox[{
             FractionBox["7", "3"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "6"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", 
                   FractionBox["3", "2"]}], "+", 
                 RowBox[{
                   FractionBox["15", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "2"]}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", 
                   FractionBox["3", "2"]}], "+", 
                 RowBox[{
                   FractionBox["15", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}]}], ")"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
             FractionBox["9", "5"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "10"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["15", "2"]}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}], "+", 
                 RowBox[{
                   FractionBox["35", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "3"]}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["15", "2"]}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}]}], ")"}]}], "+", 
                 RowBox[{
                   FractionBox["35", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}]}], ")"}], "3"]}]}], ")"}]}], "+", 
           RowBox[{
             FractionBox["22", "15"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "15"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox["15", "8"], "-", 
                 RowBox[{
                   FractionBox["105", "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "2"]}], "+", 
                 RowBox[{
                   FractionBox["315", "8"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], "4"]}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox["15", "8"], "-", 
                 RowBox[{
                   FractionBox["105", "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}]}], ")"}], "2"]}], "+", 
                 RowBox[{
                   FractionBox["315", "8"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}]}], ")"}], "4"]}]}], ")"}]}], "+", 
           RowBox[{
             FractionBox["26", "21"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]], " ", 
             TemplateBox[{"2"}, "OutputSizeLimit`Skeleton"], " ", "x", " ", 
             RowBox[{"(", 
               TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], "+", 
           TemplateBox[{"41"}, "OutputSizeLimit`Skeleton"], "+", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "+", 
           FractionBox[
            RowBox[{"198", " ", 
              SuperscriptBox["\[ExponentialE]", 
               TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]], " ", 
              TemplateBox[{"2"}, "OutputSizeLimit`Skeleton"], " ", "x", " ", 
              RowBox[{"(", 
                TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], 
            "1225"], "+", 
           FractionBox[
            RowBox[{"202", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"-", "1275"}], " ", "t"}]], " ", 
              RowBox[{"(", 
                RowBox[{
                  TemplateBox[{"36"}, "OutputSizeLimit`Skeleton"], "+", 
                  TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], ")"}], 
              " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
              RowBox[{"(", 
                RowBox[{
                  TemplateBox[{"36"}, "OutputSizeLimit`Skeleton"], "+", 
                  FractionBox[
                   RowBox[{"315285451704888104171289053925", " ", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], 
                   "70368744177664"]}], ")"}]}], "1275"], "+", 
           RowBox[{"30", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", "t"}]], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "x"}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 RowBox[{"2", " ", "y"}]}], ")"}]}], "+", 
           FractionBox[
            RowBox[{"2", " ", 
              SuperscriptBox["Ne", "2"], " ", 
              RowBox[{"(", 
                RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", "\[Alpha]", 
              " ", "\[CapitalLambda]", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                  RowBox[{"0.005999999999999999`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "t"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "7.050979`"}], " ", "t"}]]}], ")"}]}], "+", 
                  TemplateBox[{"441"}, "OutputSizeLimit`Skeleton"], "+", 
                  RowBox[{"0.303909165359469`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "3"}], " ", "t"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "14.101958`"}], " ", "t"}]]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}]}], ")"}], " ", "\[Alpha]", " ", 
                    "\[CapitalLambda]"}]}], ")"}]}], 
            SuperscriptBox["W", "2"]]}], ")"}]}], Short[#, 8]& ], "line" -> 
   30, "sessionID" -> 28768283037514811285, "byteCount" -> 3274680, "size" -> 
   8, "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.910713017129123*^9, 3.9107130247743907`*^9}, 
   3.9107131139447756`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"9b3a28d6-9fca-49ec-aa6e-97f58f236e25"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"k", " ", "\[LessEqual]", "3"}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"termnum00999", "[", "k", "]"}], "  ", "=", " ", 
     RowBox[{
      RowBox[{"pints", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"termnum01", "[", "k", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"pints", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"termnum01001", "[", "k", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"pints", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"termnum007", "[", "k", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"pints", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"termnum00705", "[", "k", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"pints", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"termnum007050979", "[", "k", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"pints", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"termnum008", "[", "k", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"pints", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "[", 
      RowBox[{"[", "7", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.910712846293137*^9, 3.91071284633585*^9}, {
  3.9107128783952713`*^9, 3.9107129873926706`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"3320a2e1-0166-40c0-a035-dc3f3ba2e2ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "fitVar", ",", " ", "selectedNe", ",", " ", "jumpSize", ",", " ", 
    "selCoef", ",", " ", "genVar", ",", " ", "start", ",", "time", ",", " ", 
    "soln"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitVar", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectedNe", " ", "=", " ", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jumpSize", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", " ", "=", " ", "0.05"}], ";"}]}], "Input",
 CellChangeTimes->{{3.910440697865986*^9, 3.9104406988182306`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"678da62b-d0bb-4af0-aa18-b03056a046bc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"selCoef", ",", " ", "genVar", ",", " ", "soln"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selCoef", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genVar", " ", "=", " ", "0.007050979"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9104409339464197`*^9, 3.910440934322338*^9}, 
   3.9104414376885943`*^9, {3.910468296420635*^9, 3.910468297175737*^9}, 
   3.910713242612108*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"454f42f7-8d51-4cdc-b855-0b55556ecb7a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"num007050979", "[", "k", "]"}], "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "\[Rule]", "start"}], ",", 
           RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
           RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",",
            " ", 
           RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
           RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
           RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
           RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", " ", "3"}], "}"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "3"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "3"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.910713273061432*^9, 3.910713302206106*^9}, {
  3.9107134053088818`*^9, 3.9107134054525685`*^9}, {3.910713441367966*^9, 
  3.910713442848057*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"e3ba138d-e644-46b0-9a13-29de364188d4"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 46, 1, 28768283037514811285, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9107133039938745`*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"68ca9474-6aec-4a9e-bb58-3bb55fc0cdc1"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 46, 2, 28768283037514811285, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9107133040709324`*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"7fd08e1d-a166-4a23-8677-088ced1efced"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6H+EiMKj
          "]]}, Annotation[#, "Charting`Private`Tag$12122#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
o0YXCs4j6DFVPjd8LiZxX3nS/wgRJoMMO0HQRLzu12Y6liFs69A/nZRSS8xO
6DDUKhDKdxqFcs1zyYpTmubTKoTo5xJXs+97yPDsy4GKGoQ71d68SJMGIr60
qzBFhDAntRb7uUlIbtDVA16NCL7FEfyPMkri/7Vug65Y4e+a98KGE2LCuJk5
9apFoc9Pe512SyMxT5mua25HUN/FjuSHl5NPVnuST3YihLTrquf8s5qMPG93
Yl5HmK/ZzZVs7CMtfNMV81sI1YykDlX9dpLvzel6162YVwvoPvSplfy8Msfu
7kMoXJqcGJgsIzuvBvvx/0DgZA3nHYxuIhYxN7Qj7ynu0/LYMCa8QpQMLYft
HyBc2yfzKGJeJ/97yLugMoiwSaOItTMig7SdWogYfKzQ6zbyYz2TEr5z6May
IYSgH2udSqcrSdJcr/SXZwilBmZhuuPdZFe5jXj7mMLfGRX1lNBmRT8KUteO
IzzOYLfZJ8bTf2ituE68RFC9mRH97aKEjHVFrWqaRLjeOtktvMQnHYfv9R9/
jbCFnROCH1qIwNqB5z+jyFciyydhMpH+d+JcgCkiGMc/0BkKE1GfglVfyWQI
Wm9Oju8NaKSWPvHPb7xDiFjWfG+nJyCrlB9dzl1AWLD2SJeEVNEXzc6xYYsI
lQElGeGnS2lnbNm3tnIE/RULucQmjBYYa8x/+oSgPMfI3LG9g/4f6m8wqQ==

          "]]}, Annotation[#, "Charting`Private`Tag$12122#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$12122#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3c8le8bx60iJBwJaQglWcnIOM91QggZUSg7SbIyMlIIIZlZXxERZSRE
hEfIqOy99zrHcc6xR6Tf+f11Xu/XfZ/7uq7P9bnHI2DjcuMeHQ0NTQ89Dc3/
f7Xu4btqCTeRfJ1NRfiPAgyqfK4TvDJgf1Up2fXwMlxKT079wqsGx/4KRD7Q
XQbttoGSNF4jECHfONrZuQzGtltoHK8tdJu8CTAZWIExyVDVSF4PSMT8t/Z2
cQ0yjuq9eMkbDFru60amQtsQyPTlXDhvPByKbfH1MqPBiWrEhpW4xoPjqdxv
mYE0uO4QF8JIczwIH9GP/JlDgxOiF8uXeJwAXaxnZOlWaHBNf99L9HYnQoBS
q4dACC2OdS1R9tSr/6CtQmavKJ8Olzzmq1q2/xaCTI03lCkMOBPTd5+XV97D
Wlxqu4HSIRxlxIg5ky8bDlQ4L+JND+FeWDDdM1TNBi3BB4L3vQ/hvtx14fsa
nw3rvY30PGWHcGzO2JAn8jkQV0CrdFWcGdf4fOj2wacf4EXESa40HhacdAHH
QX6mPCCxloUPDbHifkk0WrVJ5YFO6IPNpXVWnFWxd9Uz0zzADsRLTB05jIv8
OuE6lZcHZue6TR5ePYzD134aybmeDxPHjY/SfT6Me9t3rfji6wKgP6HTze3H
hmP5F2imcfIztKYyKM3uHcElPzC2EFP/DN8/Cx/NP8SOE+oVs+Jw/gxbSqI7
3VzsOCR34O4I+hmeykkYUUTZcd9yE8vKJYpg8gIvvektdhzJcKlau70IfHM6
LOdz2XEyhwawyHQR3ErRK2QqZcf51tTVSG0WwX68ngJvDTuO8XxS7dGTxeB5
VnqSoZsdJ7B/pWHCqRiMj3zzO7DDjrv5ManF/XAJXMkL3XivyoFLNX+uYydQ
AmIjqPgHHQ7cNKdTm4lsCfxriTyXdJMD5/JUpQNrXgLxdkqauPscuPAbpG7G
TyVwecYt82s4Bw7dUxl+o/MFCKZFAZItHDiGEvE7UVZfIFOXy5WlhwOndZ9n
NMDjC9R91RjsHebADXSRxu6lfgHdn16MUoscuJWc5CnJpS+ARXP+Y2TixAkb
kPE/Ikqh+hINQQHHiePz11C8/64UnH+tjPppcOLYP2VEMJeXwtne03O5upy4
P0yGEgbTpXBlfOxivRknrrO23H38chmga/bNRC9OXCOZvTFQtwyUPS/Z+T/j
xFXyO3AL25bB/tbLk3+DOXHZ3vzfHkaXAeH3yPTXWE6cr1Tg/vZcGSzs6W0J
5nHiXCyG9VJ3y6C87PJbpiJOnO2rS++A4yv8WrF0GyjjxOnh51RfKH+FjGnr
okt1nDihDK1wzOuvsFvduTzfz4lrP8LFJYErB7/uE2+V9zlxP7BO97puloNC
gJJoEx0GV/Gw6avHw3LQJ1leUmTE4LKavU2rEsuhWuL9wNQRDM7bf+ytJqkc
Yg0YJaVOY3BOn+SWiXQVUCJBsmcTwuBsRqKvRPNUwOuN8NsD5zC46/Iqs32q
FRAS9T3kvCQGd4aSc/5uSgVcmdwhdihjcMdO0Dw5WFQBeBbJbgYcBseqbdqa
21gBPiXWX4VUMbitHBaX5eUKeLFwIV34Gga31Gtb+/rgN+CTu1d+UAeDm6ar
4ZDn/waffo2vd+ticK0WrqVPNb4Bb/YHJnEjDK7+1a8DAubfgHSTsFZ5C4Mr
rzxj3OD2DX7e15OQMcXgMrn7dpjffoPfqpLVeHMMzqtdAZLXv8H01fDHd+ww
ODaJsrlfTJUwHZN9SNgeg3sfKfVql78S3F6dnB99gMF16ZwbsrhaCfrJ4ZnH
nDA4+4JM/xjTSpA96pGY4ozB7bOcPFvvVAn0qfm7LK4Y3IUWLnfhxEr4pSGs
WulGzU80htc4rxISUrCKW+4YnMlLltqwmkr42qPbesYTgyMTXthVdlPZlJEB
+xiDC7lGd3hpvhKqDkstXfXC4Phzn345sUtdn7UgGuuNwZUw7ZjqHakCWifv
HUEfDE7T3oMmULAKNg8UyOxQeaKZklMiXwXnRL10UF8M7vG5h9dntaug5qGg
jusTqv6h82tHraqA0RwDnH5UfeatUzQ8qiDfoF4qi8oK6mM4n7AqwJxuEBN8
isF1Zpss5KVWwe/pBiSOynYHeiNHi6j/rwxzW6bynq2eDFtjFbhHEnuwzzC4
1w2/h2GoCgbbJp19qSwqpB74iFQFBDl3vRwq1wbVncuirQa92IbAOirfmlFu
7z1aDRMehzlbqUxSqfA4KFoN75jTWJuoHJx56fhlpBoudQw+/UxlPrrPdQ9u
VIP2TWW3MCoXWYvav7GrBjEm0019KmvUZbO1+VbDC3If9yEqj58WKNuPqqbq
5TJZRM3XIyD1jlRWNdw7tGWpSWXmyWN0NuXV0CJumNlBrf8dvP74uqUaHInP
StWpfDmdTa9xohp0a8KzPlH1a98P39hcq4aP+kl+DFS2tTiQKsKEQgoyoaNN
1XsXDVC5zY9C+lCBwHNqP+JO7OEjpFDoX7JgyqX2T+SpVzSqhsJIwH22Wmp/
byo7j552QiGYL6uwhuqHpTeE5zcCUbDX5rHN8cDgnu/ang9OQKF99L7LM6p/
PlfeebyAomC4Ol3zj+o3db4Bft5uFMJUpk7mumBwoz43fmjNU+MdtWRVpfrz
kMI19kK2Gnh4GftT8yEGl5Hc8HXiTA3UpuyUlFL9LbcN5hzyNTBzkXSXg+r/
u+VyeR6WNeD0ZN4gzRaD+8Ndop/jXgOfVH7nt9pgcDGPxbcGQmtAdyPjAMkK
g0NlhdSUimrgaHnkGg11fx0r5Rinpf0OnWWeRl7U/Wn2atdolvs70OSrdO4b
UP1mO9fSJPYdxG0DFD31MDixo9++RZh8h48ua2cltTA4lcdWCUeLvsPswYt+
QwgGF6arxbrd+B0WN71Ch5UwuLazMkHDI9/h5TN1/pbLGFwBMaiig74WzL5f
vfhEmlpPqnFOvGQt6ETUX+IVxuBMw1qnQhRrwfnZz7JkAQzOz+PKCa+rtTCt
4WXFdBKDq9O5EG96pxZCH7gGVHBjcDp/9wNPhtaC7x7mjAX1fLS2yDH/OF4L
AdzrbZ1znLhgreP//UeoheSOVTuzKU5cjlxM78v1WmDhf+E6NMqJW2Lz1XZi
roOd9Q6Rjz2cuMffrytIy9VBfk+kV0otJ+7V6Q2u6sg64CtXXZtN4sR9nVZt
7VCuh2CYrs9W5sT1awauRGrUw2Wfazvv5Thxm4U13Do36uGEVWxpshQnTv6J
gvXP+/XgSd/GbCHEiavASG7WxtUDIqTiZMPCifumxne6BF8PBSHb9XcHOHDV
Ocvu8fE/wOm3NX8/9T6td0g7brrUAJv3RH0GnNlxXwgPH1psNoA6iwGr0H12
3Ht7xaq7NI1w+uF/yw6W7LgQu4HbzlyNIOgxR1jQY8dp2nCkBCk3guQJeu0M
KXZch2kIT+GrRmhwTuSQmj6CG9V0Okov3gSXHHvMjo2x4TbOYo98cmoGC9bB
bS2UFUe3k89+XPg3UErih0w2GHFy/6y+Gha2wle7R7vXE+lxrcEy7U2iHfAx
aitNQf0fKB5poYuV7QA/6T+Ws8L/4ON/1vJ3cB0Qx8ln+O7APwgqjMqg3OyA
nHtHWW407oPiIN6NJ7AD5GqSHGKu7sPHC2nHHAY6wDhL2yfy2l9QITwvOqjS
CXySve7TlrtwKoa4k0vuhNJp4vVTP7egxto/t2StE3QOYqtDCrfA4hLGtGq7
E4ptRFn347cgtV+xopWuC4TfGJsJ2WwBz4mXjyncXYDxKWXU/LsJnHkiazLQ
BXIsFz1JcptwoOHe0vfoLjiImTpYWb4OxK2J8T6pbvCTlKLToazA1/vR9Vpy
3aAY2VThMLgCAQNIznelbmAbnL/+tm4FuMvTnHLVu8EdimjV4ldA5fGdPT+z
bhj4UsocrrgCKev9vEJh3TAZEy248XIZNFfajNwmusGSmdHE5DEZMNZPLy/M
dkMqt/NO+XUyjHeK8ZstdsPYUFcPCJPBoyhi5upGN8gafNts7iVBuss1N16W
HqggMahUyJJgk9QQXSvXA3KtgV3M/4jwfrHqN1tUD9BxKQr8KySAc5KeoMPr
Hjg2luewFEEAebWZJ43JPcBJVjTftyfA7zRmcb+sHqi6KL0WLUiAFX3TaEJF
DzxvHOu+n4IHpHzTsGGmBxbOJkcNRS3AUNDFMR+FXpgP2nFXiJuDTKlG2T6k
F2roT1MS3OfAccwkSkqtFw6ECMRy3ZwDGvkAWNDtBf+Z3TUvnjk4u9j+zsi2
F4YFlYd6M2bBQ9/RTjK6F2jp5Nl6y2eA7cQHyuxsLzAUj77S2Z8C3K2gsRkC
Nd4dnSOv5qbALdqyZZrcC0FxWcPzrVPQT8vzYXK7FzCOcrTkN1Pwdj7MYpS1
D3yjvwfglKZAosihrUemDz4kyLbOPZuE66oS+fXBfVC6Ka5lemkcnvkx/1cX
3gdJH/ew1kzjUFQ2/6I2qg/O3pClfzM2Blwi6TY1yX1weYLTPitsDEZZ2fkq
C/pAVpvTjn5qFBz7V8KKe/tAglcjYDxlBF49KLPLEOqHjNernmsXh2AR9ymM
RbQfTG3D1n4fGgINnuy8x5L9QBPRYTEwNQh0zfFkHcV+iHXJVoyKGwQfIY/H
O3r94J12q9B5cwDsJqRf3HjSD6+1Bvo7mvvhys2ibIbufpgf1S//TtXtrdjH
ZpeBfuCoeVjV79QLe/QZhOHRflhN0XrHr9MLFSXR4sUL/SA5LmUkc6gXJNhd
ysz/9sO7T2LnokJ6gL9FvPGryAAwR7zD1r/ohk1c/qy9/wB4vHv5ey63E6rf
E994BQ8AUfjJA+voTnjOJGb4InwAppjme2g8O4Gts6Au6/UA1JXYeefhOuGs
ZeHb8Q8DcHN9h0brSwfcelpsYtQ5AIuXrOMlhNqh7Ft5KwgMQl6a4+SSfAv4
ntgO0j07CHwV04+1WVoAF3hZyfzCIKwFNaH48d/Qqvkt11d2EEhSF7TGX/yG
2YHKF2XXBsE+MW/m09Av4NpEcRfcBiFlJrYn6+VP8JBuKOX+MQjBmCRhXp4m
sJM5nRH7cxCOrLgrF1EawUTOL4K1fRBahNKkQ5sbQUlRxoZuaBBu9vf4rnk1
Ap3K+yNk8iBU/btZWT3SANEGwQ6NfEMgk4GpaS38AXmuaqc93IbgkbsZXVNA
HaS6ZbBQvIZATSr8Y51lHUR67G0+eDoEkS/qE9aQOnD1Lm2zDBsCCwEawZ2/
tSAfIPRE++0QxLurnA16VgsN0Qz9Z34PwXtS3+lczu8wUdgQ0SUwDOKGL5zZ
qe+8ThLDkvS5YdgW1LV/blgFtWJXdeLFhuGNKP6xzqkqyMhrZDWWHwZy0KHF
+fJKsMlpihzVGQbuFOv5c6RvMJ/2M3rBaxgywl8VP7pfAaRXra//tg0DySml
bDupDMZbWNcteoZBdSfDMdypDNqZrxvVDg5DdoVs/13VMigMa+MKmhmGmgMe
mHVKKbgGtycw7QzD5GPXmMc6pbD+pDMJIzQCA0sHJz5wfoFdh943531HoEVe
0nejswiM5MxjJfxHACmt+adYXAQFtPMvLgWPgL2PcXVZbBFYJG89wkZRx6+4
5F8zLIK6Rj5Ng8wR6LmcbtBU/BlCT1uve/8egfXZW73yI58A00/S+ck3CjRX
D4xZPM4Dx3ePVdpOjcLwhvbaCdU8aHD8J98tNArLLvgKWfY8eEzPITgqMQp7
RtmqTvm5MCQls0NRGQUvU10Mee4jpEf4Zh97OAqdS49dmhw+wIUrjPt2VaNQ
lZLp4FL0Hory8s8N1o6C/i0F17Gg9yDDpW9wrWkUKK9+Zr4zfg/KC8nvL3SN
wgcVYV1RmvegGymqvTw/CiZTzwXFb2aB29D1ZB/OMbg0kuXwjC0TNlVW6xaP
jcEVMVWFwwvv4ElBIvHOiTG4V/ErjPD9HQT7TyCIyBiMXbj4X5jbO0gUfjRH
h4zBlAeNxI2RDPj2KF761YMx8FRLGrvqmQ7IyGWzv85jUPzj5eMUyXSoVxsL
cfYYA1qGK6K+i2/h97GzQ/r+Y9DaksczYP0WRtFy/6MJY7Cv+Xdk6VYa0DCP
tL6tHQOW/J2iStM3oJEpcL/42DiMj8S++laVBDLJbGeb+MdhzZimVj08CU5H
7c4OC4zDclYig6xxEvzx6bNhEBuHgO23UtLrifDJINzCGDcO36Lu3kiTTgQM
7crNv/bjcNxF4k1+bTzQbI1xcTqPQ2Lmo5/7r+Nhael3z1n3cZBxCryQez8e
mgbfG+g/HYdMuXRFWvZ48CkyuZ4VOw6X/9y8Umj7GiYsa9WuVY7Dw8FHXX4n
4qD15id6i+/jcIhmunJ/IxYqtFPq3Rqo60fRDbW3x0KcvAcutX0crGxDoo0D
Y+HqERFlyvQ41N48eWyPEAP5NdGXElgmALU2vKUUFw1eJyzPTJlNQNV208Gk
xxFgoy91a9R6AqbTNRvvKUaAbhDtywG7CTglMlBVsP8SzhKyVtpcJ+DhPs9u
ethL6C3F11YGT8DP8IFChsxwkNJxs4wvmIB2x8B7nIuhwO+v+jq6eALuHjE4
S18WCowlXM0vv07AigKrsWVAKIwfK5cIrJ2AnC8JNMY8ofBqZvevU+8EqE/X
+ktcfwF435BUjb0JONDZcnP4VzAs3rpg/45mEjpH7OLPvwkGq2UM3Sn6Sch7
8l/uoGMwaAvOyfIxTYJ5al6yIUcwnAkPTWPnnISjSe6vci2CoNOo1fGv8CQE
S/nZXGF+DmJLN1kGrk9C5AG2gvtX/KHCSOf7S/1JGL2Bp9itPQNVVMUdMZyE
Z9njKTw5z+B2lORItskkTC3YOkUefgbhUofyPe5Owq841xcJs34w71Gtxekz
CemeE7+Jxb7gNlay3/hkEmI6I9geOvvC36u5JT7UezlLLmPrxQVf4DqWyDcV
NAl0iPTb6A8+oPrNZfFz1CQ4ptrt1eZ4Q8bfMy+vv5+E1/SG7rG1j0HMjheh
/TAJtYHbYeovHkN5+5HV0txJWDqmPhqs8xja0/dM+T9Pgv07cmHysCf8vdJ/
nvhtEngHNTL+7nnA7Rfhv8I6JiE1M9z8p6k7YI4sMzX8mQTLp2LXzzm6Qjf6
MvTa30kQNuP7r0/VFeIchQ92/JuEiHWEa+K4K3D+vk0/zDAFilVed2hTXIAz
pPEvhW0KolHG1F47Z2DfTVk9LjgF382rD3iedoTOXNlH74Sn4PUnGkrk8EOI
MemknBWZgm9nZA5rJDyEI18PkC6KT0F5zYmyeNaHwPbIdUFDnvqOUY7v8qFz
ANaFq6Pu2lPU8yRtwpDZHloTJm/vXJ+C7FnttcG2+/BK7cnQM/0p+LNw8eli
7H1gySzqD785BbdVyDcKj98HZvPjXemWU5AuKsr3n6wdMPUsN7a4TwFzWWA+
3XNbYPj+5rNg6hRI3xL3bPO0hmFlNc2Jt1Ngr7DSceiqNXyuXJpMeTcF9wwT
zjVwWcPtr1hOzg9TcHO//0JhmRUUf5rwoCmZAs/DHNdc/liCRaqg4ljzFLzc
maa9oWYOMnyt3cm/p4DB94/esxUzOJTs8dCobQoM9uwLg9LNoPR1Y2pL9xQc
8GEM5Ni/AywR9/99G5uCmM8JRbSNt6HCJ78hcW0Knn1Di4K8TSBqy9D8xuYU
hHfff3tL2gTueu5tHN6ZgoIAw2OzS8ZU/a6fC6G+I1fpkaRztsZwz54S7n5o
Gs6wjfCfvnMLOI0v6emfmgZdFv898wdG8FCmauiQ9jQYEydE/u3qQ21nX0HF
9WnA/Xe0Zua3Phx1Wva/rz8NkQm8Ejop+vA9W/hs400qJz6JzFLUB8yxGLcA
q2lItxIfj6PTg6odW5Ytz2mISr1Y16ylA+yJ/uPZ3tNgtMr8cWFLG+5JpxQb
PZmGwDXhS4RsbTjysMO4JGAazG0i7MMYtOHuqMJ7p4hp6H2l0PSn5RqwfGfD
zmZMg9eByr7hQA2wunOe/XXWNDTx129xK2tA2ZbqzJWcaQgoOVeG2VIHSymf
8PT8aYhX5LbWcFGHL+9m+m5/nYZ5DYTlrv1VuBNc4dzVMg2nSt+y9D9RhaLT
PVcC2qdBJiJpBq6owgGUxCXZNU31qWzNdUZV+LxxpupV/zRYDQjN6CaoAP39
SEbNqWnAk1n++1ZxBfKv2WTUbE4DqvnIpvs4DmTEBBDYodb3XcGPbRSghm1y
5PvuNLxhLGl0CATo7DE/VkczA3kBY10r7Qism5tG/WCegadWAlf+eGABcdP3
+3lyBsYF8eZMREVoNjrCd01gBm5fOPEwJk0R9OXby38JUvl7iBFeXxFs9rTX
fovMgEHF19J/3xQg9IWGQ5v0DMz/AI+EhMvQmYKYdKvPQMn5uaxiVzkwffp3
48a1GYhyr6zVk5SDacvq1z3aM6DDU5iUTpaFdSHFjl79GTizuPX0uoss8H6W
VR+4PQNzSrr6Jd4yYPNDTGbUeQbqL8cPi+dJAzGb2GX2aAYueOR3n3SXBo+w
PJcx9xl4c33P4YOyNIReF8kf954Bm4GPj326LkLBgOCZqeczUHTncOIW7UXY
IPKxzyfOwBMlUYL8HwmIT1toTv1vBh7d+q5OTpCAS3ql/oapM8DKX7XRIy0B
j0quU2rfUXnGhfm0qziQvAPa3xTMwK6x2mWr7Qswd2D+lUH9DKS9TmxpUD4P
weUlakyNMxDcPnl8nSACgg/892qaZ6BzfNVLIFkErFt5HMXaZmBSy5nj4dY5
GIvT1mYcnIHkM26vHevOQt+p4kMoaQaSioON+gOEwKPraZ378gxoLEXdzVIW
AkyQlo/o2gwk+Oxmq+0IgsH8DD5pewZinhgq/PEQhLYC7p9u9LOg9F7q7LLn
GWhU8HshwjsLZpb53kdST4MtUROZOD4Ln34PsbHZngb6tKObCSdnwftgxn1U
7DRcofl8j15oFkJ0ulN1Ak4B2jSlNi4xC/LkUwo9YyegzFCDPl5tFvYdIsJ4
+/ggTLsihF9jFoZ+ZYg88ucDM9XzTNnXZoHigpn4KcoHdJdYDn/VnQXc2K6X
UzAv6HJ2cA+azIJ0LO9VUOUBfOctUX6nWWho7DhctXQUqn42F7x3mYW8T00f
+rKPQlTtZUlxN+p3rLoTR7PlUZAp4pNBvGbBLXJpVqifCwKjx7FWgbMQdPrF
QEQrBvh07QzeJ8yCiURBGtc4B5CuDvSIJc9CuJvV08gsDqjFat4qS5kF62Oy
vJUPOMBOXPROU/oscF8/EXx2mx2+sJJt8bmzoJrCeuXoCXbQafH0FquZBWHZ
uK8aLIfh1I/5P6W1s5Cccr9vLo8VViuNn2J/zEK3vPTGZ21W+C9P4bnuz1nA
Z+rkVsawwHz43wjXbur8Uet9HRFm8NcMSS+dn4WBhGM/Ul4yQreFvZkUYRYs
/B5coMUygpCnNm8BcRbsi+zTjJcPwu93HK+zlmfhEn9B/y/Tg8C1m/Yi7s8s
0O99LvSRPwAfP311cmWbA/+8efn24/Tw58d/okvsczCwsCtEM0oH14f9Fu5j
5mCE7yH3n1Q6WD2oam3JMwd8qu6LygJ0oGzVYaR7Zg40Qy1mvkvTQicnXklM
bg4av4ssllH2kTPnW7Y/XJ6DOBtpI/bQfcQTCssEleYgINH5cvmpfYTP0UPy
OG4OhFNbMSNGfxHbRhpBZq05+I1cGuZo30W2vXiZ8eZz8PbIfWbMzjaiFbXX
dNdqDqoC3z56mrWNpL2fCJqwmQN65U63Xd1tRKUr+2///TmY+u14Wzh3C3kl
Kr3S+GgO7v68rD/4YBMRGNMazAqZg2sNmWUYvnXkZb3S55thc3D8CFnTqn0N
Wf0g9oIxYg4mc6ZHK4LWkHo3NpmHMXOgePfW5YCVVcSWqTta+s0cKCTPmB0a
WkE+XjLVqCuaA1PXO4b38ygIO6/WSfcvc1CKjzN2vkhBfPYVN4S+zsG7+2fp
RSrJiNYv/qywqjnwDGuIT+0kIUSLyX29pjlAH2arUdiXEImX97+Oj8xB1AmP
7KRhPJLoYhIZMz4HkkJvtFV88cg/o2u2KlPUeltoVXSO45HOUxc4c+bnoEBk
z/uh9QLyqIzs5LQyB03K3rHGf+eQ0klP4b2D8/C34DOG13UG4W+y2/t0aB56
Vk9r5wjOICH5xj2WrPNgrOwSojs4jdx6rBD4g2Melh7crZxUm0a2WP6OvuSf
h2L6GHyW6BSiKB8czys9Dzd+bU5gtMeRfhteuTSZeQiNcDSRGx5D3KMKB07L
z0OFcHvzrMMYUjA3yCeiPA8xAnGiXTGjyMl48Xdy6vNgV5KXb04eRuhW+j8Z
3p6HO7UbTmeWBpC3/I56A2bzoG6UfuBH7ACipEm7cttyHjxTGkWzLw8gHukX
ZGxs5wH9E+554mU/Mn89oNLVeR5mLhavPFTqQ1ryzjdHPp8HRWvmDzy93Yh9
f409R8g8MKEdilsR3QgDnRFzQug8SCz9PDes1o0gps+up76ahy1jb9P0b11I
EWNPT17iPGie5n34q7ATibf1m2zOm4cd+9BL78LbEKkYjufan+ZhwG84f4y7
DWmryhHs+DwPsYwCdjXZrchBTJddf+k86DMonLj1swXxrhMmzdbMw7+H2Veu
nv6NmJ3s2KHtmYf8FkebaO5mhI3Xrayqbx6umb3a/vOlCanDHH3kOTgP0oJm
zms3mpCzh+7g8WPzgEf6Q90TGhHK2nx/B34ebKTEmznEGpBMcnhcOHEeUoqU
S9X6fiBGBDFdVfI8XKT/Mjbg/wOpGHdr/Lo2D4w+i8RDQ/XI81/7X9L25yHx
fdIW25s6RKbhnYsx7QI4Wa9slurWIQs1ahc4GBagQ/Wk2mv6OkSn9GVm8KEF
2BRVOjTvWoscTeeOfci1AGV42onfJTXIRw8JZwXRBfgRebGIrboSue3SdX5N
bAE82zfj1dUrkcMOHnMFkgvg6hZNa9/9DXGzrDQ7LbsALK/jq64tVyBKWura
jLgFaKcrj6y5Uo6Q1QgH61QWIO1cVoHX8FckA17V+15dAJU/S9lTHl8RBtlu
BbLWArxcfiz6qbAMaT9lIdJ3cwFsK7HjzrKlSAAf7WyUyQLwG/yh2xn+glw6
+j5d884CLOyYXaN9/gVJZl7krraixi+pe+vRW4LYbHgeyHq4AGqHirjUXxYj
G78jp10DF8AKn7Xw4UEhMsrSZ78XtAAZixWcdvhPSL0OPyX0BTUfGSJB9MEn
JKY9b/dtxALIjO/m5roWIKLdzVxtCQuQWfSBWJCYh7BjjrwxSV6Au9ySsR1C
eciW4S2B2ZQFcG6Ms6gpzUUa+mbFd9MXIEf1mMT80EfEYohW43zeAuDwLrZZ
lz8ganzX2koLqPqOf8px7s1BLtyJMcR9XoD7xa7S3Y9ykO3Rk1bGpQsQpPVq
5lpxNhI3qeQTUrMAG+fi5W+qvEeaFjzzp7oXwOPl2ZK1D++QAhH0olPfAvi6
VBjH336HvH7AULE9sAD/eV+87sn2DrEixjUcGVuAtXSS96xPBvKH/HkMu7AA
gZvX9BfQt8ik5NbdX4QFEP+bxSoo9xZpdkUWjZYWwI6LBUkoSkPiV1s3H64s
AKNTifGf/FREcpNwJGV3Ae7cGi4erkpBuOUvJgrvL8DjMN0LY2opyJ6XN38x
DR7MVvIWejr+Q37vHDz/8wAehtI2c/2JyYjtX0GVzSN4cNF+67F/OQlJZrDw
uCGEhy7+2pZ7Z+OR/bvHZLvO4uG8/0fJI22vEdsfnRt65/HwQbOzT8LzNSL1
XNXrugQeVC1OWVb+ikN+/hPx1byMBy/tp7m2QbGIhOW0YrMiHnr7r6cLysYi
8TVvdq9i8SBTqdovho9BrJ6yPVVVwQN7IGcl840YZOvPmj+ig4f3eJxbm30U
Ynb7Ew7VxQM/l6TiyEQkUv/NjlbZAA/7EVw2UqaRSJT30HOFW3gQ1br77uWN
V8jZzZoQGSs8LHzZPX/I8iVyayU8QtQDDwzVG7ozAy+Qan1VndzHeHDXCWC1
dnmBnCnaYxXxwcOLfifPLKYXCNnZJUr4GR7wEsw5t3AhSMiSUezpMDxs09s/
qfgRhCxqs91If4mHhJ6PY6/tgxD9/GbOk5F4cIpf8NxlC0L4HRTjj8fh4d1g
3vJtq+dI6cKpJO5UPAQi3ol5XIEIn8aQccJbPPyZqxtVbQxAAnLieLje4UGr
pFxB0SsA0bl3IIUjBw9FQ09D9Gv8kdnpxVTWIjxo1z4KG/V7imDGyzLpGvBA
UmduV3P0QaJYnz4tb8JDd3bQfe5Fb4RZSc3E8RceHOnKMXcdvBG65O7D/e14
0Bl5+kDCzQtZNaB45w7hgXd5JtEtzRNxDvhqaDFK1XvhS2eLuCeyWPhUAjOB
Bw+HPQeNWg9kioV11m+Wqmfoz1u+RHeks1FET59C7WfJ6ONuUzdEZ51y/sAq
HljZ/U2k/zxCfp4pZ6hcx0N6luwru9RHyHf/q5WCf6jx3bx0L8+7IoUKNsJb
DAQ4urpxmPOEC/Lq05vdND4C/FdVwKFyywFhGrXpv3GCAIrNLPiI3w+QYGbR
YsbTBFCPVr/6+soD5Mn9CrtHwgS4YBDplS9vjzgI9HWpSRFg/LtVapyKHTKv
l1qwI00Av4f38K4t9xCbZ3dDC2UJUO0ldzz71j3EdGRFmUeJAGZ31KP23G0R
zQS2j8SrBJAYCUnm/WWDNPzoe56hSYBIQr1z7l0bBLeaan5TmwAhbTbVSjQ2
iLzeBcx3fQKUZqvtG4I19f7QfBZ3hwAHWmDV/qMlcuBpoJHCIwL4jy3dupp5
GyldWdr57k6Aa0o0J5/w3kZs7UzS1R8TQPizIqvea1OkQU9y0fAJARrDrn7O
iDJBgs+M+TuHEKCC826NV+YtRCZJU3gjlAA9WZ5jSuK3kFmW0t9PXhLg+MbW
rn7lTURt4+XR8GgCFH11l98cNkIYfl7Oz/qPAI/22eCVrCFSqvxeXzSVAK0p
f5uxXTcQ2+Ijm0VvCaDNvXNyyvkG0pAyj6vJIoArSTFy5LMBEuQU3z/4iQAf
L5uEJ2roI3SYZVq2egLsSki/3YnURkpC73yIbyBACmtz/7ddLcRmr0nneDOV
/0Y/v+yohdTPpSWJtBLgp0mBVM3Na8jzCm1x1X4CmFx+XqZ5TQORFi/v/jVI
gLy/xfc+tqoj0+/OeOuPEOCkA2eD9Q11RCVip958kgCsV3WU1e5dRWgtPph4
LxKggOE/lrocVaSom3N/f4kA7ZY9xaXKqoiVxrOsEAoBordddwp6VZBaqZvk
uHUCLNifnxplVkEC6OmDP+1T/bTtcMMqGofQ5Fp8nuZchPj7N45HjCshTUsD
zulHF6EpcLPo+WUl5JWUgYQZzyKIBJxs/pmoiByrUP3Ud2IR/PRd3W6YKyAS
zSL5P0UWwcT6IuUURh5ZZ850CLmwCKyGR+UPhsshlbrHRVUkFkEnyP9wOa0c
crX/cG7VpUUounKnTWJPBjGbW80pRBahVS8o+A/nJer73dHu4ZVF+BVxTuJV
ujSCd5wTFlFbhC19l6APEtKI+/rA+3fXFiGavCV61+gi8pIezYw3WoSwk8Xt
13wkEX0NORsDY2q+7rVM7t8kEO6IzwJstxeBPyqj9eRfcSSTMzMj1HIRaKxr
4idixZBvAqFvfR0W4U7d/eFO4nnk2T0aC3mnRfh9mGSgoXMeUcv1ObHusgjf
1P9mYj+LIJ1SjqlOntT8y9S7/QLPIXgwSLEKWIR+bnMyr64wUhj02/RE0CKk
i4bzHP0lhHg0q/IOhyyCNzctW5WGEPJPVy7ZMGIRYgu0ep5fF0S4LY4nqicu
QrDptfgkHwFk9F38Tfr/FkHPJ77fj1kAyZw7fLT2zSLwPFm4s5R+GhF3oolX
eLcIo4li6mfTTyFqfnOxYgWLcNzSkmiWzI8w11oYEAoXIbLtbkvo9HGkk36Q
Pad4ES5/vPfJWPI4cifid/Sp8kU4oPWDrqiPF3FL+RzJWb8IHAHxInRGx5Dy
vZTQ+oZFED3f/GWqlhvZs3gR6Na8CFIzM7+eSnIjoYLmnt2ti6D8bxhp4D6K
pBYwm8cNUPU/wBZ+gRWDTLFt3lIZXgT0skdffAwncvbRlP7q6CII+qXGX+Lh
RIpkK9RuTC+C47Ju/JIEB9JYc0+Mk7QIr99f+Uyzy4YwCxicracsQsL5B4Tl
C2yIfpDyabdVqh+3Zn4HPTiMDGtguLq3qH71wLjwT7Mg5M7a3Vg6InxQd9Tr
wxxCLl0q2LhygAgLmJ+lPfZMiHdCEmWFkQg22nMH978zIvS3nWcMDhNhk//f
4dMBBxGemeMtHDxEOB93G/6cY0DMrzI21vERYTHwMSk5gR7J/LBa8+gEETgu
Pv77Hyc9Iub4q6TrDBHCzMUfFdLQIVc2HqfEihNh3/knM4GZBnlhbBN/RYoI
FO2NjfXz/7Ct365HrUgTQaTcs9rl6j721jOh5waXieAopTZ17sUe1oGx+wGH
KhEMhc9Fnrmyg/38AL1bd5UIFpymfrRPtrHrLR/NH2lS5+sbnhir2cL6x/gb
dF0ngp1UYnbUlU1sPK+4QqwJEWh+rIvGPV/DDj3huXTlDhFmk0VvPBpbxZ4c
pxdfMSfCVWPlIyxKq9iPmcOnDe4SoWr2x2go0woWvRDGxOFMhEsyZjtHHElY
ud5jbXGuVH0URCIe6Sxhi/w+xHK5E+HK8PVtcV0iNrOtiY/HmwiqolEyLA8J
2DCXA+KnnhPh6eH+iN8f57C0PAkrGcFEaNrHlgb8mMX61gp9PRNKhLVwvDHH
2gzWiUMNzr4iwkW1tnA3tWnsjS/PDcQTifDnwXf5aqZxbMsdTu7PyURYOX1q
Y9h/FKvGkDks9YYIo3d4bg4fG8HK36y7K5NBhE8jTAbYhQEs/9Y/T6U8IojL
jL2w9OvGLig+TblWQ9XjHVY+t7oWazXDatlSSwTjVxLrwyFV2OGIVMHrP4jA
WP/GcORnObZ1tKpA/ycR1BtqLsWP5mNLnv2pMe4mAnPHF16FmZeoX73XzL15
IhwtCRi9dboe3XBg/LiAJ8LAQS3Oz44/UGdMkuMDIhHqYxWedrc1ota2Xzcc
l4kg4MeRdxH5haof3GD0+EMEen99x8OGnSiHlpvYc7YlkEg6w3JZcQDNqDvC
osixBDlfJFY45AZRKYVPhBXMEgzGHvBR2htEdUXwOda8S8Ckp8TM1TiMvjxo
IXBFaAnytdTb3xPHUIYf17hpFJeAvuqyXuGlaXRTSYDm2b0lqDjkuHtfHI+G
fKkZl7VfgrW3bqvv/fEo1wUzlOSwBIkKZlcj9vHo+8ydN9lOS+BeKKs3qkxA
L/El+Zq7LoHkwkXGNR8C6rrNuqH8ZAlmx6tYzk0tooTSbcJuzBI8Lsx2T8ki
oaPinT0+1dR8P4iS4jRW0HQix1P670swfzX7dKDlCmqTa3g2sm4JxLdO3jF7
vYKevZ/Qwd2wBKHnQ03DPqygBKEB74ymJVAIN8goI66gBdM8Z0R/LYEYz3hY
8P4K6ppxu+VLyxIEORbTMxxfRTePj59o7lyCUvQHbdmNVZSDeek+19wS5Poo
WxwwW0N7m8U53i4sQe8dtt5XvmtocohL5bnFJVDGOq1sVK6hd1SL7xYvLQFP
vRdcrF1DT9KusSpRlmDXb/lm4ugaOl0j87VhZQnS3nXLEXbW0Gy/x5a661T9
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
f/8o0BW/g55ykEb+B+4YdWk=
          "]]}, Annotation[#, "Charting`Private`Tag$12122#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wHIB7Im
          "]]}, Annotation[#, "Charting`Private`Tag$12122#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{2.348513672930138, -1.8666771354629574`}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -1.5432809709508382`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -1.5432809709508382`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -1.5432809709508382`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -1.5432809709508382`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{2.348513672930138, -1.8666771354629574`}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -1.5432809709508382`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -1.5432809709508382`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -1.5432809709508382`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -1.5432809709508382`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {
                1.1800000000000002`, -1.5432809709508382`}], 
               
               Offset[{21., -6.499999999999996}, {
                1.1800000000000002`, -1.5432809709508382`}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1800000000000002`, -1.5432809709508382`}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1800000000000002`, -1.5432809709508382`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"0\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {
              1.1800000000000002`, -1.5432809709508382`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -2.388229210122714*^-11}], 
               
               Offset[{1.5974084412786234`, -2.5393476075031156`}, {
                1.12, -2.388229210122714*^-11}], 
               Offset[{0, 0}, {1.1800000000000002`, -3.086562433537992}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -3.086562433537992}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -3.086562433537992}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -3.086562433537992}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -2.388229210122714*^-11}], 
               
               Offset[{1.5974084412786234`, -2.5393476075031156`}, {
                1.12, -2.388229210122714*^-11}], 
               Offset[{0, 0}, {1.1800000000000002`, -3.086562433537992}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -3.086562433537992}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -3.086562433537992}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -3.086562433537992}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {
                1.1800000000000002`, -3.086562433537992}], 
               
               Offset[{21., -6.499999999999996}, {
                1.1800000000000002`, -3.086562433537992}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1800000000000002`, -3.086562433537992}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1800000000000002`, -3.086562433537992}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"1\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {
              1.1800000000000002`, -3.086562433537992}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 4.804121306849166*^-11}], 
               
               Offset[{2.3485136719409203`, 1.8666771367075174`}, {1.12, 
                4.804121306849166*^-11}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.5432809726739034`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.5432809726739034`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5432809726739034`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5432809726739034`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 4.804121306849166*^-11}], 
               
               Offset[{2.3485136719409203`, 1.8666771367075174`}, {1.12, 
                4.804121306849166*^-11}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.5432809726739034`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.5432809726739034`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5432809726739034`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5432809726739034`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {1.1800000000000002`, 
                1.5432809726739034`}], 
               
               Offset[{21., -6.499999999999996}, {1.1800000000000002`, 
                1.5432809726739034`}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1800000000000002`, 1.5432809726739034`}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1800000000000002`, 1.5432809726739034`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"2\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {1.1800000000000002`, 
              1.5432809726739034`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 4.287470794713352*^-9}], 
               
               Offset[{1.5974084422206551`, 2.5393476069105194`}, {1.12, 
                4.287470794713352*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 3.0865624352610586`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                3.0865624352610586`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                3.0865624352610586`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                3.0865624352610586`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 4.287470794713352*^-9}], 
               
               Offset[{1.5974084422206551`, 2.5393476069105194`}, {1.12, 
                4.287470794713352*^-9}], 
               Offset[{0, 0}, {1.1800000000000002`, 3.0865624352610586`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                3.0865624352610586`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                3.0865624352610586`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                3.0865624352610586`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {1.1800000000000002`, 
                3.0865624352610586`}], 
               
               Offset[{21., -6.499999999999996}, {1.1800000000000002`, 
                3.0865624352610586`}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1800000000000002`, 3.0865624352610586`}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1800000000000002`, 3.0865624352610586`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"3\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {1.1800000000000002`, 
              3.0865624352610586`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.7898561121996317`*^-21}], 
               
               Offset[{3., 1.331140753180192*^-9}, {1.12, 
                1.7898561121996317`*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 8.615325381157206*^-10}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                8.615325381157206*^-10}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                8.615325381157206*^-10}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                8.615325381157206*^-10}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.7898561121996317`*^-21}], 
               
               Offset[{3., 1.331140753180192*^-9}, {1.12, 
                1.7898561121996317`*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 8.615325381157206*^-10}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                8.615325381157206*^-10}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                8.615325381157206*^-10}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                8.615325381157206*^-10}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                8.615325381157206*^-10}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                8.615325381157206*^-10}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                8.615325381157206*^-10}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                8.615325381157206*^-10}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              8.615325381157206*^-10}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 99.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {-10., 10.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"1\"", "\"2\"", "\"3\"", "\"NDSolve\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9107133194386225`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"3ff4c991-6374-44d4-9095-61a16d21c1ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"num007050979", "[", "3", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "\[Rule]", "start"}], ",", 
           RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
           RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
           RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",",
            " ", 
           RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
           RowBox[{"VG", "->", "genVar"}], ",", "  ", 
           RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", 
       " ", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"f", "[", 
           RowBox[{"y", ",", " ", "time"}], "]"}], "}"}], " ", "/.", " ", 
         "soln"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"31475815-0c71-4adc-bdf7-04197de969c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0.000038562581275769815`", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9107138138397703`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"d570b474-9f39-45b4-91e6-40089c74d054"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<path-integrals-simulations.m\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HaywardScenario2", "[", "0", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{"Kimura", "[", 
      RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"k", " ", "\[LessEqual]", "3"}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HaywardScenario2", "[", "k", "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.910713818020844*^9, 3.910713818313281*^9}, {
  3.91071392199144*^9, 3.9107139457361794`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"b2979860-cfac-4d72-8280-45a6f3ba77ae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"HaywardScenario2", "[", "k", "]"}], "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "\[Rule]", "start"}], ",", 
           RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
           RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",",
            " ", 
           RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
           RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
           RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
           RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", " ", "3"}], "}"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "3"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "3"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.910713273061432*^9, 3.910713302206106*^9}, {
  3.9107134053088818`*^9, 3.9107134054525685`*^9}, {3.910713441367966*^9, 
  3.910713442848057*^9}, {3.910713976330006*^9, 3.9107139852515855`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"aeb01383-87bb-4547-85db-b116b3988cb4"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 61, 9, 28768283037514811285, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910716941964962*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"f9452fa4-ff4a-413a-a3fe-7becc87d11be"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 61, 10, 28768283037514811285, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910716942077786*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"177a6111-1037-49fb-9040-03ff7da72623"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwsV3c8Vu/7J1KZTxQZH2VUEkqRVOdcjxGyssrKyEhkZVNG9lZ2IjOVvfdj
i0LZe4/HwzNEUdL4Pr/X63f+Oa/3Oee+7vt6v9/Xdd9HwMJJx/oADQ1NCD0N
zf/dVa0Jg63rd9DAKtVs1m0y0CvwOM9zS8Hz9oeeNbYUuJyZml7JrQgN0Uy6
LxcpoNY/XpHBrQfKCw69R4Y2Qd/qBy6e2wr+cLevVE19hdkLYQox3G4Q+fdH
l1X7NmQdvx0ayR0MsQ4bJqUZu/DscOXZCO5EkGUt4bIx/guiyi/CK5wTwax+
zYWU8ReGQpzWp7sToXVZf8h04S8I04kVSngkwbnvP30OWf+DD3/yJEaGksFs
m/P++ys0WOZvydIno19CG//Zzwk3aLGpsz4K1X9fwyJ++K3ZDTqsHJ9h3tyd
TBgTsWtpNKbDbhjJHDxcnAklr4b3Dzyhw/KTvC2LxbPA7eq1HO16OqyT7ZXT
NDNZUOBVRLcmRY9ltyp99+ZqDkzcPn+59OxBrIFhdunXrTx4ekemsnWPAbs5
rceYw/MGOm65/T127BA21PSwta7CG/jexOd1W+IQttLSiacm8Q24kInSHhaH
sKyOSMgTmXxQ5hepCPl4CNsVOGnE4PsWrKckDobEH8ZeKjrKwHe4AOLw6Ngi
KyP2o0SXef/FAsg4KLP99jQj1rzcq9HPsACMlxlEbt9gxMbUzDsvFhTADyus
GdaWEUtoLZ7O1ygEdgaliII2Ruzr0VvlkglF8DEG3xZkz4Rl+vfsnjJ/KegZ
pS2+eM+MTbXVNxVTKoXrzz/HrjUyY4VHxMyPOpbCOdPYp3yfmbHo+3HLaVwp
MCVZjwltM2Pr3ydX10qUQah6f3v+VRYsWZfUpPa5DIY/pXc5t7BgpY6MI+hS
GQQ0fber/MKC9Wlua764WwY3bB8/HplnwR46l9J6nL8crKXCPMv/sWAF/sp1
zjuUw7mJH3pjCCv2zruUXleWClBTEfrWUcmKTTcJVH8gUAF5Sa4+hDZW7BK7
Q7+BdAU8aopc2fjCinXylf+CmFTApgqPZgSRFRuhQx46VFwBN9OKD4oJsGFx
v+WnXqlXQpWsbiZDKBuWvkLcONa8Eqrd6gYPxbNhVW1OzAS4VQI2Ad+Oz2DD
jg+SZ63TK6EsX2MFqWbDbuWnLl4gVULKbX4V7SU27GltCqEjqgo4+A9aHOLF
YHn8la/ZZFfBAVt8hfkpDBZTnBXFWFsF8teCfr45jcH+Oqwrob1UBW6Kts7f
L2CwA621rnNXq+G2zYugbAUMtouC6XqmWQ1xkmHrRioYbAOfHedpq2pYr7d6
QKOBwb7x4qt/FFcNY/WF9Wx3MVifi8/+/lythh+krxZYGwzWyXTqdvp+Nfh9
0eA1foTBWkVfzoajNcDtJspt4YTB3iasKoTeqIETLjI00p4YrHCWagRHQg0M
ZIfIbYZgsNyfc6dq3tVASN6TDfsIDJb19+/zRs01YOuDcoxHY7B7+qWfs9Zr
YO5sLv3jBAz2M9uxYxLYWvjGXqDblInBdiAO1oN3auHszxf41zkYbN2jDzVu
j2rh1qMXqOMbDDa328uwMbkWQpdTLIcLMNjUncEC06JacJ9eUbAtxmBjhc7/
pm2vha9xI2ykUgzWy3/2tQq5Fty25uLrqjBYh+IrX4kH6mCO9NT0QC0GazEd
Jxd3og7sojpQ2XoMVkNGfmVUoQ5U/X7aOOIwWMHN/HOWaXWg8OFH3I9ODJbr
P5onDGXU8dIdlwo/YLDMaoZ977vq4Mg5AwX1Hgz2Rz6T09evdSBsxj97txeD
JY1YtSYw1MPqoJJfax8Gu3Sg+agMXz3QuJ3BcX3GYPtMnat8lesBJ+lyM24A
g22P/nhQwKQe+OJW35YOYrC1DYL6nS71EE76bwo3hMEWEZ68swmvB7rTW4T6
YQw2h3N0j/F1PdzQv7OYO4LBpihKqJVU1sNotPnAk1EMNtolLF37Yz0U3Ffp
kBvDYAOzFsjf5+rBpvB+9w4Ve36WhdTv9SArcGojZZyql0T16sfDDcAlF3H6
5AQGmxdzMXqfrwE+6nOtJlPxNXLhJXHJBiDN0Ej9o+JB9bOTpjcboLgy/j+D
SQz2YVGO/3PDBmgmXSjOpuK/TPxn2h0aICpcmzJNxYmPXvZ9e9YA8bKhJIYp
DPZ87zHX08kNcOCsS6UgFbeLPufWL2gA2dLPmheo2CCSqTW8uQFiRO0+iVEx
ZT30QcNQA1wrOXuJl4pDbh1gIeEbwP/L3xe/qPH53vtW/rffAM8f7O98ouKK
w3uGt9kaAdFB7KKpWOWhG80zoUYQuf7zF0rF892b+RUyjZCo71q1RM3H4+wj
jRW1RmC4cCTXk4qZw/Dfjps3grLp2eE/VH5y8PfTlN0a4YmxprY7FcsqzWK9
wxvB4NpR0TkqnwNvDNYK0hshzvm43VUqfnBwJGamrBFU0tj5g6l6JHR+moLJ
RnBOvnD8K1U/UWGlZ4/JjSCnweWCoeLWoLazubRNkKMa5iFI1ZssX+fGINoE
IT7qBbxUfwTnXOa9ijZBy/Otbwe+UPvFgdI2W50mqMY2c8/0Y7DKbW9Y+32a
YL/n1AUrqv/mTglU/41tgkw0TJbjEwbrFpBufDG3CQqO19ypovo1GxLeJfQ2
QddAzV5fFwZ7NZP1dtc8df6ZoXRFqt8//43Y2f3WBNIiauEl7RjsPi5A3ogP
B2U1QU6GLRhs/H+/CVEXceCdSBOWRq0XEV/POJwiDuY8dfg/N2Kwd244zpxy
wIHxxyB6ljoMtrTB2GMNh4O1CcNrRGp9KvGM83EP4aA37950G7V+Z7x1OlTx
OMjcSneIKsRgj8jewpSwNgPl/ePMH/kYrGXtlQI3s2ZQenn6s3QGtR6rjs7R
0raAI6eDyN0wDPZe9L7eCmcLjFvzrgkGU/WyWu39INYCukfirRcDMFix4/X1
UQYtoBFgQLnsg8HKe5gnHS9rAW3slVuS9hjslXT9/MQLrfDuWt+x19R+aRje
txhyrRVsfjrPxN3CYJ+6yf3nebMVQgfM09xuYrBt6ucTDY1bQWx6XZkLwWDV
//x9xh/WCqur4fEd5zHY+6b5Ju/mWuHq7hZ8ZKDqp8r78uV6K5zp+lH5jRaD
zb/yfCTyeyv4HJ+sFf7FhiWx+qg5MLYBLvn6BUM8G9ajRUP20pU2WNI4PFuM
Y8NGn9o51hTTBr+juJTOPWTD1iwp9H250Q7Zb8q2AopZsWMqz7ZilNtBXayD
zy6bFbtb0syprtMOW9N4Y7kkVqzME9n7PTbtQJZeKmp4yoqt47iw2xrfDqoL
2tUzqqzYekWeUxWEdjhzb+2/f8ss2Kb8r66JiR1gedVuopWRBdtul8FrSOqE
qui6VwKXmLA7ZxC2Yodu2Kz8zc/z6BD2wF4hhvf0JyhUd1zhvUSHvfLPvEa3
pA/sP/wYyl7+C33BUp8/iH6B0+41g+Y3f8I1tt4DL6S/QErIaF+a6E949/K+
jDH2C4ReibfAs/2EoJLYrM07X8D34b3AiqkfcG2C4HLi2RfY07EMP/n4B7w7
n8FlN/4FvG6Wtutm74L8emAZg/wArI8Lx+qx7cDJ58S995QBUHxzy7VYcBua
7/u/r/g2AMp5W3m7LNtgepnDsPHnANySsGfS2tuC9LFrdX0HBmF0qNPt8sAW
nPgv0mOTcxC+lN140+S3BewFIt+kYBDUJmXix+e+wsFOa1JL3CC4ap7QVb67
ST1X7L3qSRwEuzTO0MWLm6BoE6M2+HIQsvSaC18xbUIgY3XBUu4gqBrLVTu1
UeCvFr3twbpBoK9Xpk+WoMDP2ZxV1YVBuGeEvTTKSgbij/m50YtDMHba58Uy
fgNqbOLaVa8MwSVXQ7bM9g0IGEfzW64Pgc178xG/1xvAWZvh8F5pCAqYfP4U
3N0AeQ/j30/vDcE5n7NKVT3rkPZ9jFs4fAiu+Ogd9KskgMpWv57L/BB8y8Y+
fpaLB477vlfXVobgAOVdzbsgPMwNiPHd2xiCmMI61W1LPLiVRS3f3BmCjlUd
LpIwHjKdbrlwMw3DVP0BFa93q7BL7oxrvTIMFakFM0vVK5C30fiJNXYYiDe5
n/isL4Fjym0hu4RhEJVy8lT5vAQyistPulKHQYJD/aJ05RJ8ymAUf5o7DF/9
0Ag73yXY0jKMW68bhteLdGXyHEuA1u7qdi4Pw3BtmFmK4iJMBknOesuOALs9
aSvMZx5yLnZJj6IjsOAfeCREbR7sZw1iLyqOwH2/iYAGvnmgkQmANc0REA7Y
Xu1vmYMzG5+z9axGoJK3nPDi8By4adk/uBA3ApDBkGqbNwOs/73dXFkZgdUe
3ifn6acAezdodnl9BDDsnQopc5PgEmfWu0QZAYac3/YX6idhjPbE24Wf1Pm2
TPRWHCfhNT7cdIZ5FCyCxDPuzUyARJld/7DUKLR/ibr5sGUcNBQkCtuDRyGr
SdlrJ28U/J4yvmyLGAXua+b876nPy6rxoa2xo/D+dmhLsNUoHBPJtGhOHYWY
V3Q2lcKjMMOM4WkoGgXCQTGvjfwRsB/bCi8fGYU0YwPB7IphiLatfpAlPAaz
m2eZUPwgbGCLw5lEx2DrorOtUc8gKJ94U+BxYQxaQ+/VZhUMwoHuRIr6tTHg
Nv3kVuA0CN7Cbh57t8fgW8/PxuL9AXgwfylU58kY/AgMXtDgHQC5O2Vv6IfG
gE775JPkzT54Lfau22l8DJaZ75S+wfXBb7qs9amZMViMeXHhb1Qf1FXEiZev
jcFb8nJvxLk+kMA4VZv8GYNo8fagAw97ga9XvKtGZBwG3478u7T9EXaxhSsP
/cehJh1htZDthqY84ivP4HFIa5unbWHvhsDDYrqhEePQ0WokqUv6AKwDRW25
CeMwf+uo+qmsD3DGrOT13NtxiGDxrlBi/AB3fcsN9AbGQXCmcziW0AnV9bV9
IDABp3aKTtn2toPPfz+DNM9MQA6tsMfVwnbAPrt63eT8BCQ9lU+SiWqHPpX6
9z7SEyD/mqzeqdYOK+MNodW3JuAos7fL0S9tcGwXhz3vMgH7aSfe3KL2fbdL
nVWcHRNAD1EN1teb4YHUqawXPRPwUvdeSRltMxhceRrF/HkC3I1FZ4x7cHD9
mpTFgckJaG2Mnhy4i4MD8nlsFMoEaD5VPnXWqwnitIPtungmYeBGccyxvgYo
cFY85eYyCcIREv/Cq2sh3SWLadNzEhjE+wTxobUQ4/Z719Z3EugmlegSDWrB
2auq3yx8EsR/+Igu/K4BmQDhJ2qvJ2Gh381b/FYNdMbRjwl+moRnMpbTV79W
wXxJZ9SgwBT41ZfgMe4VMECmJ106OwXHaX34jbUqoFXspnqi2BSUpE0x4M9X
QFZBF7O+zBRkkK7bNi2Xg0X+h5gZ9Slw7p5ivH+3HPAZPXFrnlPwd3Dvs4xy
GZCj+xL+9FPfW0VZyr8vgrle5u+mw1NQ2ehu8NqxCD4zaui1TkzBYH7fNWup
IigJ7z8WtDwFD/8MSUi2FYJz8Oekw3tTwOFgNFg6XwDfnwykcAhPQ9Cf5ccN
F97Dvt3Iq3M+00DrovSqlSsf9K6YvJDwn4awyObLFqQ3UESLD70cPA1jV/yO
arW9AdPUH4+R2Gmg4Xr9mdX+DbR18aho51DHz17/xNSVB2Gn7n/3+jQN+zUr
5tnBucAxRlbv4ZmB+V2NWAWZbLDP9pDvPzkDV5LDfqUcy4ZO+38yQ8Iz4F63
ff38dhZ40B0VmpGYAa3E1xXMJVkweVFqb1N+BiYL8+vKRLIgM8rnDdejGbC8
Jsalo/Mazssd+vugcQY8/xntv3mXBmUFhWcnWmdgTutk60/7NJA6pqV968MM
vMxJRjol0+DGWmre+cEZCPX0YWpvegmaMaJqX/EzUDClOSo3kQoukxqp3uyz
4BS0IZwhnAK78tttG1yzwNK5iuP+mgxPipKJxv/Nwqb+afRAUzIE+8+jqMgs
4ObPrXPcSYbk049XD6Cz8FtVZko4OgnqHydeiradBQOe+/cNWBIBnb5674/j
LHTld7hcm0+AdsXZEEe3WXC3DG19Wp4An7jOTGr5z0J9w5T6Sf0EmMHV+h9P
moVb304zfMyPBxrG6b7XrbMQPOBswK3/ApRzBGzKuebgofUojT0lBqRSWc98
4JuDkCpNbquiGDgVu78yJTAHZ32fTi7YxcAv71ELerE5sOdbf221Hg3F2hGm
+tg5qAwkFD8hRQEH7dadPw/nAPfiz/xJxkig+TF7jN1xDprJAS67XyKARPo0
fMZ1DlzdPwQpJEfAh4k8bS3fOcjpQLoR4QjwLjPQyH0xBybtrK9e3QyHebNW
xVsNczCtYryllBEKfXeK6Uyp+0pN2S1LIbtQqFNLa3fpnAOstZWPrUwoxMu4
YdM/z8F5U6mYC8MhcJNN5Mbm0hzwLwjeiGULgcLmuMtJTPMwyaJosJUWBJ7/
mQku3psHeRHDeJsfAWChdfHuzP15YBYKh6mBANAMoo0cfzAPojNiFzIKAuDM
eu5Wv/M8/KlN9ztqFgAjVYTWhuB5AIcv5sop/nBR3cUssWgeZKId/s5b+wKf
v0JCXPk89Jhe4rgp6AuHKo51R9bMw6dZ9k9X55/CHFetxLPWedhpi1vpNnoK
0cv7fxxG5mFbszPNxuAJEHxC0pV/z8MV10e8H+29YePu+YfZNAugY5p4KkPS
G8y/chw4SbcAhWYqbzd3vUBNaFWa5/ACiGldeMQc5AWCEWEZGPYFiGrxDWLM
9oQBvT77P6cXQMr+x4DaN3cQI91hGtdYgMdaKVYfN1ygTk+9JVJrAcxXnI6u
1LuAAk7eFdVdgCTbWkHXCBcwir0w/cZgAco1R8M3zrlAxMUjhW6WCzDWmfdA
yPkx4N2aVNm9FyDt66g7EeMMLrMVf7ueLEDmnnJSdb8T/Ln5vsLbbwEQn8Z7
Zj5OcIwrmWcxaAH03+fosYw5gkK900Zp7ALUcRzG5CY7QNYfwUiNvAWQPDFb
Lnf9EYg94EZp3y7AQ3ns1OFvdlD7mW276v0CrI5tTQQU2sHnzN+GfKUL8Gqi
XtqX3w7+yI2dI9YvwI+Fw//5MtuCUWjEx/AvC+BE0RrROmQDHGxfD3f+WoCU
8E6lZEdLGMJFht36swCcU07dsoglxNufZvjybwEecCWoazNbAvsnI7op+kV4
ycsUNFFoAewhXX82WRfBS6d4XuzrfcDsp23zCi2CyDd6+C/GHAbeSz/OPr0I
X0fCHjy3MIfnBgObZ0QW4Y1K3dzDq+bAVnOQLCm+CEZtSE70JzNgfey8pixD
/d5YhVMmzBSY127OuKotQiY5VowidA/6khaM9jQWITf2PHftlDFEKz6Z9NNa
hNKXJZkX442BKadsLOLOIpyauvHgAp0xMJrwDmaaLUJ8LOGbJNkQDg9/7ep1
XQSrLwyBBxf0gb7lValQ+iIYHFHx0JDRg6kbiirzrxfBZtLswtffulDaQFpI
y14EuUzjRxc6dMGoBmFnf7sIzCGVdr7aulBePO9GU7EI4oHXZCTcdcA0Xeja
bPciGF57LJw7rgVSPH1DqZ8WofdsTqZ5vhYcSXV7pNe/CH9aslny3LWgKqEr
vXdoEc5Gc0XWHtcCpiibf/Wzi5DSKi0/VasJdd6FncnfFkFP9hfm1181iP2h
a6Kzuwj/NB3OMRSpgaX77x2WvUXgU9PZ3zVUo/KncTbk7yLo11xv8a1TBeuH
mxGuR5YgV+FBwqL/LWDXv3xb6+QS1B330Ra4ogyEkek1JsElWNgyx7h9VQKc
TnBAt/ASfPkPmxFRqAQPNUfLUdEluJXNpbkjpATNNz2PiUsvgf01GuWX/92E
R1KNk0fUliBU5PO26yUFaB0YLarTWILpkBwXgT15OO7w1d9GawkWcw/5O7bK
Q8ub02e67iyBf8GTqQUteeDgeu4SYL4Ed/9p1PzykoPGPSumH+5L4GXCe9fs
IwAm2X/ujdcS5IFk03VbAOtLaeV6T5aAYeWR1VlGALZHX/QrApbgl8NlD4Hb
KFjOyOY5RFH/A46ZrOmt3gCmFlZkJWsJTKun6Z2x18Dc+BwmIXcJLoytCdF9
lYXqHwrLcvlLMPqIS+1pliyYXfSOyCxcArf1/65w0ctCZfbyqFHNEhyZXjAq
GZUB4+A6x8HeJbCdncfbZUlD2alhuQDqf8ZNDrk4DRNpOIgjH7swuATcWJUv
2zzSULoj2Bg9tgTuZfLbT1OlgM4m5pDK4hIkO9+f1U+/DIW3LLKad5egzcmY
4NUlCVJiAijsLQFryHei/gtJaGZdmG7ZX4Ifr7lWukwkYWDYhKuNZhnGwlUP
3/p5Eb6bGMZ2MC7DA9oTUl2XLwLqovW0h38ZCOfv3B0IFYduPTaeWwLL4Gog
6HrmgjhoyXyu/Si0DN9lw5icJ8TA4rfat08iy/BO/QxhWFwMwkKV7fovLcPq
pQcCr5ZFYSANNRhSWobF+kK7U94iYOj7Z0fn1jLYEhISEi+IwJJZU8Kw2jLE
zfRkjePPwnfha19GtJZhuAr53aZ/FrhLpZXGjZYhzblmhix/Biw6xKRmHJfB
JejZ4+UbwkB8Qxy893gZDpfYWuv+EwK38AKnWddlOOB6ss2lXQjCNEQK57yW
Ib3kP9c6VSEoGhcSXAxchqv/BpglLAVhh8iDwScvw5btvrV8xSlIzFjrTn+5
DLQHLk2E+ZyCy7er/HXTl6EPOrOeKJyCxxUam63ZyxB+9sGrvpKTQPYK+Pyq
aBmSTliNCLHyw+pBfLR2+zJMaV75I3+YF4JrKxQPdy3Disan+uEiHhCy9f/d
3L0MKQMCAaE6PHC/74S9WP8yPBW4NaSYzQ2z8WpqhyaW4Ql/5n8f1U7A6Mny
IzjyMuwrVz6THDoOboO+ba5fl+HgIKnLKuw4cASpeot+W4ZX0j654chx0MYv
E1J+LsO/UyabyUXHoL+Is8eFbgWOzDSOByRxQJfs01AR7hWoM0iZvPb8KFgR
VdB53hXIksOrXtE9CnQZx3eT+FdgbfJbx0/OoyBHU2pNJ7wCvUeNzT5mYQD3
YVFxTmIFLCPPapf7sEG1rjJdouIKhBe0ZPlfZIZwtboQPuUV0LpbeaVvmAnu
KZw7/ObWCsytrJ+V8WKCA5eZWGo0VyAkRQ2MOxlBk/0L54TBCphs8PIG2x4B
wsBdUT6HFcg4ffNuxQoDNPZ0F+U5rUDwzY3DbqkMENt69YK4ywq8TJkxEdZg
AKkyHinUcwWuXBA7qlR/EJ7FzSHmz1ZA8YTbWYV0euDRfKCdl7QCIpU8L9Yi
DwD55viwWOoKJC1ZXrqnfgBaEZW71Wkr8H1e+kIK6wF4IC5q/CFzBYaF/Dj0
k2ihkpliRXi/Arhsm48thTSg3uvuJda8Akb183Vvvv9BT3bgf1W1rkCfOCKj
GfsH3W7Q90U6VsA56EM6nPuDviyQDdTsoeYbbFpLtviN4iP+RDkPrQD9Nzkc
y+ov1F8lJLMKvwLniU06lwV+okOmD+9dXF+BbYW0m3pffqDC7mrcRcQVkGtV
zPXx+4F+yj6akPt1BQjRE+6987vosf2M0PhfKzAb9E1AtGQHfVdc4+DMugoM
SYeSjT2/ob86XoqSMKvAx/1X3FPqG6ox9XTNhmOVuo8zSDza3ka3GRTum51Y
BZZcjUtDztvoDfMvepqCqyBokWpx13MLHWAnXBe7sgqPYrVjEZ1NVPBc78+3
V6nxVX4xXluloO5QUi10fRWO0xUuvfKmoDz2bhd4satgo6cS7ZdPRq26aIQY
VVfhXMxEnyqGhP705GYkmKxC+ZJ6qO+pdVQ19vcHS/NVEAmXdVzrJqAZefNB
8xarEFju/NLTmYDKD775M2azCvft6zx/d66h0aKXtroer8KSN035lSd4VGBW
dSI3ZBUc7gyFBHCvoJHt10vvhK+Cz69/6fm9y+j2W7HQQ1GrEPyQd4vgt4y2
u7BKPXq+Cgc4secqCUuo1eGhuEuvViFjLc5qt2cRfXfZULmtbBUoKyrPFV3m
UQy3Kr9r5Sp0fIt42Lg7h3r/vbYjXLMKu7+uLO8/nUNVP/LlhjeuwlS5/N/W
2FmUaLrw9/aHVZBkT+2t+DCNSkTa1MxNr0JiZLfn+aAJNNnJIOb53Cos29jG
+gpMoP/0blnJL67Cta+pQ2jbODpw8jx7Pn4VboTUdv6iH0cfV1McHLZWYf6p
X/rn9FF0Km1e8eT3VXiqI3YSozSKygcM8A7ursLDocJTaV9HUHa1io9Sv1fB
1DLewf3WCFq14H76NwMeJjCbwv1HhlG+Dw9+Fx/Bw/nkMIGxpiE0pFB/2IwZ
D+3c+jj6x0PoXQ/ZZx1H8fDDhNWxfWYQ/cH0ZyaSDw+5XfgjWm0D6DWZ4ETu
S3jgEjI81OHRj45ZcF/JkMLD2cs6t7YP9qOusSXjp2TwYAU+hvXJfWjR6gSP
yA08eBSo8O019aL8ieLZV5Tw8GmJRayI9xN6YGusWNcID3WSyZJP/+tGX/PZ
3x6/hwcnu47O9o4P6HUV2i0jMzwMZteK6zz6gLplnpeysMIDw0XYlG3uQvEa
AQ3OjnjoUf9XX+XSifYWnOuOCcRDfMPL4lb2dvThWPPDoyF4qM/Xo8/qbUPp
D+gxJoXhQctnpykspA1FDf000qPxwKSd/uv+71a07NDwcEEyHjx9cHPNxBY0
0erpQncBHgTOlpwXEm1CLz4/GqhWjAdsqQIFV9+I9jfmC30ppfIhyOJCo9aI
MnAMPhirwkPKmbda1i4NqFfbafJKMx4yvSMZ2Ubq0Hv8X/Zoh/Egjp22F5yr
Rlm5XaobR/HgHDl6TM6vGm3jOP7YfQIPyxXVXOST1eiZI8YEwiweWOzuT43Y
VKGb3/BjXwh42CN0d8KRSjSHEhEfQcRD71c6ZeHqClRvXUxTgYIHS4Gu4w8t
KtC6OZeumm942Mm3XPnRWo4GfvxbmfEXD6JfTsbkx5ShUp3ZTvq0a4BzEXXa
VihD15oVzx+lX4OdNwtn1ndLUfWqyJzgI2tgZ06owMyUoMczOV88OrYG22q0
NybaitB3bhKOsqJrkCZQ+DHp2zvUyGnw3DexNWD8t+zREvgOZbFzWy26sAac
d5qyejneoS5mDfdOSa/BuO7yDYfrb9Hrqkpqh7Br8M5g3+Nw1huUorjO0Ca/
Bv9EQ395Im/QLIhu97m5BjdqOR8+n8lD6aWHZCmqa5Ce1UDJOpmHfj5pKjJ6
hzq/gkNMZF0OGsBDuxJrsAYOVmGLERY56OXjeZkqxtT8fMRW/rLkoKmMG5xN
5tR8skuFL9lmoxY77gdzH61B1rj9ab6LWejOp5gl52fU7y9KqDnuvkJnmEYf
/g5ag6S3nzFPn75C29X5NsNC1+AZkwvfM/pX6PPPBfuvo9ag21ZrWpsnDRUd
6j7Wn7QG5t6jn+BeKorhYHtlkLoGLWbl0Ve2UtAfuncFVtLWgOZ2yc/1sBS0
c3RFfD9zDe56s6EODcmo6SSt8rmCNWDV/Tp87nISqshzq7+qaA3w0em7mqOJ
6Hnj57rY0jV4qZpw6Y9XIvpzht9cv2oNjj8Ox852JqDxC9e9Q5rXgFfqeOdB
x3j0w5p74eLQGlya3jzBT/scLRLBSTqMroHXaR43I5c4NMGWvu7n+BpMy1m3
zqzEoubE+E622TUg8fbUrw3EoL8opbPI2hr4Sn7MP9oZhS5c+GH5cX0NhN6F
OqgpRaHdzuiGHmkNuLWUcrI+RaKJ2327j7bWwMWgqPjJZAR6YXedLW1/DZqt
YySPsIWjnDKSyaf/roFtD2u2dHYY+tvTi6+chgC6DCfdb0iHoZ/2GM71HCSA
DLufXpNFKGr1R0h+l40AKYMdBdVDwWgqvambjjABvObfsYTQBKJ/LbmkB88Q
4Ff/r+7CkmeoVcfAzu1zBNDWoYRfMn2GXgxU8NSQIMBboZlgtbYAtOefiI/K
VQIsMh2MFJDwRyXMlq51XyOArcuNXwqZfmhi86v9mwgBvi9Wvxpk90PNfVl9
FeQJ0OTeOMdI64v++PXNH1UnwHka5oT5nz7oPaNiLE6TAA/m/G11nvqg7fUP
aG9oEyCmXhWPp/VBY70mA2XvEoB4UI9Hg8MbPbPbHCJlTgAav6dyZzU90btb
EVGibgRI7BEfx/znhjZpKai/9yAA5yqvYG2zKypY9ptZxJsAHG8mmmgtXFGK
o1PsaT8CXO3de2BR7IKGkPRenAongLik8Necu4/RDTVWncxIAnxFZSbf0T9G
tQq72fljCPAxMHOft8oZ5bO7lsgbTwCTJl7KVS5ntGrtZApnOgE2lt41qU47
oDzKk/pJrwmAOc+Q/0fdAQ3Ijz9xLJsAv7+9rrjYZo+qWx9MO5pPAIGKbtO9
skfoytJGOnMZAbBtB+jGimxRjrnqnAOdBAhplvLTYXmAxjL7+tZ+IACtqYF/
+EtrlPG6ooH9RwK4Pig2OyRijR5IHWIZ+0yAK9i3AzFqVui29qbX+0kC7L0X
eDlcaIE6BtToms5Q82NvwFBULNCNEl8JjnkCtB/0O76/dh9dZGJeebpCgFeV
d480nr+PDnSJ3NbaJMBD9uWLay/MUPXvm+cObhPgsbnjjvS6KdojWEvf8J0A
jKtrrP0KpmiL/80GoV8EYI68yTdwwAQtkbU4/YN+He4Fpq2J5Ruh0cWv9jN4
1qF61ll/3P0uenjGYkznv3XIyB/jSd+/gwYzipYfOrUO7mrNtuNBd9AnNnUP
Hp9eh3eV20nBr/RQO4HRQcWL6xDur3/KAq+D4m+nF+1dWoe3e/Oa6X46qIWf
ZViJ9Dp06160WzqhgxpOb904cX0dEBzboTJdbVQlifUd8eY6iMbi3MrbbqOd
HaOBWSrrsN0kdavh6G0Uu51uckdtHXSVixluWmuiMrfPc7RorcMWxlL3AJcG
df9Q8Ys3XoeHvaT+1hxV9KDvMz3Zx+vwI9H1Pk5DCa3aIu21uK6DUvRCBOvE
TdTqgUGmksc6TJ944FFodRPtvH1hQ/cJNZ69UkptsCIaLDjr7xiyDh0GW4lR
c/KoVIrK6Z2wdUjOTjTk8ZFHV5iqPj2JXIeKOx1xtVzyqOJO5PGIuHUgdhT+
emEgh9L3XC3MfbkOAe+74mgWAa26kaclmr4OqTmRA8PSgFqVs+2WvabmzzRw
mSsWRTvT8Njm3HW4k2DC+UwFQYMcEscmitdh5eRin+vyNfQAx1da1vZ1oOH8
1JmedwWtCDN+m9i5DmfF9unWRa6gFr8/qPN2r0MKX4eXU6k02r6akSLStw7S
970OcXVKoYF1auIKY+ug4LTFU3rkMnpJvHbo48Q6zJXP65VlXUKXsgW9tKbX
QWhM3zlH9hIqH7XXbrKwDvZV/yz4XSRRWtO3Bl4b67Dud/kqz+4FtGyI/e9f
0jp4ulCE1RUvoObKfrkhm1T+hEOvVSRJoK0X71Div6/D5UExaycFcTSAji64
+O86YB5jStp7RFGa96alS+wbcO2OhJ/jwzPoB9K4Y+bxDQgzGXlxcO40Gn1R
W+LeiQ2IYuusm9E/jXLVKRSP/rcBdCeOiCTqCqMS3SKFPSIbYOw76jPiIIh+
Z8yxCzm/Ac83HRtpfwugDZq8ovIS1PEKWivnogXQm2Ms7xsvb8BcXfdp26pT
6L3V7fwSdAN8fXVf5MnzU8/79g8eyW3Aj5gHu2vB/6EE+9XTIoob4OCnv2Tb
y4e6fh/Py761ASJmmsQRK140kg6Xk6i3AY5FrnVrPSdQLeUrFtr6G+Aspepu
K3YC5YwqFWA12oADxQIOl+K50Bz2nKwwsw0YSiqu/mXLidYLhL32sdsAj9KV
717yx1A/axpTGQfq+m0aohXbOFDF997/fXfaAPPE6NNX5TjQgYv26Q7uG4C9
HaonosGOUjt/mnkAdf0C3/Q+hWDQkqBPhv8FbcA+rTZKz4NB3boVuKdCNoDG
za1G1JoN/ad5JVU3agM6Xx7piRpmQTlNeZOVkjeg77gHx8kVRnQmO/EO3csN
WGq2cqu7yIjmrLIcb321AZjKvVz9iCOouANNomz2Bqj6HZx6ef0wqvh09YVY
0QZs+X26d3rkIMrYaqq9XrIBe6uhe/OKB9EBuglMfvkGnP8SkGpXQ48aR32K
O1m7AXbbC9FGeXSoS1ppDHv7BlCUPkicKaRFa3+nhbV3UvEhiXZxWVr0t2no
M5fuDcDnXzAV66ZBw4RM3If6NoDbM9WrfOwfkl7EaBI/vgEdZynXUwt/I4us
u3flpzbgKBuxK2pjHznzeFFre2YDVv8RH/hK7iNl0nWKOksbYDYle3m4Zw/p
arYWYydvgAKLZ22R5A+EUUD7TPvmBphOZfIfjN9FtIJunHLZ3oDTLXfrzh/Y
RaaUOY4N/diAV0Guf3lGvyOUgdb9FweI8IIiGr3UsI1cvly0I3eQCFrn3Y5N
X9tGvJJSNrcOEeG4h5puQf0WQmfkuKzNQgSWyoU53/6vyIll3t6jJ4igadsl
ck+YgpjcPNTVxkME0nq87YwiGcl5u938+D8irH25gyzHkxAx+48Vg4JEMHma
cDXz+wYit+OR9kKcCO9zJc24BQhIqL5FotxFIuB/1qR/81lD+uo1YrcuEcEi
ei3n7SQeuesnHKh9lQjX7/gfLk5fRewODdkeVSDCSIDvarH2MlJqi7Nsu0kE
OWNJy+u9S8j33ncmj1WIYC8t9txfcwnxf+6vPahBBKE/11wPKywindt2as+0
iOCh2u52b2gBYbxz96akLhFKtpzra28vIInc4rIvDIhQoPGwr7d/Dpl8cuKy
nDERaB2tuSt+zSL8c3TiWybU+B10QSSRWeRdztQpbUsiwMzsi7I30wjufPjh
o45EEP8boJ+ZN4FcGeHqj3cmwrGSNqvBL+NI2dO3L465EiFr6XVel/Q4cu60
zN1kdyLsLdtb36seQ3L6P/Cc8CJCELOsiwXfGMLncXf+pQ8RhP1Ir3m9R5Ek
fnwury8ROHEfB0sPjSKs3e4PM/yJEK3zjllBbgQJdzoofjKQCA45kRPfOocR
2hNJW1nBRPCc489QuDSM+LQK1wiGEcHq3C3L3q4hxOGoIpyJJkJa1tPX73sH
EZ3KQG3xZCLQn5+1Hm7+gvQas3OWphKBplLiXPrcZ0SRPmfq4isiPNz5dvcd
8hlpLpLMrMggwiv+qCo1735E5k6bpVQWEe7yOxymyPQhZX+0RGpyiFD7M9jK
Mq4XEc1fIMm8IcLg77y7h399Qvh+/HO/XkAE1Zl/iRejPyLJmXHXcEVEwFYN
i+um9SBsKif/oaVEkNphFO8idCPhX0s6WsuJQEdn2WVQ0I0ceImGy1cRIeyo
CPfpyQ/I2jXftFvNRJic7P01EduJmC8zm/W2EqGC6e/YWc8OZCoqXUijg+qv
qOHNUd0ORFdKjPC5iwgX3swwyEW3I30zjUVaPUS4tBpvjCe1IUohao+HPhHh
jv+gq0pHG9IiPi2t10+EWEfE/fGJNuTqmN2v0S9EMJiq32V+0YpU+P1q1h8i
Qh6JxvmnYCty/mxk0OQIEa5qfKWJ921B8r5wqxiPE0F2JLayY7sZ4fd6zzw7
SeW3U8W2bB6HpJySHTSdIUIUzZyLVW8TgvnYk7QwR4SdFg1a8WNNSORjAyOL
RSIcKZ0qy/BvQOh4CPwry0SQoH8S8oy5EXna7rlsjSdC5Ib01/tq9ciO3aF3
awQisJeN/dXMrUccOVLsbYlUflhUvKPP1SGExjOSRDIR8n3Ij+6O1yL3rWp2
7L8S4R8ahB+xqkWmmJUaKNtEqPYzz7wcVoPoVY/6Oe9Q9Vja+sZ+uRrpN7FW
2P5BhCQVQwW+9SpEiWHnkNsvIhCvxq6wJ1YhrSXBfTu/ifDmOzfDCZ1KRFb/
2AvPf0SY0HNutc6oRCr+5d7ZoyWBodKfFBbZCkTs3WWeJ/Qk0H/8gRH7tQJ5
o9Ux95uBBEl+zz/pVZcj/Hs6uX5HSCB+w99OyaQcSc1esqFhJsGNQ44nsZNl
yFFVF7FAVhL1vKccuidShmS1sTFdO0qCUE681lX5EuSibPH6FgcJWs1NxQPZ
S5CWMtWe95wkONa/oJ1lWoxoihDy73OTgKM2w9CrthCZzQwJ4eYjgVNufT0h
rwix5xKyGuQnQUlyMI5/tQDZj22VjxAgQfg150+7798ikQymAnLCJPBvMFoh
9r9HuP32//08Q4KIhXjd9oZ85N1O6lzZORIckp1SJzm/Q646XME9FCPBJ8WD
U0b33iLdK8OvTl0ggZzd+kRbyxvk7r3HPhOSJCA5doW0Zr5B8MOshs+lSOA5
MvT6eXg24q5WJKMiQwJjOXabmblchL7jFifNNRKc6TV40pafiyRcW/tee4PK
r9FxP5OLOYhgRfCwE5DALe4Q5cb1HKT8nGDFWXkSOG950E5vZCPY7Jbn84ok
aCH4e7i7ZiJfTpg4pSiT4Cdnv8Vh3mzE9PkvjduqJKCM/O0w13+NUA6lih3S
IMG86jXtpJTXiK+/NFPLbRLQmKnwsnW/Qph/DK176JAAGe2/2vc8HUl3dO6R
uEMCtRC/oZfPk5DzeJa3eH0SHOfEE3yxSUiDSWHIayMSfHfnvxKRlI7cGlWx
umtCAj+fJ0IXb6UjE+p4eVZzEph+rnHosU1BbDqDBD5YkOBVPIVd0ikB2b0u
QONnTfXLR6J57dkUJKSyeU76IQmEj2RObHolI8fO38OR7UjwIaty9avRCyQv
Z+/VGwcSvP0yFsEOCchlnhQfE2cS0LlbKM6zJyPtL6QMj7uSIEDXzLouJR7R
OTIk0+9OAvWhecIGw3NkMcCJM8SLBOmlJ7ruaMYjzj+Zd248IcEf+VQa4fp4
5J9TwfB3XxLY9NAWMXSFILFryhVFAVR+FBjtZNzCkf/MVp9bBZFgLkSXdNvm
OVI0FujEF0qCzluDvQNXopDrmqc0R8JJkJmuksBkF4186sKJRUeRwDWDHvm+
GocYIcZMirFUv23L+op9jELWq36u7z8nQYVbJ2pvEoJ4iSX3VCaQQDNoeMOT
Kxw5nHf57aNkEsgSzrL6zz5HUngHQ4RekkDQ8UZazEA0cibB0Wr6FQkUOfi/
d8mHI9WMzAoJr0lgJM74nm8xFlEMfC+glk2Cfryx1nWDIGR4T4mGLo8EMzMl
mUfaIxGLxytzDfkkSBt8ZXZ4KBLZIjzDubwngYBP3Q7NkyAkwPxkumgRCRr0
TvqMfQpAMBNNPkslJIjRsazzow1EMm8bGaaVU/211hP3/qc7ItH9Q0anigSW
yzekV3F2SDOaxMlYSwIWCQv5rtBARKPm0k5bPVU/FjFMpVggMiM+MOzdRAI7
Olv50z89kEziUV+6FhKYVV22PTXzDLF4r3smpo0Ep+MOb86UuCFnbJK+cHaS
YNI3nvOP0DNkXXjcK+sDVZ//v4qWTgiKfqTy1cYl63/wIeKcZdRb2UvtBz8F
PSVm3ZDLpuluyGcSXGeVPThMCEZ2eef+6x6g1qvYMbl2Ol+kYfJkt9YwCegL
OnIu0Fgjvin3nadGScB/PChJcc0bwd7J5baaIMFhqQbm+h1vhJ5jtZ08RYLt
DhNDLt4gpHvgjL3nLAke5qddamD3QSJjHx6nXSDBVW8tRZEST0RTvaA5cokE
X5MNB1ZyXZGjjCSbY6skcMxRfZjR44mMdIsffb1Ggt9MR1iXRz2R1BCnhrMb
JJBnSjeZ6NTFGSuUW5aTSHB053xouIc1wk/7jfn6JnU+fNTbwEB3ZKlZqqZz
i6rngczLdHhX5M1TDzPN7yS4TwnF2vAFIQ+v1R2e2CVBoMHQiRVtC0Ts5175
/T2q30+QeOCIN7JZfd2YuE8C9FHH13h2PaTC1Zfe/S8Joqq9n2c5uyAeki3F
f2nIwHTyw7xoiD4iu0mjH05HBqIdzDPcDkV+F8nTsDOQoTsuTSBBKBDXahf8
/tVhMrD8VJE+uK6FCxL5oHOaiQwDdkfWw/57hCjhD/0uYSGDLa6XoZTsgRzJ
u/XmKoYM+9MNYbouz5C++1Ga7exkOD9Pl3ruXATy/GT/D7XjZIjRZOLikH6K
6M6yZo9ykWHqxoPyxpsPEM5XWqpmPGQod7N/UnPEAJkyiP9G4CPDXa6/RC//
QCSDcyTd5SQZ0oUd87LLrRDzkeNKvwXIgL2gkFH20QcRjtffDBEmwwKdV0pr
jx5u7fbLVLazZGiclz+ZZfwYKWCZlnt5jgz85DyzvXk3xLGXjygoRgYdjzc1
5sreiGSEaWKRBBlWgqQMxt8GId+VspArkmSY2DXVzbRwQerol/Atl8lwYhAz
4KcRhDxpF3p+6woZQn1yJHeqAhA0wFp2+CoZDjfgJ98qBiMH0LdL966TIW5/
9OGigyvStU+IwiNkaPBWzhmcccKF14tKO2PJsCVjE7/A5omoe9rP7cmTwfv4
g6hTsoEIm3RJWNBNMoxpcP49GHgDN7S9eZFFhQz/Db8Ko7wQQ5LLJKeSVcmA
Oa65Y+Ptjhg6ugad0iCDh6GT3FS5OsInVi1WcJsM/673xn2efoIsrO+OXtah
6q1a41wk443kvr3qj9MjQ+/kcCl/mSPywNpHRFmfDNbmd6LOZHggokJNgwOG
ZHimbLz6XiMER17442N0jwzk11eZ3NhNcGWvQXjFlAz0cz7ixYIOyDefb4fu
3ydDoC46Z18ViFzRf0uctSTDUCp/nkKaIeJ12fiL0QMyiE8EZfaIuCGNbGyV
4w/JwK5wOuBJmDPyl9ierPeIDCq0TNXlNjo4bI+Hz6ADGfCbzrN5BY+QoDxR
U01nMuTc/j09wOOJfAiYk+t1ofprS+zvWlkoctgk/rSKOxmu3qup3/xtiFOT
VTrS5UmG2Cn2tUqdUCT2+C+SnA8ZdGNp0i50myMDW8UDzU/JwMtiHZlV4oJw
fL5fdd2fDNf3xXRuHrfH3S04nlr3jAyXwx+rb9Fr4lJDPz6RDqaup4a2tFzH
Dpm28DWrCCWDZ+HkQK5UDI4fJBUuRJDBMFA3x4wQiZjzrp4piiLD3/5uzriX
D5HcH6mM52LJ8DDb8ogTvzMOP6xOefOcDCY7lanYtjBEpIxmSDCBDDLBL89V
491xj6KrqjOTyLDZ52mkGYHiSh4+fMmXSobRFXrP9g+RyFdFPt+XaWS4L/hI
ifUUtT8KDJhzZpDho7CdxRtmT8TjT5BiQia1HgKJ/+n3OeLqJmVEMDlk+JKl
XHBWLhi3X01kiskjw/DCnMeG9X0cGp+5eeQtGWjbSto0b4cgAY66w6HvqXy8
PD3vruiFdKgeqqUrIoMoj6xNk7YXjuFsY1pACZUfnpD4n5JmuFt0Tn5/yqjr
EbL/peSijIueF7TwqSTDrzXVb69tHyGfG8du/qgmQ0bWf+n9xQG4o6mR59zq
qO+bnng5ZVvj9NxQlq0GMnz9SRv9TS4ASdba/uqAI0MxqT0HKfLGTYrlj2y0
kOFByrGSA13WCN8RozqbdjLMp2fT3+uxRcxWWdJXOskAT/VJC33+SE5bm//9
bjIkt31eJZjHICsZ7pZzH8kw20Vf27xljJz1Oads3EeGvMM/nZZoDHB2d2dF
Jz5T4/OZ09CzqiBFl16w3hmk+te9oUWMVwXZZL25PThMBqWDS8zfT7oil4g/
RzXHyJDI9VUgvDAIce8uqu+doPZHge+7ntdCkLpc8wyVaTLY9+oscml5Ib/8
jz3rmiXD27TOX8MawTjkXo+V/AIZXpvluW0auOECrj5VaVkiA3LXpjTpXwSu
/dhFsRur1P4llcP/y0ALd3Brma1+jQxe0Tt8IQEhiEp/yjfpDTKkOrVLW6Ax
uMj3auMVJDJYqFQfFemMR/pD/jVc2KT6TznE9Fi6Hg5jUfm6aIuabwFvXcT5
EJwOahN47juVnwTDJ/wyIbgkHt4H+btkGJEsP+9F9kYmdj/fEtojw5nvFZOs
2c44nuFA8ax9MnQG+Dl1nTPBmZReOfrfXzJEmgo9uVmJRWqMfrIO0FDgNLnp
nf3lRzhWhgbmIDoKtGQwCZSIGiI25U8YrzBQICnD6dqxQS2k9R5yeP0wBfSW
w72kxcOQE4f/HUxnosBh5Wcy+WIeyOPKVrrbrBSQtA4VP7FpjvtkGkh74CgF
2mo6WFRPuOIEGRX/VXFQIEuzTDXbzQvnU33wjw0nBbTxS3ua4ybIsHn3Lx5u
CnTd1ReMXHmBiDFH/OznpYDA7rTfvq07LrhWdTeAnwLGh5otdyzdcDMWzN8v
C1CAOTFqzzHIHSfN+nkLL0SBdS2PlksMIbjY+rjNl2cowGeCjla6JuDwVtpk
9XMUaC6UYzz4KQCHYjiI/85TYM77CCarzwOX0jhCqJCgwDnRhOcx318gXx8k
460lKUCv98TLf8AdUWE3WDkhRYFQP+7t+7ahSBaOe6n3CgXSTu1HB6rbIXsP
p+f9ZKnxGsjz92rCcTrHMmYlb1CgxpVtYF0hAVfQYjq9glJgUVmPzprnGe7A
o1OTKXIUUPrGQpm9HI0Ycy6NqSpS+Rx4NFkn8Qypassd+aNEgXGn8tKXy2E4
ZgfrobJbFCjlGOkJfRuPszpxdsBSnQL2aTLEewNxCK6D0M95m6qP1bqY1pQq
jtOpoPejNgXUNy6VTfFnIo489h+f6lHgOd3SVUXvTNyHLvHuC/oUYPHoTB1Y
j0BOPt7sXDKkgPJVVcX3QemIF195e9I9Cvj0z/LcF32EG+h2aVUxo0BTe9rH
hUduOBFXqeb9+9T8i3WZuiUv4Z7x7zaWWFHg4ZfGnoQbl5Cpj7X1920oYDiW
I/j9txPukrt37TE7CiBw7FVRWwgSeep6dbc9Bbb5b2uxPkzHLff+rvBxogDX
pK6+UkkA7oZnc5m4CwW8lvcRfqYkJFEwoGTBjapHRpzjsssrHLlfrijBkwKW
7kLTHXk+iJI3XYGSDwVGLUSDran96LVw19u9pxT4KDBv/8I5FffjS+ibIn8K
bB0SXCDMpSNaT1RyzQIpEP8i0DWO7Snu3RnGbPYQqh55Ht+FWwMR2qHe111h
FNgMmL5nqR2KM/KNSfeKpED+JOXzdckQXIXI7bTzMRQgPhO5eOTfC4RpBJM6
F0cBqU8vwumbXyBW/kNJL+IpMPBCMXiEKQZpEk1MUEyiQLKfqHEvYwBybOzO
ix8pVNxkeGfYKBfn8IwrriCNApzZ/u8LawJwH8Qmo00yKLA0dII8V/sU4Z9I
i8RkUeD1SLj2dcZcnEfQvfCOHApw55hE0dxwRb5I8Id6vKHyb+u1e4qYjhOZ
mg86944CLhI3W13JCUhASPazmQIKtLpVBtKfysOxeB5SvV9MgdiYa6dvlTzH
pT10YMeXUsDjmbhnPE0m7ozR8JRdBZV/ozsV9yKTcZVqsrmbVRTgiH5/0337
JQ6LZD5yq6VA8Lk/FHXTDKRP4qDUXj21ftVaykfXwxDDU49++zZR/Xb0H/P4
syQc/uhg54EWChhU1s3kQwTiQicTE9ZGgZ20/MlX/2u4zONizv84XuInMezq
ELpVapbFJCEf75RKyVEaRehWomN1OLPKNTGadMx0Tue0u+mStvvjqEQIqWiH
ssYiq+ZdvxCV2u+f778+r/fr8Xq+Pp/P4ktk8lMmd1Yzk+deTvtoWRbhv5ui
c6WF8XNBv+DagTii2R34Tr1VDo+jo2C3TSaVtD4qTX/A8CbWNv3im0E59SuP
6D6SA3ukp1A//CC5UZwOBU8Y/bGfkyoUI+hmsYKyaYcc3Dz6brFVxbRbsP9J
SRfTd3Ft+hWYT/1iHqZyuuVwUpXbMmVRBBk6zPGuljL+nfKIreGfoaf8Uk3X
9TA8xSTMlUlSqcrOiaFbr+RgEPD2RPkR5r9o71dnK5MDdzKL1bwtghiuuR97
/x85/CiUvFbyWEnK2cs3b3svh2fuXTM3tFykREuo2vmByY9MKhrWyKX3WeMv
3PvlYN0zZLa3fh/ZOeld0CNn+BN1JU++yadvBu8e8hmSg7e7z29LFPNomGyp
+fthOfREXt3+/CSPjnckfT/4hdHLKQ1uC0gkcXe+3Rn8yvR7dp30nFsO1aj2
jI8cY+ZjWfvU7wlo/u93do5+l8PWEqmV7Y4isjz9J91fFRBuiHaBykgWbbh0
5b2SEoL6oT3KfrV86hA9UsabhnDXRF5/1ymJPAvZe5SljHBEJus3/ZdHfbya
rBJVECxvsMSqs5MIOpvOmMdCMG5dGHc+41dy0kbQnjEHobXZa49OYBqZYf45
TW8ugt6wLxHxmPeDsYePRA3B42Ou52GOiBpo3maz5yHo+q8YWzgQTstmLB4u
nY9wvNVGsCLnOFk3xq8300IosPONCHHPp/f6/3+mRgeh6nvoXMeGVMLtdXci
+ghN8UZqsuAzRPb4hlrjIgTfvfwutbhMEnrbsMfOGCFoMK1IPLWAjldclDww
QZjDHo9wGRRRXsFg8PafEB40ruaXjpYTdeHOVV1LEcZVflAMWXaN5l1omNi1
nJnNVBTnhAaSn48Z3O3lIOzgpjX1OAhIfRBP4GuOsKuvR7FpTEI37ZG79Vkg
rNFK2D5TLYZ0bnHVC16LsH3nsucufebEG+r6htYhbGIVWzXsuEDky/WuRQHj
F9F+GW6SQI8bnD82tgEhw7HPpW1WIZ2u1r/h9EaE/Rk+L5KOX6DJ01xUptkj
5ApvD85uvEz1RqqfxjkglN2sGt1xMJyU9GlnzHZCqFSXxrouzCC8rHNevVuZ
8+NGPLf97zT1cxkwKnVGsElVCmwaTiZW07kfo10R2FKLAuMFCVSroaF8ixtC
ejJk8QIk9GuYYZT2boRY3fRHAQWJtMOIbzmwh8lD+4StxkchLZUOK1BPhDq3
+0Mt4ihyUeDRwvdBKN26VXKr8TLZv7Hp0h5/BFbQnVU3M8qI9Te285JAhHYz
fanSNzHRKU3UGA9CuPSu3vfD8xjyzWf0xYNgRn/N7I76qBTSOc8nNyMMIXB+
tuojtUpS/rB1/8FwBHsZS3PWBmfKj1mxxDIKwYmn/HSKaSEJXJU2pHIMgaaE
Rt8U8MjGjwrV0hMILaqn1v7TEUt0cwJPFp1C8Fa1T+pukdBR1ycbjscgfGgX
m3k2nKbPZqye7niW2b8156wa+w9acSP74fwLCBxZeuZaURqJD5+e+CEO4cp6
Yq+RLSFBJqFutXyE+AoFI8eVycS255lWnABhVfos1j67EqKXuF7mnsjse2Lb
e9PZVXTcrvA3kxSEEH1Nr7boYtI9xgr+KmLyc6K8sYKbTirLIzn30hEWj+w+
8FhbTBP8e0ZEWQjgbbIrSCoiBxfY0oAchh+Xe+qaymnE7nFxrEU+wqnQtwMh
kQJicFZt0/RChOIvQu91KXl0YvVJ1vPfGZ65y3JsrSn5a+DN08KrCEkGJ0J9
F7rQyrzNqVGljJ7TnZHZcglJcLu+1+4awsv1P8yvcrxKDs1auEijEiGSbLH4
Wp1ANt2O7XtbhaCdm6ru5xpJDKP+LfmzFsEqyFwtU5pEJ9ku4ecaEEItbaYI
rdOo9FXtau5NBNdytxRhSQOpStafMGxEOBPdr1honE0SHeKaPjUjTBVdfM31
ySEhE4O85rsIwq6E+OplR6jjdfetyfcRHKT6Q35u6cQo8JaqXxvTX5fz7Adj
s6iCtslfZk8QhnWL6z0Wl5OX7QKxUgdCbW7KxEqdq7Tm/IhvRxfCXNs7wU9q
S0iypadpfjdCTdPE3pZPkTRssEV++AXCRk6V+PGWKrJZ8nOldS+T14+rBoVW
lLkfhcfmvmZ4d+K/NrYpolPmTKyXvUHwMlqqI4moJr1N/lMr3iE01wUtrfA/
QOuOtrXGfEBYpAlfiwLLiXCpucC5H6G3w+Fbe7+I/iLLdNVHhC9vvP3PjpZQ
J9HUBUNDCD9amBdxuNepidOhV7c+IUxry6w9qnWVTFXsLEgYYfpr4O9RHb8s
+veflkFeowiqY2aGhzrXkIag/GXLvyPwX3ay61xLiEh35ufJSQQT5R0B5mFX
6H+EiMKj
          "]]}, Annotation[#, "Charting`Private`Tag$16005#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
y/Q/m53FNg==
          "]]}, Annotation[#, "Charting`Private`Tag$16005#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwsV3c8le/7JzTMk6SMjzISMoukep7rhCQrq6yMREZWNmVkr1RWEtkqyd4c
WyqUvfc453CGKCKq7/m9Xr/zz3m9n3Pu676u9/t9Xff9CFq76tvuo6OjC2ek
o/u/bw1bYn/Lyk3094RGNvsGBRhVeN1meeRBZtXep9qBCucyU9MreFThSRWL
wct5Kmj2jpZn8BhCJItL96GBNTCy+YVL4LEBwbNtS5UT32FaJlLlCY8nHObf
7rRp24CsozciYnjCAHmxal6SsQWPD1acjuZJgsibxcfszP6CxLXnUeVuSdBN
T3QnZ/yFgXDXlcmuJNCRMh6wmPsLIgyS76W9k+Ef7PgfsP0HH//kSQ8NpEAm
77E7787TYVl/pCiciHsJw5qnvyZepsemTvurVP19DRoCQ28sLzNgr/Cb5M3c
zASSlWNzgxkDdtVUkengh0x4MDS4u+8hA1aA7Hf3g1QWJLlfzNGrY8C6Opw/
RTeVBbFVRQwEeUYsp03J2/wLOWCTcOZcyWkmrLFJdsn39TyYz1WsaNnZj12b
NGTO4c2HmVTPv1xcB7ARFgdtDVTy4SPrf743pA9gK+668lYn5UM5Slbwtj6A
ZXdBwh8qFoCju1h5+OcD2M6QcdP9AW/ARl6GKTzhIPZs0eH9/AcLIUkLRubZ
mbGfpTutemULwdZJcePNKWasVZlvQ6BJIRA0DojduMyMfVI96zZfWAgsX7GW
WAdmLLHlw2SB9ntQcleLLmxlxr4evl4ml1gEonSE1lAnFizLv8e3rwmUgMp4
2vzzd6zYVAcjC0m1Eljn+BZPaGDFigxJWh12KYE3M/GP+L+yYtF3o3cncSVw
9Ni9EeENVmzdu5SqGulSKOrvbSu4wIalGJAbNb+WgtytjE63Zjas/KFRBF0o
hQL1TceKb2xY/6bWJtmtUpDYevBgaJYNe0D8RctRgTKYa4v0KfvHhhX8e6Vj
1rkMWh22DUcQduzNty+6PdjKgXdO+Ed7BTs23TxE655gOVyU9vQntrJjFzid
e40VyuHjzdil1W/sWNcA5W+IeTmMLfLqRJPYsdH6lIEDH8rh6oViJklBDixu
T3nilVYFzEwbZO6P4MAylkuZxVtVQA5PXf+BBA6sht3xqWDPCli/QGjDZ3Bg
R/sp07bpFbCirbOEVHFg1wtS52XItPU7Aup6CxzYU3pUYntsJSDeTNYH+DBY
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
WLS7
          "]]}, Annotation[#, "Charting`Private`Tag$16005#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
0bM36/5yTlIt9L2RfX6Dgp/QDb6ZLKqFwyt3TvtR/Ihu+TYOY7VALWd87AfF
PyEB+VcvSLVwQVjBHkPBjb5NFzKo6+D7g0qnsxS/SdJVDoeF6oBrzSPnFKU+
/D6InbqB1oHd1bNbNN8p/YKmsOmZZh04YNa5JrsxWIWmLJZutzrI/q1xxYxS
f9Nn+MoPwutAKKVKiuMbBuvgk6R/NaMO6LKWdcoo9ZoO0Z+iO+sgtGFlt6sV
g72RynKvdaYOaPdok2Up9d5zELy987MOzjh5BhU0Y7B7OB/phzw4cHtcYfug
AYON+m9/JfQqDuLtxAITKftF0NP5LU4WB7d9/U/31GKwOrdtJs9Y44BarJKW
uQqDLazRd1rG4eDSwZubBMr+lOce4eHqx8GX3xETTZT9O+mq+UUJjwNxhz7r
0FwM9qjUXUwBSz14BX9M/fURg31ceT3HwbgeakX1eySSKfuxjG2amroBLvJk
CuoGYrAGYXvai8cbIDJJc/msH8Uvs6XOr8INQLLrMJ/zwWCFj1VXh95vAPm7
EWQxNwxW2skk9lhRAwR+s7kraoXBXk/S+xhzpREI2MPHUij98kFQ15z/zUYI
FcmdfHsXg/VwuPOfs1wjPBF/n+ggh8E2qVyKeaDfCBxJAoonEAxW5e/Bq9OB
jcBm3BL15RIG+8joo+Gn6UZ4OXoZ23GY4p/SqXfvVhuhfUC87Cc1BvvxesRg
yFYj3ArVqhL4w4olsrgpWzM0gUNdxZUHeFasU4Oq1LXrTWD53W8qH8eKDTuz
zVn3pgnulsXJX3zKiq2Yl+n6frsZSgfEN33yWbDDiq823ig0w98shf+ep7Ng
dwrqj6toNsNMmqXBnVgWrKS71KN2i2Y4H2GRX+PBgq3iuLLTGNUMD0xGyyeV
WLDVstxnSlaawYrT7vS/BWZs3ccfL2NivoAy5tdoIwMztvl58qkHxBYIV1FJ
4rvGiN0+j7DmW7fBjesJvNyWR7A0u7mYU+e+AfKGYenUtUPY6/9MKrQKumDW
QWAwfeEAuvzEe74KfYd3jt39JnK/4SZrJ02kxHegO07sThT6DZ/ePZLUx36H
p7qfHuNZf4NvQXjaus53qM564Vsy/gtujq7Yn3z1HfpanIJ5X/yCT5eSTzwf
+Q5k+oYvWuk7IL36uuiwdC8wLAu/1WbdBt4Iwu5nci+84b/jkH92E+ofeX8u
+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
eq4i
          "]]}, Annotation[#, "Charting`Private`Tag$16005#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wHIB7Im
          "]]}, Annotation[#, "Charting`Private`Tag$16005#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{1.5974084409506857`, -2.5393476077094093`}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -3.0865624344024742`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{1.5974084409506857`, -2.5393476077094093`}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -3.0865624344024742`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{21., -6.499999999999996}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1800000000000002`, -3.0865624344024742`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"0\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {
              1.1800000000000002`, -3.0865624344024742`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{2.348513672420807, -1.8666771361037595`}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -1.5432809718153209`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{2.348513672420807, -1.8666771361037595`}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -1.5432809718153209`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{21., -6.499999999999996}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1800000000000002`, -1.5432809718153209`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"1\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {
              1.1800000000000002`, -1.5432809718153209`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{3., 1.5654144647214691`*^-12}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -2.950713251542703*^-12}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{3., 1.5654144647214691`*^-12}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -2.950713251542703*^-12}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{21., -6.499999999999996}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1800000000000002`, -2.950713251542703*^-12}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"2\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {
              1.1800000000000002`, -2.950713251542703*^-12}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -2.85849828238626*^-12}], 
               
               Offset[{2.348513672420264, 1.8666771361044427`}, {
                1.12, -2.85849828238626*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.5432809718094196`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.5432809718094196`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5432809718094196`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5432809718094196`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -2.85849828238626*^-12}], 
               
               Offset[{2.348513672420264, 1.8666771361044427`}, {
                1.12, -2.85849828238626*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.5432809718094196`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.5432809718094196`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5432809718094196`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5432809718094196`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {1.1800000000000002`, 
                1.5432809718094196`}], 
               
               Offset[{21., -6.499999999999996}, {1.1800000000000002`, 
                1.5432809718094196`}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1800000000000002`, 1.5432809718094196`}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1800000000000002`, 1.5432809718094196`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"3\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {1.1800000000000002`, 
              1.5432809718094196`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.7898561121996317`*^-21}], 
               
               Offset[{1.5974084409514036`, 2.539347607708958}, {1.12, 
                1.7898561121996317`*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 3.086562434396573}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                3.086562434396573}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.7898561121996317`*^-21}], 
               
               Offset[{1.5974084409514036`, 2.539347607708958}, {1.12, 
                1.7898561121996317`*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 3.086562434396573}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                3.086562434396573}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                3.086562434396573}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              3.086562434396573}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 99.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {-10., 10.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"1\"", "\"2\"", "\"3\"", "\"NDSolve\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910717070275035*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"55ab1e2e-86c4-456f-b5ae-23586d4ce85e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"HaywardScenario2", "[", "3", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "\[Rule]", "start"}], ",", 
           RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
           RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
           RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",",
            " ", 
           RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
           RowBox[{"VG", "->", "genVar"}], ",", "  ", 
           RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", 
       " ", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"f", "[", 
           RowBox[{"y", ",", " ", "time"}], "]"}], "}"}], " ", "/.", " ", 
         "soln"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.9107140024692802`*^9, 3.9107140047625246`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"6eda9933-8b3d-4d89-98bf-e6f09b3c691c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0.07905178625208265`", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9107219228750615`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"8f4e695c-a70e-4272-869f-adb7fe5069c5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<reran-path-integrals-simulations.m\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HaywardScenario2", "[", "0", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
        RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
           RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", "x"}],
        ")"}]}], "]"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{"Kimura", "[", 
      RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"k", " ", "\[LessEqual]", "3"}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HaywardScenario2", "[", "k", "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
          RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}]}], " ", "-", " ", 
          "x"}], ")"}]}], "]"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Kimura", "[", 
         RowBox[{"x", ",", "y", ",", "t", ",", "50"}], "]"}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["Ne", "2"], " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", 
               SuperscriptBox["W", "2"]}]}], ")"}], "j"], " ", 
           RowBox[{
            RowBox[{"pints", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ")"}]}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.910713818020844*^9, 3.910713818313281*^9}, {
  3.91071392199144*^9, 3.9107139457361794`*^9}, {3.910722532623573*^9, 
  3.9107225399374332`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"3f1519b6-4e3a-484e-a225-e93332fa5cfa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"2", " ", "Ne", " ", "\[Alpha]", " ", 
              RowBox[{"\[CapitalLambda]", " ", "/", " ", "W"}]}], ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "Ne", " ", "VG", " ", 
             RowBox[{"t", " ", "/", " ", "W"}]}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", "y"}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"y", 
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], 
              RowBox[{"f", "[", 
               RowBox[{"y", ",", "t"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"y", ",", "0"}], "]"}], "==", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"TriangularDistribution", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", " ", "-", " ", "0.001"}], ")"}], ",", 
                RowBox[{"(", 
                 RowBox[{"start", " ", "+", " ", "0.001"}], ")"}]}], "}"}], 
              ",", "start"}], "]"}], ",", "y"}], "]"}], "]"}]}]}], "}"}], " ",
       "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
        RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",", 
        " ", 
        RowBox[{"W", "\[Rule]", "fitVar"}], ",", " ", 
        RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
        RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", "\[IndentingNewLine]",
      "f", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.25"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", ".00025"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "  ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"HaywardScenario2", "[", "k", "]"}], "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "\[Rule]", "start"}], ",", 
           RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
           RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",",
            " ", 
           RowBox[{"W", "\[Rule]", "fitVar"}], ",", 
           RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
           RowBox[{"\[Alpha]", " ", "->", "selCoef"}], ",", " ", 
           RowBox[{"VG", "->", "genVar"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", " ", "3"}], "}"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"y", ",", "t"}], "]"}], " ", "/.", "soln"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", "time"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{"funcs", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "->", "0.1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "500"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PlotLabels", "\[Rule]", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "3"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TextString", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "3"}], "}"}]}], "]"}], ",", 
       "\"\<NDSolve\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "->", " ", "styles"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.910713273061432*^9, 3.910713302206106*^9}, {
  3.9107134053088818`*^9, 3.9107134054525685`*^9}, {3.910713441367966*^9, 
  3.910713442848057*^9}, {3.910713976330006*^9, 3.9107139852515855`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"b9adc852-c2d2-4c6e-a536-03b7c453a89c"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxsst", 
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"", 2, 61, 9, 28768283037514811285, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910716941964962*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"7397f6ac-cb5e-4599-af14-966546589da4"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "bcart", 
   "\"Warning: an insufficient number of boundary conditions have been \
specified for the direction of independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\). Artificial boundary effects may be present \
in the solution.\"", 2, 61, 10, 28768283037514811285, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.910716942077786*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"62bb81c9-5d3f-4ef7-b61f-6b637ff25bfd"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6H+EiMKj
          "]]}, Annotation[#, "Charting`Private`Tag$16005#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
y/Q/m53FNg==
          "]]}, Annotation[#, "Charting`Private`Tag$16005#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwsV3c8le/7JzTMk6SMjzISMoukep7rhCQrq6yMREZWNmVkr1RWEtkqyd4c
WyqUvfc453CGKCKq7/m9Xr/zz3m9n3Pu676u9/t9Xff9CFq76tvuo6OjC2ek
o/u/bw1bYn/Lyk3094RGNvsGBRhVeN1meeRBZtXep9qBCucyU9MreFThSRWL
wct5Kmj2jpZn8BhCJItL96GBNTCy+YVL4LEBwbNtS5UT32FaJlLlCY8nHObf
7rRp24CsozciYnjCAHmxal6SsQWPD1acjuZJgsibxcfszP6CxLXnUeVuSdBN
T3QnZ/yFgXDXlcmuJNCRMh6wmPsLIgyS76W9k+Ef7PgfsP0HH//kSQ8NpEAm
77E7787TYVl/pCiciHsJw5qnvyZepsemTvurVP19DRoCQ28sLzNgr/Cb5M3c
zASSlWNzgxkDdtVUkengh0x4MDS4u+8hA1aA7Hf3g1QWJLlfzNGrY8C6Opw/
RTeVBbFVRQwEeUYsp03J2/wLOWCTcOZcyWkmrLFJdsn39TyYz1WsaNnZj12b
NGTO4c2HmVTPv1xcB7ARFgdtDVTy4SPrf743pA9gK+668lYn5UM5Slbwtj6A
ZXdBwh8qFoCju1h5+OcD2M6QcdP9AW/ARl6GKTzhIPZs0eH9/AcLIUkLRubZ
mbGfpTutemULwdZJcePNKWasVZlvQ6BJIRA0DojduMyMfVI96zZfWAgsX7GW
WAdmLLHlw2SB9ntQcleLLmxlxr4evl4ml1gEonSE1lAnFizLv8e3rwmUgMp4
2vzzd6zYVAcjC0m1Eljn+BZPaGDFigxJWh12KYE3M/GP+L+yYtF3o3cncSVw
9Ni9EeENVmzdu5SqGulSKOrvbSu4wIalGJAbNb+WgtytjE63Zjas/KFRBF0o
hQL1TceKb2xY/6bWJtmtUpDYevBgaJYNe0D8RctRgTKYa4v0KfvHhhX8e6Vj
1rkMWh22DUcQduzNty+6PdjKgXdO+Ed7BTs23TxE655gOVyU9vQntrJjFzid
e40VyuHjzdil1W/sWNcA5W+IeTmMLfLqRJPYsdH6lIEDH8rh6oViJklBDixu
T3nilVYFzEwbZO6P4MAylkuZxVtVQA5PXf+BBA6sht3xqWDPCli/QGjDZ3Bg
R/sp07bpFbCirbOEVHFg1wtS52XItPU7Aup6CxzYU3pUYntsJSDeTNYH+DBY
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
WLS7
          "]]}, Annotation[#, "Charting`Private`Tag$16005#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
0bM36/5yTlIt9L2RfX6Dgp/QDb6ZLKqFwyt3TvtR/Ihu+TYOY7VALWd87AfF
PyEB+VcvSLVwQVjBHkPBjb5NFzKo6+D7g0qnsxS/SdJVDoeF6oBrzSPnFKU+
/D6InbqB1oHd1bNbNN8p/YKmsOmZZh04YNa5JrsxWIWmLJZutzrI/q1xxYxS
f9Nn+MoPwutAKKVKiuMbBuvgk6R/NaMO6LKWdcoo9ZoO0Z+iO+sgtGFlt6sV
g72RynKvdaYOaPdok2Up9d5zELy987MOzjh5BhU0Y7B7OB/phzw4cHtcYfug
AYON+m9/JfQqDuLtxAITKftF0NP5LU4WB7d9/U/31GKwOrdtJs9Y44BarJKW
uQqDLazRd1rG4eDSwZubBMr+lOce4eHqx8GX3xETTZT9O+mq+UUJjwNxhz7r
0FwM9qjUXUwBSz14BX9M/fURg31ceT3HwbgeakX1eySSKfuxjG2amroBLvJk
CuoGYrAGYXvai8cbIDJJc/msH8Uvs6XOr8INQLLrMJ/zwWCFj1VXh95vAPm7
EWQxNwxW2skk9lhRAwR+s7kraoXBXk/S+xhzpREI2MPHUij98kFQ15z/zUYI
FcmdfHsXg/VwuPOfs1wjPBF/n+ggh8E2qVyKeaDfCBxJAoonEAxW5e/Bq9OB
jcBm3BL15RIG+8joo+Gn6UZ4OXoZ23GY4p/SqXfvVhuhfUC87Cc1BvvxesRg
yFYj3ArVqhL4w4olsrgpWzM0gUNdxZUHeFasU4Oq1LXrTWD53W8qH8eKDTuz
zVn3pgnulsXJX3zKiq2Yl+n6frsZSgfEN33yWbDDiq823ig0w98shf+ep7Ng
dwrqj6toNsNMmqXBnVgWrKS71KN2i2Y4H2GRX+PBgq3iuLLTGNUMD0xGyyeV
WLDVstxnSlaawYrT7vS/BWZs3ccfL2NivoAy5tdoIwMztvl58qkHxBYIV1FJ
4rvGiN0+j7DmW7fBjesJvNyWR7A0u7mYU+e+AfKGYenUtUPY6/9MKrQKumDW
QWAwfeEAuvzEe74KfYd3jt39JnK/4SZrJ02kxHegO07sThT6DZ/ePZLUx36H
p7qfHuNZf4NvQXjaus53qM564Vsy/gtujq7Yn3z1HfpanIJ5X/yCT5eSTzwf
+Q5k+oYvWuk7IL36uuiwdC8wLAu/1WbdBt4Iwu5nci+84b/jkH92E+ofeX8u
+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
eq4i
          "]]}, Annotation[#, "Charting`Private`Tag$16005#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wHIB7Im
          "]]}, Annotation[#, "Charting`Private`Tag$16005#1"]& ]}}, {{{{{}, {
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{1.5974084409506857`, -2.5393476077094093`}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -3.0865624344024742`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{1.5974084409506857`, -2.5393476077094093`}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -3.0865624344024742`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{21., -6.499999999999996}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1800000000000002`, -3.0865624344024742`}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1800000000000002`, -3.0865624344024742`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"0\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {
              1.1800000000000002`, -3.0865624344024742`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{2.348513672420807, -1.8666771361037595`}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -1.5432809718153209`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{2.348513672420807, -1.8666771361037595`}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -1.5432809718153209`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{21., -6.499999999999996}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1800000000000002`, -1.5432809718153209`}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1800000000000002`, -1.5432809718153209`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"1\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {
              1.1800000000000002`, -1.5432809718153209`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{3., 1.5654144647214691`*^-12}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -2.950713251542703*^-12}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -3.96501374653578*^-12}], 
               
               Offset[{3., 1.5654144647214691`*^-12}, {
                1.12, -3.96501374653578*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{10., 2.220446049250313*^-15}, {
                1.1800000000000002`, -2.950713251542703*^-12}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{21., -6.499999999999996}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1800000000000002`, -2.950713251542703*^-12}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1800000000000002`, -2.950713251542703*^-12}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"2\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {
              1.1800000000000002`, -2.950713251542703*^-12}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -2.85849828238626*^-12}], 
               
               Offset[{2.348513672420264, 1.8666771361044427`}, {
                1.12, -2.85849828238626*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.5432809718094196`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.5432809718094196`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5432809718094196`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5432809718094196`}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., -2.85849828238626*^-12}], 
               
               Offset[{2.348513672420264, 1.8666771361044427`}, {
                1.12, -2.85849828238626*^-12}], 
               Offset[{0, 0}, {1.1800000000000002`, 1.5432809718094196`}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                1.5432809718094196`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5432809718094196`}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                1.5432809718094196`}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{21., 6.500000000000004}, {1.1800000000000002`, 
                1.5432809718094196`}], 
               
               Offset[{21., -6.499999999999996}, {1.1800000000000002`, 
                1.5432809718094196`}], 
               
               Offset[{10.000000000000002`, -6.499999999999997}, {
                1.1800000000000002`, 1.5432809718094196`}], 
               
               Offset[{9.999999999999998, 6.500000000000003}, {
                1.1800000000000002`, 1.5432809718094196`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"3\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{15.5, 3.4416913763379853`*^-15}, {1.1800000000000002`, 
              1.5432809718094196`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             Directive[
              AbsoluteThickness[4], 
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.7898561121996317`*^-21}], 
               
               Offset[{1.5974084409514036`, 2.539347607708958}, {1.12, 
                1.7898561121996317`*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 3.086562434396573}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                3.086562434396573}]}]}, {
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]], 
             BSplineCurveBox[{
               Offset[{3, 0}, {1., 1.7898561121996317`*^-21}], 
               
               Offset[{1.5974084409514036`, 2.539347607708958}, {1.12, 
                1.7898561121996317`*^-21}], 
               Offset[{0, 0}, {1.1800000000000002`, 3.086562434396573}], 
               
               Offset[{5., 1.1102230246251565`*^-15}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{10., 2.220446049250313*^-15}, {1.1800000000000002`, 
                3.086562434396573}]}]}, {
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{55., 6.500000000000012}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{55., -6.499999999999988}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{10., -6.499999999999998}, {1.1800000000000002`, 
                3.086562434396573}], 
               
               Offset[{10., 6.500000000000002}, {1.1800000000000002`, 
                3.086562434396573}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["\"NDSolve\"", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             
             Offset[{32.5, 7.216449660063518*^-15}, {1.1800000000000002`, 
              3.086562434396573}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> False,
      ImagePadding -> {{All, 99.}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {-10., 10.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"1\"", "\"2\"", "\"3\"", "\"NDSolve\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.910717070275035*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"6a2b8d7e-cde0-4749-b0c0-49684805935f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"HaywardScenario2", "[", "3", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "\[Rule]", "start"}], ",", 
           RowBox[{"t", " ", "->", " ", "time"}], ",", " ", 
           RowBox[{"\[Alpha]", "->", "selCoef"}], ",", 
           RowBox[{"\[CapitalLambda]", " ", "\[Rule]", " ", "jumpSize"}], ",",
            " ", 
           RowBox[{"Ne", "\[Rule]", "selectedNe"}], ",", " ", 
           RowBox[{"VG", "->", "genVar"}], ",", "  ", 
           RowBox[{"W", "\[Rule]", "fitVar"}]}], "}"}]}], "]"}], " ", "-", 
       " ", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"f", "[", 
           RowBox[{"y", ",", " ", "time"}], "]"}], "}"}], " ", "/.", " ", 
         "soln"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9107136760099716`*^9, 3.9107137240348463`*^9}, 
   3.910713793710298*^9, {3.9107140024692802`*^9, 3.9107140047625246`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"ed33a863-a13e-44ab-bb67-5ef49e10859b"]
},
WindowSize->{949, 473},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d38dd460-a6e5-4529-a339-60c6b2b79b8c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3676, 95, 358, "Input",ExpressionUUID->"35b92584-595f-4ba6-a2bd-49d0b108e7fc"],
Cell[4237, 117, 1427, 41, 78, "Input",ExpressionUUID->"c7c161c6-8b25-4988-92f6-6395f3566df3"],
Cell[5667, 160, 291, 6, 25, "Input",ExpressionUUID->"b1be8a36-a606-4254-87ad-c076a629bc3e"],
Cell[5961, 168, 14765, 409, 431, "Input",ExpressionUUID->"f392ab55-fa2c-4e20-b096-e5552267b1cb"],
Cell[CellGroupData[{
Cell[20751, 581, 214, 3, 25, "Input",ExpressionUUID->"4d87384b-ed89-4206-b7ce-fdd13f5048f8"],
Cell[20968, 586, 9178, 213, 257, "Output",ExpressionUUID->"9b3a28d6-9fca-49ec-aa6e-97f58f236e25"]
}, Open  ]],
Cell[30161, 802, 2022, 52, 163, "Input",ExpressionUUID->"3320a2e1-0166-40c0-a035-dc3f3ba2e2ff"],
Cell[32186, 856, 820, 18, 111, "Input",ExpressionUUID->"678da62b-d0bb-4af0-aa18-b03056a046bc"],
Cell[33009, 876, 566, 12, 60, "Input",ExpressionUUID->"454f42f7-8d51-4cdc-b855-0b55556ecb7a"],
Cell[CellGroupData[{
Cell[33600, 892, 5560, 145, 351, "Input",ExpressionUUID->"e3ba138d-e644-46b0-9a13-29de364188d4"],
Cell[39163, 1039, 475, 10, 25, "Message",ExpressionUUID->"68ca9474-6aec-4a9e-bb58-3bb55fc0cdc1"],
Cell[39641, 1051, 509, 11, 42, "Message",ExpressionUUID->"7fd08e1d-a166-4a23-8677-088ced1efced"],
Cell[40153, 1064, 141678, 2540, 206, "Output",ExpressionUUID->"3ff4c991-6374-44d4-9095-61a16d21c1ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181868, 3609, 1277, 33, 111, "Input",ExpressionUUID->"31475815-0c71-4adc-bdf7-04197de969c1"],
Cell[183148, 3644, 219, 4, 28, "Output",ExpressionUUID->"d570b474-9f39-45b4-91e6-40089c74d054"]
}, Open  ]],
Cell[183382, 3651, 2575, 69, 120, "Input",ExpressionUUID->"b2979860-cfac-4d72-8280-45a6f3ba77ae"],
Cell[CellGroupData[{
Cell[185982, 3724, 5612, 145, 318, "Input",ExpressionUUID->"aeb01383-87bb-4547-85db-b116b3988cb4"],
Cell[191597, 3871, 473, 10, 26, "Message",ExpressionUUID->"f9452fa4-ff4a-413a-a3fe-7becc87d11be"],
Cell[192073, 3883, 508, 11, 43, "Message",ExpressionUUID->"177a6111-1037-49fb-9040-03ff7da72623"],
Cell[192584, 3896, 146080, 2613, 206, "Output",ExpressionUUID->"55ab1e2e-86c4-456f-b5ae-23586d4ce85e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338701, 6514, 1331, 33, 111, "Input",ExpressionUUID->"6eda9933-8b3d-4d89-98bf-e6f09b3c691c"],
Cell[340035, 6549, 215, 4, 28, "Output",ExpressionUUID->"8f4e695c-a70e-4272-869f-adb7fe5069c5"]
}, Open  ]],
Cell[340265, 6556, 2632, 70, 120, "Input",ExpressionUUID->"3f1519b6-4e3a-484e-a225-e93332fa5cfa"],
Cell[CellGroupData[{
Cell[342922, 6630, 5612, 145, 318, "Input",ExpressionUUID->"b9adc852-c2d2-4c6e-a536-03b7c453a89c"],
Cell[348537, 6777, 473, 10, 26, "Message",ExpressionUUID->"7397f6ac-cb5e-4599-af14-966546589da4"],
Cell[349013, 6789, 508, 11, 43, "Message",ExpressionUUID->"62bb81c9-5d3f-4ef7-b61f-6b637ff25bfd"],
Cell[349524, 6802, 146080, 2613, 206, "Output",ExpressionUUID->"6a2b8d7e-cde0-4749-b0c0-49684805935f"]
}, Open  ]],
Cell[495619, 9418, 1331, 33, 111, "Input",ExpressionUUID->"ed33a863-a13e-44ab-bb67-5ef49e10859b"]
}
]
*)

(* End of internal cache information *)

