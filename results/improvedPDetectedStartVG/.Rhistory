levels = c("Genic", 1e-4, 1e-3, 1e-2,
1e-1, "Neutral")),
end = end))
}
textScale <- 1.5
ggplot(master, aes(x = end, y = dens)) +
geom_line(aes(color = vg),
alpha = 0.75,
size = 1.5) +
theme_bw() +
guides(color=guide_legend(title = bquote(italic(2 * N[e] * V[G] * "/" *  W)),
override.aes = list(alpha=1),
ncol = 2)) +
scale_x_continuous("Ending frequency",
expand = c(0,0)) +
scale_y_continuous("Density",
expand = c(0,0),
limits = c(0,2.35)) +
scale_color_manual(values = turbo(10)[c(2,3,4,7,8,9)]) +
theme(text = element_text(family = "LM Roman 10"),
axis.title = element_text(size= textScale * 12),
title = element_text(size = textScale * 12),
axis.text = element_text(size = textScale * 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = textScale * 10),
legend.title = element_text(size = textScale * 12),
legend.justification = c("right", "top"),
legend.position = c(.98,.98),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid = element_blank())
c(1e-4, 1e-3, 1e-2,
1e-1) * 1000
setwd("/media/nathan/T7/path_integral/mainComparison/x-0.2")
master <- data.frame()
for(file in list.files()){
end <- file %>% strsplit(., split = "_")
end <- end[[1]][2] %>%
gsub(".csv", "", .) %>%
as.numeric()
tmp <- fread(file) %>% unlist()
master <- dplyr::bind_rows(master,
data.frame(dens = tmp,
vg = factor(c(0.1, 1, 10,
100, "Genic", "Neutral"),
levels = c("Genic", 0.1, 1, 10,
100, "Neutral")),
end = end))
}
textScale <- 1.5
ggplot(master, aes(x = end, y = dens)) +
geom_line(aes(color = vg),
alpha = 0.75,
size = 1.5) +
theme_bw() +
guides(color=guide_legend(title = bquote(italic(2 * N[e] * V[G] * "/" *  W)),
override.aes = list(alpha=1),
ncol = 2)) +
scale_x_continuous("Ending frequency",
expand = c(0,0)) +
scale_y_continuous("Density",
expand = c(0,0),
limits = c(0,2.35)) +
scale_color_manual(values = turbo(10)[c(2,3,4,7,8,9)]) +
theme(text = element_text(family = "LM Roman 10"),
axis.title = element_text(size= textScale * 12),
title = element_text(size = textScale * 12),
axis.text = element_text(size = textScale * 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = textScale * 10),
legend.title = element_text(size = textScale * 12),
legend.justification = c("right", "top"),
legend.position = c(.98,.98),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid = element_blank())
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectionAlphaVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
pintDf <- master %>% filter(statDist < 0.05)
numDf <- master %>% filter(VG == 1e-4,
popalpha >= 15)
numDf$yval <- c(numDf[1,]$pintDetected,
numDf[2,]$numDetected)
p1 <- ggplot(data = pintDf, aes(x = popalpha, y = pintDetected)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
size  = 0.75,
alpha = 0.6) +
theme_bw() +
scale_x_continuous(bquote(italic(2 * N[e] * alpha * Lambda * "/" *  W)),
breaks = c(0, 1, 5, 10, 15, 20),
labels = c(0, 1, 5, 10, 15, 20),
expand = c(0.05,0)) +
scale_y_continuous("Probability detected\n(Q)",
# breaks = seq(0,0.3,by = 0.05),
expand = c(0,0),
limits = c(0,max(numDf$yval)*1.05)) +
geom_point(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha=c(0,1),
size = 2.5,
shape = 17,
show.legend = F) +
geom_line(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha = 0.6,
size = 1.5,
linetype = "dashed")  +
guides(color=guide_legend(title = bquote(italic(2 * N[e] * V[G] * "/" *  W)),
override.aes = list(alpha=1,
size = 1.25,
linewidth = 0.75))) +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(text = element_text(family = "LM Roman 10"),
axis.title = element_text(size=12),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "top"),
legend.position = c(.01,.99),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank())
p1
pintDf$VG <- 1000 * pintDf$VG
numDF$VG <- 1000 * numDf$VG
numDf$VG <- 1000 * numDf$VG
p1 <- ggplot(data = pintDf, aes(x = popalpha, y = pintDetected)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
size  = 0.75,
alpha = 0.6) +
theme_bw() +
scale_x_continuous(bquote(italic(2 * N[e] * alpha * Lambda * "/" *  W)),
breaks = c(0, 1, 5, 10, 15, 20),
labels = c(0, 1, 5, 10, 15, 20),
expand = c(0.05,0)) +
scale_y_continuous("Probability detected\n(Q)",
# breaks = seq(0,0.3,by = 0.05),
expand = c(0,0),
limits = c(0,max(numDf$yval)*1.05)) +
geom_point(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha=c(0,1),
size = 2.5,
shape = 17,
show.legend = F) +
geom_line(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha = 0.6,
size = 1.5,
linetype = "dashed")  +
guides(color=guide_legend(title = bquote(italic(2 * N[e] * V[G] * "/" *  W)),
override.aes = list(alpha=1,
size = 1.25,
linewidth = 0.75))) +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(text = element_text(family = "LM Roman 10"),
axis.title = element_text(size=12),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "top"),
legend.position = c(.01,.99),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank())
p1
####
# rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectionAlphaVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
summary(master$statDist)
# plot(density(master$statDist))
# master <- master %>% filter(VG != 1e-04)
e1 <- ggplot(data = master, aes(x = popalpha, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = bquote(V[G]),
override.aes = list(alpha=1,
size = 1.25,
linewidth = 0.75))) +
scale_x_continuous(bquote(2 * N[e] * "\u03b1 \u039b / W"),
breaks = c(0, 1, 5, 10, 15, 20),
labels = c(0, 1, 5, 10, 15, 20)) +
ylab("Statistical Distance") +
scale_y_log10() +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(axis.title = element_text(size=12),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",1),
"red",
rep("black",4))),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "top"),
legend.position = c(.01,.99),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.x = element_blank())  +
annotation_logticks(sides = "l")
e1
#########################
#####
# rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedTimeVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
pintDf <- master %>% filter(statDist < 0.05)
numDf <- master %>% filter(VG == 1e-4,
time >= 0.15)
numDf$yval <- c(numDf[1,]$pintDetected,
numDf[2,]$numDetected)
# pintDf <- pintDf %>% filter(VG == 0.1)
p2 <- ggplot(data = pintDf, aes(x = time, y = pintDetected)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
size  = 0.75,
alpha = 0.6) +
theme_bw() +
scale_x_continuous("Time\n(genomic units)",
expand = c(0.05,0)) +
scale_y_continuous("P(detected)",
expand = c(0,0),
limits = c(0,max(numDf$yval) * 1.05)) +
geom_point(data = numDf, aes(x = time,
y = yval,
color = as.factor(VG)),
alpha=c(0,1),
size = 2.5,
shape = 17,
show.legend = F) +
geom_line(data = numDf, aes(x = time,
y = yval,
color = as.factor(VG)),
alpha = 0.6,
size = 1.5,
linetype = "dashed") +
guides(color = F,
shape = F) +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(text = element_text(family = "LM Roman 10"),
axis.title = element_text(size=12),
axis.title.y = element_blank(),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12),
legend.justification = c("left", "top"),
legend.position = c(.02,.98),
legend.box.background = element_rect(colour = "black"),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank())
p2
####################
#
# rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedTimeVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
summary(master$statDist)
# plot(density(master$statDist))
# master <- master %>% filter(VG != 1e-04)
e2 <- ggplot(data = master, aes(x = time, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color = F) +
xlab("Time\n(Genomic Units)") +
ylab("Statistical Distance") +
scale_y_log10() +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12),
legend.justification = c("left", "top"),
legend.position = c(.02,.98),
legend.box.background = element_rect(colour = "black"),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank())  +
annotation_logticks(sides = "l")
e2
#######################
##########################
# rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedStartVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
# pintDf <- master %>% filter(statDist < 0.05)
#
# numDf <- master %>% filter(VG == 1e-4,
#                            time >= 0.15)
# numDf$yval <- c(numDf[1,]$pintDetected,
#                 numDf[2,]$numDetected)
p3 <- ggplot(data = master, aes(x = start, y = pintDetected)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
size  = 0.75) +
theme_bw() +
scale_x_continuous("Starting frequency",
breaks = c(0.025,0.05,0.1,0.15,0.20),
labels = c(0.025,0.05,0.1,0.15,0.20),
expand = c(0.05,0)) +
scale_y_continuous("P(detected)",
expand = c(0,0),
limits = c(0,max(master$pintDetected) * 1.05)) +
guides(color = F) +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(text = element_text(family = "LM Roman 10"),
axis.title = element_text(size=12),
axis.title.y = element_blank(),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12),
legend.justification = c("left", "top"),
legend.position = c(.02,.98),
legend.box.background = element_rect(colour = "black"),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank())
p3
#####################
##
# rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedStartVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
summary(master$statDist)
# plot(density(master$statDist))
# master <- master %>% filter(VG != 1e-04)
e3 <- ggplot(data = master, aes(x = start, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=F) +
scale_x_continuous("Starting Frequency",
breaks = c(0.025,0.05,0.1,0.15,0.20),
labels = c(0.025,0.05,0.1,0.15,0.20)) +
ylab("Statistical Distance") +
scale_y_log10() +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12),
legend.justification = c("left", "top"),
legend.position = c(.02,.98),
legend.box.background = element_rect(colour = "black"),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank())  +
annotation_logticks(sides = "l")
e3
########################
####
p1 + p2 + p3 +
plot_annotation(tag_levels = 'A')  &
theme(plot.tag = element_text(size = 12))
#########################
