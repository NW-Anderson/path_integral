summary(master$statDist)
e1 <- ggplot(data = master, aes(x = popalpha, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = bquote(V[G]),
override.aes = list(alpha=1,
size = 1.25,
linewidth = 0.75))) +
scale_x_continuous(bquote(2 * N[e] * "\u03b1 \u039b / W"),
breaks = c(0, 1, 5, 10, 15, 20),
labels = c(0, 1, 5, 10, 15, 20)) +
ylab("Statistical Distance") +
scale_y_log10() +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(axis.title = element_text(size=12),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",1),
"red",
rep("black",4))),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "top"),
legend.position = c(.01,.99),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.x = element_blank())  +
annotation_logticks(sides = "l")
master$VG <- master$VG * 1000
e1 <- ggplot(data = master, aes(x = popalpha, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = bquote(V[G]),
override.aes = list(alpha=1,
size = 1.25,
linewidth = 0.75))) +
scale_x_continuous(bquote(2 * N[e] * "\u03b1 \u039b / W"),
breaks = c(0, 1, 5, 10, 15, 20),
labels = c(0, 1, 5, 10, 15, 20)) +
ylab("Statistical Distance") +
scale_y_log10() +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(axis.title = element_text(size=12),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",1),
"red",
rep("black",4))),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "top"),
legend.position = c(.01,.99),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.x = element_blank())  +
annotation_logticks(sides = "l")
e1
e1 <- ggplot(data = master, aes(x = popalpha, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = bquote(2 * N[e] * V[G] * "/" *  V[S]),
override.aes = list(alpha=1,
size = 1.25,
linewidth = 0.75))) +
scale_x_continuous(bquote(2 * N[e] * "\u03b1 \u039b /" * V[S]),
breaks = c(0, 1, 5, 10, 15, 20),
labels = c(0, 1, 5, 10, 15, 20)) +
ylab("Statistical Distance") +
scale_y_log10() +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(axis.title = element_text(size=12),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",1),
"red",
rep("black",4))),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "top"),
legend.position = c(.01,.99),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.x = element_blank())  +
annotation_logticks(sides = "l")
e1
e1 <- ggplot(data = master, aes(x = popalpha, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = bquote(2 * N[e] * V[G] * "/" *  V[S]),
override.aes = list(alpha=1,
size = 1.25,
linewidth = 0.75))) +
scale_x_continuous(bquote(2 * N[e] * "\u03b1 \u039b /" * V[S]),
breaks = c(0, 1, 5, 10, 15, 20),
labels = c(0, 1, 5, 10, 15, 20)) +
ylab("Statistical Distance") +
scale_y_log10() +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(axis.title = element_text(size=12),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "top"),
legend.position = c(.01,.99),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.x = element_blank())  +
annotation_logticks(sides = "l")
e1
###
# rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedTimeVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
summary(master$statDist)
# plot(density(master$statDist))
# master <- master %>% filter(VG != 1e-04)
e2 <- ggplot(data = master, aes(x = time, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color = F) +
xlab("Time\n(Genomic Units)") +
ylab("Statistical Distance") +
scale_y_log10() +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12),
legend.justification = c("left", "top"),
legend.position = c(.02,.98),
legend.box.background = element_rect(colour = "black"),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank())  +
annotation_logticks(sides = "l")
e2
##########################
##
# rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedStartVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
summary(master$statDist)
# plot(density(master$statDist))
# master <- master %>% filter(VG != 1e-04)
e3 <- ggplot(data = master, aes(x = start, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=F) +
scale_x_continuous("Starting Frequency",
breaks = c(0.025,0.05,0.1,0.15,0.20),
labels = c(0.025,0.05,0.1,0.15,0.20)) +
ylab("Statistical Distance") +
scale_y_log10() +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12),
legend.justification = c("left", "top"),
legend.position = c(.02,.98),
legend.box.background = element_rect(colour = "black"),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank())  +
annotation_logticks(sides = "l")
e3
########################
#####
e1 + e2 + e3 +
plot_annotation(tag_levels = 'A')  &
theme(plot.tag = element_text(size = 12))
############################
#####
setwd("~/Documents/GitHub/path_integral/results/numErrorAlpha")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "pintAUC", "numAUC", "statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
p1 <- ggplot(data = master, aes(x = popalpha, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=F) +
scale_x_continuous(bquote(2 * N[e] * "\u03b1 \u039b / W"),
breaks = c(0, 1, 5, 10, 15, 20),
labels = c(0, 1, 5, 10, 15, 20)) +
ylab("Statistical Distance") +
scale_y_log10() +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
labs(tag = "A") +
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "top"),
legend.position = c(.01,.99),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
plot.tag = element_text(size = 12))  +
annotation_logticks(sides = "l")
p1
####################
p1 <- ggplot(data = master, aes(x = popalpha, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=F) +
scale_x_continuous(bquote(2 * N[e] * "\u03b1 \u039b /" * V[S]),
breaks = c(0, 1, 5, 10, 15, 20),
labels = c(0, 1, 5, 10, 15, 20)) +
ylab("Statistical Distance") +
scale_y_log10() +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
labs(tag = "A") +
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "top"),
legend.position = c(.01,.99),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
plot.tag = element_text(size = 12))  +
annotation_logticks(sides = "l")
p1
#####
# rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/numErrorTime")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("time", "VG", "pintAUC", "numAUC", "statDist")
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
p2 <- ggplot(data = master, aes(x = time, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=F) +
xlab("Time (Genomic Units)") +
ylab("Statistical Distance") +
scale_y_log10() +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
labs(tag = "B") +
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "top"),
legend.position = c(.01,.99),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
plot.tag = element_text(size = 12))  +
annotation_logticks(sides = "l")
p2
#################
###
# rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/numErrorK")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("k", "VG", "pintAUC", "numAUC", "statDist")
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
p3 <- ggplot(data = master, aes(x = k, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = bquote(V[G]),
override.aes = list(alpha=1,
size = 1.25,
linewidth = 0.75),
nrow = 2)) +
scale_x_continuous(bquote(k[max])) +
scale_y_log10("Statistical Distance") +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
labs(tag = "C") +
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "bottom"),
legend.position = c(.01,.01),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
plot.tag = element_text(size = 12))  +
annotation_logticks(sides = "l")
p3
#####################
p3 <- ggplot(data = master, aes(x = k, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = bquote(2 * N[e] * V[G] * "/" *  V[S]),
override.aes = list(alpha=1,
size = 1.25,
linewidth = 0.75),
nrow = 2)) +
scale_x_continuous(bquote(k[max])) +
scale_y_log10("Statistical Distance") +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
labs(tag = "C") +
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "bottom"),
legend.position = c(.01,.01),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
plot.tag = element_text(size = 12))  +
annotation_logticks(sides = "l")
p3
#####
# rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/numErrorStart")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("start", "VG", "pintAUC", "numAUC", "statDist")
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
p4 <- ggplot(data = master, aes(x = start, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=F) +
scale_x_continuous("Starting Frequency",
breaks = (1:9 / 10)) +
scale_y_log10("Statistical Distance") +
scale_color_manual(values = turbo(10)[c(2,4,7,9)]) +
labs(tag = "D") +
theme(axis.title = element_text(size=12),
axis.title.y = element_blank(),
title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.justification = c("left", "top"),
legend.position = c(.01,.99),
legend.box.background = element_rect(colour = "black"),
legend.spacing.y = unit(0, 'cm'),
legend.key.size = unit(0.8, "line"),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
plot.tag = element_text(size = 12))  +
annotation_logticks(sides = "l")
p4
########################
####
p5 <- ggplot(data.frame(l = "Statistical Distance", x = 1, y = 1)) +
geom_text(aes(x, y, label = l), angle = 90,
size = 5 / 14 * 12) +
theme_void() +
coord_cartesian(clip = "off")
p5 + ((p1 | p2) / (p3 | p4)) + plot_layout(widths = c(1, 25))
