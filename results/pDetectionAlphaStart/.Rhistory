library(tidygraph)
library(vcfR)
library(ggplotify)
library(pheatmap)
library(ggbreak)
library(ggimage)
library(rsvg)
dev.off()
rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/convergenceAlphaVG")
df <- data.frame(sel=c(),
geg=c(),
fig=c())
for(sel in c(1, 5,10)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"_", geg,"geg","_0.02time.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel..._...geg...geg...._0.02time.svg...,
Gegenbauers = geg,
PopScaledSelection = sel)
for(sel in c(1, 5,10)){
for(genVar in c(0.0001,0.001,0.01)){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"._50geg","_",genVar,"VG.svg",sep=""))))
}
}
df <- data.frame(sel=c(),
geg=c(),
fig=c())
for(sel in c(1, 5,10)){
for(genVar in c(0.0001,0.001,0.01)){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"._50geg","_",genVar,"VG.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel..._...geg...geg...._0.02time.svg...,
Gegenbauers = geg,
PopScaledSelection = sel)
df <- df %>% rename(fig = path.expand.paste..2na...sel...._50geg...._...genVar...VG.svg...,
Gegenbauers = geg,
PopScaledSelection = sel)
df <- data.frame(sel=c(),
geg=c(),
fig=c())
for(sel in c(1, 5,10)){
for(genVar in c("0.0001","0.001","0.01")){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"._50geg","_",genVar,"VG.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel...._50geg...._...genVar...VG.svg...,
Gegenbauers = geg,
PopScaledSelection = sel)
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(PopScaledSelection),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
for(sel in c(1, 5,10)){
for(genVar in c("0.0001","0.001","0.01")){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"._50geg","_",genVar,"VG.svg",sep=""))))
}
}
df <- data.frame(sel=c(),
geg=c(),
fig=c())
for(sel in c(1, 5,10)){
for(genVar in c("0.0001","0.001","0.01")){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"._50geg","_",genVar,"VG.svg",sep=""))))
}
}
df <- data.frame(sel=c(),
genVar=c(),
fig=c())
for(sel in c(1, 5,10)){
for(genVar in c("0.0001","0.001","0.01")){
df <- dplyr::bind_rows(df,
data.frame(sel,
genVar,
path.expand(paste("2na",sel,"._50geg","_",genVar,"VG.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel...._50geg...._...genVar...VG.svg...,
Gegenbauers = geg,
PopScaledSelection = sel)
df <- data.frame(sel=c(),
genVar=c(),
fig=c())
for(sel in c(1, 5,10)){
for(genVar in c("0.0001","0.001","0.01")){
df <- dplyr::bind_rows(df,
data.frame(sel,
genVar,
path.expand(paste("2na",sel,"._50geg","_",genVar,"VG.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel...._50geg...._...genVar...VG.svg...,
Gegenbauers = geg,
PopScaledSelection = sel)
df <- df %>% rename(fig = path.expand.paste..2na...sel...._50geg...._...genVar...VG.svg...,
GeneticVariance = geg,
PopScaledSelection = sel)
df <- df %>% rename(fig = path.expand.paste..2na...sel...._50geg...._...genVar...VG.svg...,
GeneticVariance = genVar,
PopScaledSelection = sel)
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(GeneticVariance),
cols=vars(PopScaledSelection),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
df <- data.frame(sel=c(),
genVar=c(),
fig=c())
for(sel in c(1, 5,10)){
for(genVar in c("0.0001","0.001","0.01")){
df <- dplyr::bind_rows(df,
data.frame(sel,
genVar,
path.expand(paste("2na",sel,"._50geg","_",genVar,"VG.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel...._50geg...._...genVar...VG.svg...,
VG = genVar,
PopScaledSelection = sel)
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(VG),
cols=vars(PopScaledSelection),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/convergence2Na5")
df <- data.frame(sel=c(),
genVar=c(),
fig=c())
for(sel in c(1, 5,10)){
for(genVar in c("0.0001","0.001","0.01")){
df <- dplyr::bind_rows(df,
data.frame(sel,
genVar,
path.expand(paste("2na",sel,"._50geg","_",genVar,"VG.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel...._50geg...._...genVar...VG.svg...,
VG = genVar,
PopScaledSelection = sel)
df <- data.frame(sel=c(),
genVar=c(),
fig=c())
for(sel in c(1, 5,10)){
for(genVar in c("0.0001","0.001","0.01")){
df <- dplyr::bind_rows(df,
data.frame(sel,
genVar,
path.expand(paste("2na",sel,"._50geg","_",genVar,"VG.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel...._50geg...._...genVar...VG.svg...,
VG = genVar,
PopScaledSelection = sel)
list.files()
rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/convergence2Na5")
list.files()
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na5_", geg,"geg","_",tme,"time.svg",sep=""))))
df <- data.frame(sel=c(),
geg=c(),
fig=c())
for(tme in c(0.5, 0.25, 0.75)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na5_", geg,"geg","_",tme,"time.svg",sep=""))))
}
}
df <- dplyr::bind_rows(df,
data.frame(tme,
geg,
path.expand(paste("2na5_", geg,"geg","_",tme,"time.svg",sep=""))))
df <- data.frame(sel=c(),
geg=c(),
fig=c())
df <- data.frame(tme=c(),
geg=c(),
fig=c())
for(tme in c(0.5, 0.25, 0.75)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(tme,
geg,
path.expand(paste("2na5_", geg,"geg","_",tme,"time.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na5_...geg...geg...._...tme...time.svg...,
Gegenbauers = geg,
Time = tme)
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(tme),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(Time),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/convergence2Na10")
list.files()
df <- data.frame(tme=c(),
geg=c(),
fig=c())
for(tme in c(0.5, 0.25, 0.75)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(tme,
geg,
path.expand(paste("2na10_", geg,"geg","_",tme,"time.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na10_...geg...geg...._...tme...time.svg...,
Gegenbauers = geg,
Time = tme)
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(Time),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
setwd("~/Documents/GitHub/path_integral/results/convergence2Na10")
rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/convergence2Na10")
list.files()
df <- data.frame(tme=c(),
geg=c(),
fig=c())
for(tme in c(0.5, 0.25, 0.75)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(tme,
geg,
path.expand(paste("2na10_", geg,"geg","_",tme,"time.svg",sep=""))))
}
}
for(tme in c(0.05, 0.1, 0.15)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(tme,
geg,
path.expand(paste("2na10_", geg,"geg","_",tme,"time.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na10_...geg...geg...._...tme...time.svg...,
Gegenbauers = geg,
Time = tme)
df <- data.frame(tme=c(),
geg=c(),
fig=c())
for(tme in c(0.05, 0.1, 0.15)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(tme,
geg,
path.expand(paste("2na10_", geg,"geg","_",tme,"time.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na10_...geg...geg...._...tme...time.svg...,
Gegenbauers = geg,
Time = tme)
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(Time),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/pDetectionAlphaVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start", "thresh", "totalP", "Pdetected")
master$popalpha = 1000 * master$alpha
rm(tmp)
ggplot(data = master, aes(x = popalpha, y = Pdetected)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
geom_vline(xintercept=1,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient",
breaks = c(0,0.5,1,5,10),
limits = c(0,10),
labels = c(0,0.5,1,5,10)) +
scale_y_continuous("P(detected)",
breaks = c(0.01,0.02,0.04,0.06,0.08)) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",2),"red",rep("black",2)))) +
scale_color_viridis(discrete = T)
ggplot(data = master, aes(x = popalpha, y = Pdetected)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
geom_vline(xintercept=1,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient",
breaks = c(0,0.5,1,5,10),
limits = c(0,10),
labels = c(0,0.5,1,5,10)) +
scale_y_continuous("P(detected)",
breaks = c(0.01,0.02,0.04,0.06,0.08)) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",2),"red",rep("black",2)))) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18))
rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/pDetectionAlphaTime")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "time", "start", "thresh", "totalP", "Pdetected")
master$popalpha = 1000 * master$alpha
master$popalpha = 1000 * master$alpha
rm(tmp)
ggplot(data = master, aes(x = popalpha, y = Pdetected)) +
geom_line(aes(color = as.factor(time)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(time)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
geom_vline(xintercept=1,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "Time (Genomic Units)",
override.aes = list(alpha=1))) +
# scale_x_break(c(1,2), scales = 0.9)
scale_x_continuous("Population Scaled Selection Coefficient",
breaks = c(0,0.5,1,5,10),
limits = c(0,10),
labels = c(0,0.5,1,5,10)) +
scale_y_continuous("P(detected)") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",2),"red",rep("black",2)))) +
scale_color_viridis(discrete = T)
rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/pDetectionAlphaStart")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start", "thresh", "totalP", "Pdetected")
master$popalpha = 1000 * master$alpha
rm(tmp)
ggplot(data = master, aes(x = popalpha, y = Pdetected)) +
geom_line(aes(color = as.factor(start)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(start)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
geom_vline(xintercept=1,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "Starting freq",
override.aes = list(alpha=1))) +
# scale_x_break(c(1,2), scales = 0.9)
scale_x_continuous("Population Scaled Selection Coefficient",
breaks = c(0,0.5,1,5,10),
limits = c(0,10),
labels = c(0,0.5,1,5,10)) +
scale_y_continuous("P(detected)") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",2),"red",rep("black",2)))) +
scale_color_viridis(discrete = T)
ggplot(data = master, aes(x = popalpha, y = Pdetected)) +
geom_line(aes(color = as.factor(start)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(start)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
geom_vline(xintercept=1,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "Starting freq",
override.aes = list(alpha=1))) +
# scale_x_break(c(1,2), scales = 0.9)
scale_x_continuous("Population Scaled Selection Coefficient",
breaks = c(0,0.5,1,5,10),
limits = c(0,10),
labels = c(0,0.5,1,5,10)) +
scale_y_continuous("P(detected)") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",2),"red",rep("black",2)))) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18))
