geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T)
mster <- master %>% filter(VG<=0.001)
mster <- mster %>% filter(VG<=0.001)
ggplot(data = master, aes(x = popalpha, y = error)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T)
ggplot(data = mster, aes(x = popalpha, y = error)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T)
ggplot(data = master, aes(x = popalpha, y = error)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T)
ggplot(data = master, aes(x = popalpha, y = error)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18))
rm(list = ls())
rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/numErrorTimeVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("time", "VG", "pintAUC", "numAUC")
master$popalpha = 1000 * master$alpha
master$error = abs(master$numAUC - master$pintAUC)
rm(tmp, file)
summary(master$error)
plot(density(master$error))
ggplot(data = master, aes(x = time, y = error)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Time (Genomic Units)") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18))
mster <- master %>% filter(VG<=0.001)
ggplot(data = mster, aes(x = time, y = error)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T)
ggplot(data = master, aes(x = time, y = error)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Time (Genomic Units)") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18))
rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/numErrorKVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("k", "VG", "pintAUC", "numAUC")
master$error = abs(master$numAUC - master$pintAUC)
rm(tmp, file)
summary(master$error)
plot(density(master$error))
ggplot(data = master, aes(x = k, y = error)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Time (Genomic Units)") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18))
ggplot(data = master, aes(x = k, y = error)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("kmax") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18))
rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/numErrorStartVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("start", "VG", "pintAUC", "numAUC")
master$error = abs(master$numAUC - master$pintAUC)
rm(tmp, file)
summary(master$error)
plot(density(master$error))
ggplot(data = master, aes(x = time, y = error)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Time (Genomic Units)") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18))
ggplot(data = master, aes(x = start, y = error)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Starting Frequency") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18))
df <- data.frame(sel=c(),
geg=c(),
fig=c())
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"_", geg,"geg","_0.02time.svg",sep=""))))
for(sel in c(1, 5,10)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"_", geg,"geg","_0.02time.svg",sep=""))))
}
}
rm(list = ls())
df <- data.frame(sel=c(),
geg=c(),
fig=c())
for(sel in c(1, 5,10)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"_", geg,"geg","_0.02time.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel..._...geg...geg...._0.02time.svg...,
Gegenbauers = geg,
PopScaledSelection = sel)
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(PopScaledSelection),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
install.packages("rsvg")
library(rsvg)
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(PopScaledSelection),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
?geom_image
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"_", geg,"geg","_0.02time.svg",sep=""))))
}
for(sel in c(1, 5,10)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"_", geg,"geg","_0.02time.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel..._...geg...geg...._0.02time.svg...,
Gegenbauers = geg,
PopScaledSelection = sel)
df <- data.frame(sel=c(),
geg=c(),
fig=c())
for(sel in c(1, 5,10)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"_", geg,"geg","_0.02time.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel..._...geg...geg...._0.02time.svg...,
Gegenbauers = geg,
PopScaledSelection = sel)
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(PopScaledSelection),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
setwd("~/Documents/GitHub/path_integral/results/convergence20gen")
setwd("~/Documents/GitHub/path_integral/results/convergence20gen")
df <- data.frame(sel=c(),
geg=c(),
fig=c())
for(sel in c(1, 5,10)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"_", geg,"geg","_0.02time.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel..._...geg...geg...._0.02time.svg...,
Gegenbauers = geg,
PopScaledSelection = sel)
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(PopScaledSelection),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(PopScaledSelection),
scales = "free",
labeller = label_both) +
theme_blank()
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(PopScaledSelection),
scales = "free",
labeller = label_both) +
theme_blank()
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(PopScaledSelection),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
library(ggraptR)
library(poolSeq)
library(patchwork)
library(dplyr)
library(ggridges)
library(tidyr)
library(viridis)
library(colorspace)
library(gganimate)
library(gifski)
library(av)
library(png)
library(magick)
library(scico)
library(plotrix)
library(ggdensity)
library(ggplot2) # needs to be version ≥ 2.1.0
library(scales)
library(devtools)
library(network)
library(sna)
library(GGally)
library(geomnet)
library(ggnetwork)
library(igraph)
library(ggraph)
library(tidygraph)
library(vcfR)
library(ggplotify)
library(pheatmap)
library(ggbreak)
library(ggimage)
library(rsvg)
dev.off()
rm(list = ls())
setwd("~/Documents/GitHub/path_integral/results/convergence20gen")
df <- data.frame(sel=c(),
geg=c(),
fig=c())
for(sel in c(1, 5,10)){
for(geg in c(10,30,50)){
df <- dplyr::bind_rows(df,
data.frame(sel,
geg,
path.expand(paste("2na",sel,"_", geg,"geg","_0.02time.svg",sep=""))))
}
}
df <- df %>% rename(fig = path.expand.paste..2na...sel..._...geg...geg...._0.02time.svg...,
Gegenbauers = geg,
PopScaledSelection = sel)
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(PopScaledSelection),
scales = "free",
labeller = label_both) +
theme_blank() +
xlab("Ending Frequency") +
ylab("Density")
ggplot(df) +
geom_image(aes(x=1,
y=1,
image=fig),
size=Inf) +
facet_grid(rows=vars(Gegenbauers),
cols=vars(PopScaledSelection),
scales = "free",
labeller = label_both) +
theme_blank()
setwd("~/Documents/GitHub/path_integral/results/numErrorAlphaVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "pintAUC", "numAUC")
master$popalpha = 1000 * master$alpha
master$error = abs(master$numAUC - master$pintAUC)
rm(tmp, file)
setwd("~/Documents/GitHub/path_integral/results/numErrorAlphaVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "pintAUC", "numAUC")
master$popalpha = 1000 * master$alpha
master$error = abs(master$numAUC - master$pintAUC)
rm(tmp, file)
summary(master$error)
plot(density(master$error))
ggplot(data = master, aes(x = popalpha, y = error)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient") +
scale_y_continuous("Absolute Error") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18))
