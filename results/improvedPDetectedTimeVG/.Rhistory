size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
geom_vline(xintercept=1,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient",
breaks = c(0,0.5,1,5,10, 15, 20),
labels = c(0,0.5,1,5,10, 15, 20)) +
scale_y_continuous("P(detected)") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",2),"red",rep("black",2)))) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18)) +
geom_point(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha=c(0,1),
size = 2.5,
shape = 17) +
geom_line(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha = 0.6,
size = 1.5,
linetype = "dashed")
##
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectionAlphaVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
pintDf <- master %>% filter(statDist < 0.05)
numDf <- master %>% filter(VG == 1e-4,
popalpha >= 15)
numDf$yval <- c(numDf[1,]$pintDetected,
numDf[2,]$numDetected)
ggplot(data = pintDf, aes(x = popalpha, y = pintDetected)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
geom_vline(xintercept=1,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient",
breaks = c(0,0.5,1,5,10, 15, 20),
labels = c(0,0.5,1,5,10, 15, 20)) +
scale_y_continuous("P(detected)") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",2),"red",rep("black",2)))) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18)) +
geom_point(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha=c(0,1),
size = 2.5,
shape = 17) +
geom_line(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha = 0.6,
size = 1.5,
linetype = "dashed")
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectionAlphaVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
pintDf <- master %>% filter(statDist < 0.05)
numDf <- master %>% filter(VG == 1e-4,
popalpha >= 15)
numDf$yval <- c(numDf[1,]$pintDetected,
numDf[2,]$numDetected)
ggplot(data = pintDf, aes(x = popalpha, y = pintDetected)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
geom_vline(xintercept=1,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient",
breaks = c(0,0.5,1,5,10, 15, 20),
labels = c(0,0.5,1,5,10, 15, 20)) +
scale_y_continuous("P(detected)") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",2),"red",rep("black",2)))) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18)) +
geom_point(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha=c(0,1),
size = 2.5,
shape = 17) +
geom_line(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha = 0.6,
size = 1.5,
linetype = "dashed")
library(ggraptR)
library(poolSeq)
library(patchwork)
library(dplyr)
library(ggridges)
library(tidyr)
library(viridis)
library(colorspace)
library(gganimate)
library(gifski)
library(av)
library(png)
library(magick)
library(scico)
library(plotrix)
library(ggdensity)
library(ggplot2) # needs to be version â‰¥ 2.1.0
library(scales)
library(devtools)
library(network)
library(sna)
library(GGally)
library(geomnet)
library(ggnetwork)
library(igraph)
library(ggraph)
library(tidygraph)
library(vcfR)
library(ggplotify)
library(pheatmap)
library(ggbreak)
library(ggimage)
library(rsvg)
library(ggrepel)
dev.off()
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectionAlphaVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
pintDf <- master %>% filter(statDist < 0.05)
numDf <- master %>% filter(VG == 1e-4,
popalpha >= 15)
numDf$yval <- c(numDf[1,]$pintDetected,
numDf[2,]$numDetected)
ggplot(data = pintDf, aes(x = popalpha, y = pintDetected)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
geom_vline(xintercept=1,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient",
breaks = c(0,0.5,1,5,10, 15, 20),
labels = c(0,0.5,1,5,10, 15, 20)) +
scale_y_continuous("P(detected)") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",2),"red",rep("black",2)))) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18)) +
geom_point(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha=c(0,1),
size = 2.5,
shape = 17) +
geom_line(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha = 0.6,
size = 1.5,
linetype = "dashed")
#######################
#### pDetection Ne ####
#######################
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/pDetectionAlphaNe")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("selCoef", "Ne", "time", "start", "thresh", "totalP", "Pdetected")
master$popalpha = 2 * master$Ne * master$selCoef
rm(tmp)
ggplot(data = master, aes(x = selCoef, y = Pdetected)) +
geom_line(aes(color = as.factor(Ne)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(Ne)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "Ne",
override.aes = list(alpha=1))) +
scale_x_continuous("Selection Coefficient",
breaks = c(0, 5e-04, 1e-03, 5e-03, 1e-02),
limits = c(0, 1e-02),
labels = c(0, 5e-04, 1e-03, 5e-03, 1e-02)) +
scale_y_continuous("P(detected)") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18))
########
#### RFS ####
#############
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/pDetectionAlphaNe")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("selCoef", "Ne", "time", "start", "thresh", "totalP", "Pdetected")
master$popalpha = 2 * master$Ne * master$selCoef
rm(tmp)
master <- master %>% filter(selCoef == 0.01)
master$reps = 1000 / master$Ne
df <- data.table()
for(i in 1:nrow(master)){
tmp <- master[i,]
for(j in 0:tmp$reps){
foo <- data.table(Ne = tmp$Ne,
reps = paste(tmp$reps, " Replicates"),
reps_number = tmp$reps,
bin = j,
prob = choose(tmp$reps, j) *
tmp$Pdetected^j *
(1 - tmp$Pdetected)^(tmp$reps - j))
df <- dplyr::bind_rows(df, foo)
}
}
rm(foo, master, tmp, file, i, j)
dfdetected <- df %>% filter(bin > 0) %>%
group_by(reps) %>%
mutate(Pdetected = sum(prob)) %>%
mutate(prob = prob / Pdetected) %>% ungroup()
dfnotdetected <- df %>% filter(bin == 0)
dfnotdetected$reps_number <- c(1,3,2.5,1.5)
ggplot(dfdetected, aes(y=prob, x=as.factor(bin))) +
geom_bar(stat="identity",
fill = viridis(4)[2],
alpha = 0.5) +
facet_wrap(~ reps, scales="free_x") +
theme_bw() +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_text(data = dfnotdetected, aes(x = reps_number,
y = 1.1,
label = paste("P(detected): ",round(1- prob,3))),
hjust = 0, vjust = 1) +
theme(panel.grid.minor.x = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12))
#####
####################################
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectionAlphaVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
pintDf <- master %>% filter(statDist < 0.05)
numDf <- master %>% filter(VG == 1e-4,
popalpha >= 15)
numDf$yval <- c(numDf[1,]$pintDetected,
numDf[2,]$numDetected)
ggplot(data = pintDf, aes(x = popalpha, y = pintDetected)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
geom_vline(xintercept=1,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Population Scaled Selection Coefficient",
breaks = c(0,0.5,1,5,10, 15, 20),
labels = c(0,0.5,1,5,10, 15, 20)) +
scale_y_continuous("P(detected)") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,
colour = c(rep("black",2),"red",rep("black",2)))) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18)) +
geom_point(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha=c(0,1),
size = 2.5,
shape = 17) +
geom_line(data = numDf, aes(x = popalpha,
y = yval,
color = as.factor(VG)),
alpha = 0.6,
size = 1.5,
linetype = "dashed")
#
########################
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectionAlphaVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
summary(master$statDist)
plot(density(master$statDist))
# master <- master %>% filter(VG != 1e-04)
ggplot(data = master, aes(x = popalpha, y = statDist)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
# scale_x_continuous("Population Scaled Selection Coefficient") +
# scale_y_continuous("Error") +
xlab("Population Scaled Selection Coefficient") +
ylab("Statistical Distance") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18)) +
geom_hline(yintercept=0,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
scale_y_break(c(0.05,1.2), scales = 1)
## idk if i like the break?
##
#########################
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedTimeVG")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("alpha", "VG", "start",
"time", "thresh", "pintAUC",
"pintDetected", "numAUC", "numDetected",
"statDist")
master$popalpha = 1000 * master$alpha
rm(tmp, file)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
pintDf <- master %>% filter(statDist < 0.05)
numDf <- master %>% filter(VG == 1e-4,
time >= 0.15)
numDf$yval <- c(numDf[1,]$pintDetected,
numDf[2,]$numDetected)
# pintDf <- pintDf %>% filter(VG == 0.1)
ggplot(data = pintDf, aes(x = time, y = pintDetected)) +
geom_line(aes(color = as.factor(VG)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(VG)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "Genetic Variance",
override.aes = list(alpha=1))) +
scale_x_continuous("Time (Genomic Units)") +
scale_y_continuous("P(detected)") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18)) +
geom_point(data = numDf, aes(x = time,
y = yval,
color = as.factor(VG)),
alpha=c(0,1),
size = 2.5,
shape = 17) +
geom_line(data = numDf, aes(x = time,
y = yval,
color = as.factor(VG)),
alpha = 0.6,
size = 1.5,
linetype = "dashed")
