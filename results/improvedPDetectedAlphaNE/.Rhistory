panel.grid.minor.x = element_blank(),
axis.title = element_text(size=18),
title = element_text(size = 15),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12),
legend.position = "bottom")
####
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedAlphaNE")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("selCoef", "Ne", "time", "start",
"thresh", "pintAUC", "pintdetected",
"numAUC", "numdetected", "statDist")
master$popalpha = 2 * master$Ne * master$selCoef
rm(tmp)
ggplot(data = master, aes(x = Ne, y = pintdetected)) +
geom_line(aes(color = as.factor(selCoef)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(selCoef)),
alpha=1,
size = 2.5) +
# geom_hline(yintercept=0.01,
#            linetype="dashed",
#            color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "\u03b1",
override.aes = list(alpha=1))) +
scale_x_continuous(breaks = c(200, 250, 500, 1000)) +
# scale_x_continuous("Selection Coefficient",
#                    breaks = c(0, 5e-04, 1e-03, 5e-03, 1e-02),
#                    limits = c(0, 1e-02),
#                    labels = c(0, 5e-04, 1e-03, 5e-03, 1e-02)) +
scale_y_continuous("P(detected)") +
scale_x_continuous(bquote(N[e])) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18),
title = element_text(size = 15),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12))
##################
ggplot(data = master, aes(x = Ne, y = pintdetected)) +
geom_line(aes(color = as.factor(selCoef)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(selCoef)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "\u03b1",
override.aes = list(alpha=1))) +
scale_x_continuous(breaks = c(200, 250, 500, 1000)) +
# scale_x_continuous("Selection Coefficient",
#                    breaks = c(0, 5e-04, 1e-03, 5e-03, 1e-02),
#                    limits = c(0, 1e-02),
#                    labels = c(0, 5e-04, 1e-03, 5e-03, 1e-02)) +
scale_y_continuous("P(detected)") +
scale_x_continuous(bquote(N[e])) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18),
title = element_text(size = 15),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12))
ggplot(data = master, aes(x = Ne, y = pintdetected)) +
geom_line(aes(color = as.factor(selCoef)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(selCoef)),
alpha=1,
size = 2.5) +
geom_hline(yintercept=0.01,
linetype="dashed",
color = turbo(11)[11], size  = 0.75) +
theme_bw() +
guides(color=guide_legend(title = "\u03b1",
override.aes = list(alpha=1))) +
scale_x_continuous(bquote(N[e]),
breaks = c(200, 250, 500, 1000)) +
# scale_x_continuous("Selection Coefficient",
#                    breaks = c(0, 5e-04, 1e-03, 5e-03, 1e-02),
#                    limits = c(0, 1e-02),
#                    labels = c(0, 5e-04, 1e-03, 5e-03, 1e-02)) +
scale_y_continuous("P(detected)") +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18),
title = element_text(size = 15),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12))
#
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedAlphaNE")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("selCoef", "Ne", "time", "start",
"thresh", "pintAUC", "pintdetected",
"numAUC", "numdetected", "statDist")
master$popalpha = 2 * master$Ne * master$selCoef
rm(tmp)
master$statDist <- statDist <- master$statDist %>%
gsub('[{}]', '', .) %>%
gsub("\\*\\^", "e", .) %>%
as.numeric()
ggplot(data = master, aes(x = Ne, y = statDist)) +
geom_line(aes(color = as.factor(selCoef)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(selCoef)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "\u03b1",
override.aes = list(alpha=1))) +
scale_x_continuous(breaks = c(200, 250, 500, 1000)) +
# scale_x_continuous("Selection Coefficient",
#                    breaks = c(0, 5e-04, 1e-03, 5e-03, 1e-02),
#                    limits = c(0, 1e-02),
#                    labels = c(0, 5e-04, 1e-03, 5e-03, 1e-02)) +
scale_y_continuous("Statistical Distance") +
scale_x_continuous(bquote(N[e])) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank()) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_viridis(discrete = T) +
theme(axis.title = element_text(size=18),
title = element_text(size = 15),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12)) +
geom_hline(yintercept=0,
linetype="dashed",
color = turbo(11)[11], size  = 0.75)
#############
ggplot(data = master, aes(x = Ne, y = statDist)) +
geom_line(aes(color = as.factor(selCoef)),
alpha = 0.6,
size = 1.5) +
geom_point(aes(color = as.factor(selCoef)),
alpha=1,
size = 2.5) +
theme_bw() +
guides(color=guide_legend(title = "\u03b1",
override.aes = list(alpha=1))) +
scale_x_continuous(bquote(N[e]),
breaks = c(200, 250, 500, 1000)) +
scale_y_continuous("Statistical Distance") +
scale_color_viridis(discrete = T) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.text.x = element_text(angle = 45,
vjust = 1,
hjust=1),
axis.title = element_text(size=18),
title = element_text(size = 15),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12)) +
geom_hline(yintercept=0,
linetype="dashed",
color = turbo(11)[11], size  = 0.75)
##
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedAlphaNE")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("selCoef", "Ne", "time", "start",
"thresh", "pintAUC", "pintdetected",
"numAUC", "numdetected", "statDist")
master$popalpha = 2 * master$Ne * master$selCoef
rm(tmp)
master <- master %>% filter(selCoef == 0.01)
master$reps = 1000 / master$Ne
df <- data.table()
for(i in 1:nrow(master)){
tmp <- master[i,]
for(j in 0:tmp$reps){
foo <- data.table(Ne = tmp$Ne,
reps = paste(tmp$reps,
" Replicates of Size ",
tmp$Ne),
reps_number = tmp$reps,
bin = j,
prob = choose(tmp$reps, j) *
tmp$pintdetected^j *
(1 - tmp$pintdetected)^(tmp$reps - j))
df <- dplyr::bind_rows(df, foo)
}
}
rm(foo, master, tmp, file, i, j)
dfdetected <- df %>% filter(bin > 0) %>%
group_by(reps) %>%
mutate(pintdetected = sum(prob)) %>%
mutate(prob = prob / pintdetected) %>% ungroup()
dfnotdetected <- df %>% filter(bin == 0)
dfnotdetected$reps_number <- c(1,3,2.5,1.5)
ggplot(dfdetected, aes(y=prob, x=as.factor(bin))) +
geom_bar(stat="identity",
fill = viridis(4)[2],
alpha = 0.5) +
facet_wrap(~ reps, scales="free_x") +
theme_bw() +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_text(data = dfnotdetected, aes(x = reps_number,
y = 1.1,
label = paste("P(detected > 0 times) : ",round(1- prob,3))),
hjust = 0.5, vjust = 1) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1))
#############
##
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedAlphaNE")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("selCoef", "Ne", "time", "start",
"thresh", "pintAUC", "pintdetected",
"numAUC", "numdetected", "statDist")
master$popalpha = 2 * master$Ne * master$selCoef
rm(tmp)
# master <- master %>% filter(selCoef == 0.01)
master$reps = 4000 / master$Ne
df <- data.table()
for(i in 1:nrow(master)){
tmp <- master[i,]
for(j in 0:tmp$reps){
foo <- data.table(Ne = tmp$Ne,
reps = paste(tmp$reps),
selCoef = tmp$selCoef,
reps_number = tmp$reps,
bin = j,
prob = choose(tmp$reps, j) *
tmp$pintdetected^j *
(1 - tmp$pintdetected)^(tmp$reps - j))
df <- dplyr::bind_rows(df, foo)
}
}
rm(foo, master, tmp, file, i, j)
dfdetected <- df %>% filter(bin > 0) %>%
group_by(reps, selCoef) %>%
mutate(pintdetected = sum(prob)) %>%
mutate(prob = prob / pintdetected,
selCoef = as.factor(selCoef),
reps = as.factor(reps)) %>% ungroup()
dfdetected$reps <- factor(dfdetected$reps,
levels = levels(dfdetected$reps)[c(3,4,1,2)])
dfnotdetected <- df %>% filter(bin == 0) %>%
mutate(reps = as.factor(reps),
selCoef = as.factor(selCoef),
pintdetected = paste("P(detected > 0 times) : ",formatC(round(1-prob,3),3,format="f"))) %>%
mutate(pintdetected = as.factor(pintdetected))
dfnotdetected$reps_number <- rep(c(3,
13.6,
11,
5.7),
each = 5)
dfnotdetected$vjust = rep((1.5 * c(2,3,4,5,1)), 4)
breaksfun <- function(x){
1:max(x)
}
# my_labeller = as_labeller(
#   c("1" = "2 * N[e] * `\u03b1 \u039b / W = 1`",
#     "10" = "2 * N[e] * `\u03b1 \u039b / W = 10`",
#     "geg10" = "m[max]==10",
#     "geg50" = "m[max]==50"),
#   default = label_parsed
# )
my_labeller = as_labeller(
c("4" = "4 ~ `Replicates,` ~ N[e] == 1000",
"8" = "8 ~ `Replicates,` ~ N[e] == 500",
"16" = "16 ~ `Replicates,` ~ N[e] == 250",
"20" = "20 ~ `Replicates,` ~ N[e] == 200"),
default = label_parsed
)
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps,
levels = unique(dfdetected$reps)[c(1,4,3,2)]),
scales="free_x",
labeller = my_labeller) +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
size = 6.5,
bg.color = "darkgrey", bg.r = 0.03,
show.legend = F) +
guides(color=guide_legend(title = "\u03b1",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
title = element_text(size = 15),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
##
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedAlphaNE")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("selCoef", "Ne", "time", "start",
"thresh", "pintAUC", "pintdetected",
"numAUC", "numdetected", "statDist")
master$popalpha = 2 * master$Ne * master$selCoef
rm(tmp)
# master <- master %>% filter(selCoef == 0.01)
master$reps = 4000 / master$Ne
df <- data.table()
for(i in 1:nrow(master)){
tmp <- master[i,]
for(j in 0:tmp$reps){
foo <- data.table(Ne = tmp$Ne,
reps = paste(tmp$reps),
selCoef = tmp$selCoef,
reps_number = tmp$reps,
bin = j,
prob = choose(tmp$reps, j) *
tmp$pintdetected^j *
(1 - tmp$pintdetected)^(tmp$reps - j))
df <- dplyr::bind_rows(df, foo)
}
}
rm(foo, master, tmp, file, i, j)
dfdetected <- df %>% filter(bin > 0) %>%
group_by(reps, selCoef) %>%
mutate(pintdetected = sum(prob)) %>%
mutate(prob = prob / pintdetected,
selCoef = as.factor(selCoef),
reps = as.factor(reps)) %>% ungroup()
dfdetected$reps <- factor(dfdetected$reps,
levels = levels(dfdetected$reps)[c(3,4,1,2)])
dfnotdetected <- df %>% filter(bin == 0) %>%
mutate(reps = as.factor(reps),
selCoef = as.factor(selCoef),
pintdetected = paste("P(detected > 0 times) : ",formatC(round(1-prob,3),3,format="f"))) %>%
mutate(pintdetected = as.factor(pintdetected))
dfnotdetected$reps_number <- rep(c(3,
13.6,
11,
5.7),
each = 5)
dfnotdetected$vjust = rep((1.5 * c(2,3,4,5,1)), 4)
breaksfun <- function(x){
1:max(x)
}
# my_labeller = as_labeller(
#   c("1" = "2 * N[e] * `\u03b1 \u039b / W = 1`",
#     "10" = "2 * N[e] * `\u03b1 \u039b / W = 10`",
#     "geg10" = "m[max]==10",
#     "geg50" = "m[max]==50"),
#   default = label_parsed
# )
my_labeller = as_labeller(
c("4" = "4 ~ `Replicates,` ~ N[e] == 1000",
"8" = "8 ~ `Replicates,` ~ N[e] == 500",
"16" = "16 ~ `Replicates,` ~ N[e] == 250",
"20" = "20 ~ `Replicates,` ~ N[e] == 200"),
default = label_parsed
)
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps,
levels = unique(dfdetected$reps)[c(1,4,3,2)]),
scales="free_x",
labeller = my_labeller) +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
size = 6.5,
bg.color = "darkgrey", bg.r = 0.03,
show.legend = F) +
guides(color=guide_legend(title = "\u03b1",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
title = element_text(size = 15),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps,
levels = unique(dfdetected$reps)[c(1,4,3,2)]),
scales="free_x",
labeller = my_labeller) +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
size = 6.5,
bg.color = "darkgrey", bg.r = 0.03,
show.legend = F) +
guides(color=guide_legend(title = "\u03b1",
override.aes = list(alpha=1),
nrow = 1)) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
title = element_text(size = 15),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12),
axis.text.x = element_text(angle = 45,
vjust = 1,
hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps,
levels = unique(dfdetected$reps)[c(1,4,3,2)]),
scales="free_x",
labeller = my_labeller) +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
size = 6.5,
bg.color = "darkgrey", bg.r = 0.03,
show.legend = F) +
guides(color=guide_legend(title = "\u03b1",
override.aes = list(alpha=1),
nrow = 1)) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
title = element_text(size = 15),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12),
axis.text.x = element_text(angle = 45,
vjust = 1,
hjust=1),
legend.position = "bottom")
