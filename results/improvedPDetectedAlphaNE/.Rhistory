ylab("Probability Given Detected at least Once") +
geom_text(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust)) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
install.packages('shadowtext')
library(ggraptR)
library(poolSeq)
library(patchwork)
library(dplyr)
library(ggridges)
library(tidyr)
library(viridis)
library(colorspace)
library(gganimate)
library(gifski)
library(av)
library(png)
library(magick)
library(scico)
library(plotrix)
library(ggdensity)
library(ggplot2) # needs to be version â‰¥ 2.1.0
library(scales)
library(devtools)
library(network)
library(sna)
library(GGally)
library(geomnet)
library(ggnetwork)
library(igraph)
library(ggraph)
library(tidygraph)
library(vcfR)
library(ggplotify)
library(pheatmap)
library(ggbreak)
library(ggimage)
library(rsvg)
library(ggrepel)
library(shadowtext)
dev.off()
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedAlphaNE")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("selCoef", "Ne", "time", "start",
"thresh", "pintAUC", "pintdetected",
"numAUC", "numdetected", "statDist")
master$popalpha = 2 * master$Ne * master$selCoef
rm(tmp)
# master <- master %>% filter(selCoef == 0.01)
master$reps = 4000 / master$Ne
df <- data.table()
for(i in 1:nrow(master)){
tmp <- master[i,]
for(j in 0:tmp$reps){
foo <- data.table(Ne = tmp$Ne,
reps = paste(tmp$reps,
" Replicates of Size ",
tmp$Ne),
selCoef = tmp$selCoef,
reps_number = tmp$reps,
bin = j,
prob = choose(tmp$reps, j) *
tmp$pintdetected^j *
(1 - tmp$pintdetected)^(tmp$reps - j))
df <- dplyr::bind_rows(df, foo)
}
}
rm(foo, master, tmp, file, i, j)
dfdetected <- df %>% filter(bin > 0) %>%
group_by(reps, selCoef) %>%
mutate(pintdetected = sum(prob)) %>%
mutate(prob = prob / pintdetected,
selCoef = as.factor(selCoef),
reps = as.factor(reps)) %>% ungroup()
dfdetected$reps <- factor(dfdetected$reps,
levels = levels(dfdetected$reps)[c(3,4,1,2)])
dfnotdetected <- df %>% filter(bin == 0) %>%
mutate(reps = as.factor(reps),
selCoef = as.factor(selCoef),
pintdetected = paste("P(detected > 0 times) : ",formatC(round(1-prob,3),3,format="f"))) %>%
mutate(pintdetected = as.factor(pintdetected))
dfnotdetected$reps_number <- rep(c(3.25,
15,
12,
6.25),
each = 5)
dfnotdetected$vjust = rep((1.5 * c(2,3,4,5,1)), 4)
breaksfun <- function(x){
1:max(x)
}
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T,
option = "turbo") +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_text(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust)) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
?geom_shadowtext
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "black") +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "black", size = 0.75) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "black", size = 5) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "black", size = 3) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "black", size = 4) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "black", size = 3.5) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "black", bg.r = 0.5) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "black", bg.r = 0.1) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "black", bg.r = 0.05) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "grey", bg.r = 0.35) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "grey", bg.r = 0.03) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(dfdetected, aes(y=prob, x=bin, color = selCoef,
group = selCoef)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ factor(reps, levels = unique(dfdetected$reps)[c(1,4,3,2)]), scales="free_x") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "darkgrey", bg.r = 0.03) +
guides(color=guide_legend(title = "Selection\nCoefficient",
override.aes = list(alpha=1))) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
rm(list=ls())
setwd("~/Documents/GitHub/path_integral/results/improvedPDetectedAlphaNE")
list.files()
master <- data.frame()
for(file in list.files()){
tmp <- fread(file)
master <- dplyr::bind_rows(master, tmp)
}
names(master) <- c("selCoef", "Ne", "time", "start",
"thresh", "pintAUC", "pintdetected",
"numAUC", "numdetected", "statDist")
master$popalpha = 2 * master$Ne * master$selCoef
rm(tmp)
master <- master %>% filter(selCoef == 1e-2)
df <- data.table()
for(i in 1:nrow(master)){
tmp <- master[i,]
for(reps in c(5, 10, 15, 20)){
for(j in 0:reps){
foo <- data.table(reps = paste(reps, " Replicates"),
reps_number = reps,
bin = j,
selCoef = tmp$selCoef,
Ne = tmp$Ne,
prob = choose(reps, j) *
tmp$pintdetected^j *
(1 - tmp$pintdetected)^(reps - j))
df <- dplyr::bind_rows(df, foo)
}
}
}
rm(foo, tmp, file, i, j)
dfdetected <- df %>% filter(bin > 0) %>%
group_by(reps, Ne) %>%
mutate(pintdetected = sum(prob)) %>%
mutate(prob = prob / pintdetected,
# # bin = as.factor(bin),
Ne = as.factor(Ne),
reps = as.factor(reps)) %>% ungroup()
dfdetected$reps <- factor(dfdetected$reps,
levels = levels(dfdetected$reps)[c(4,1,2,3)])
dfnotdetected <- df %>% filter(bin == 0) %>%
mutate(reps = as.factor(reps),
Ne = as.factor(Ne),
pintdetected = paste("P(detected > 0 times) : ",formatC(round(1-prob,3),3,format="f"))) %>%
mutate(pintdetected = as.factor(pintdetected))
dfnotdetected$reps_number <- rep(c(3.5,
6.75,
9.75,
13),
4)
dfnotdetected$vjust = rep((1.5 * c(4,1,2,3)), each = 4)
breaksfun <- function(x){
1:max(x)
}
ggplot(dfdetected, aes(y = prob,
x = bin,
color = Ne)) +
geom_line(alpha = 0.6,
size = 1.5) +
geom_point(alpha=1,
size = 2.5) +
facet_wrap(~ reps, scales="free") +
theme_bw() +
scale_x_continuous(breaks = breaksfun) +
scale_color_viridis(discrete = T) +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(size=18),
axis.text.x = element_text(size = 12),
legend.text = element_text(size = 12)) +
xlab("Number of Replicates Detected") +
ylab("Probability Given Detected at least Once") +
geom_shadowtext(data = dfnotdetected, aes(x = reps_number,
y = 1,
label = pintdetected,
vjust = vjust),
bg.color = "darkgrey", bg.r = 0.03) +
guides(color=guide_legend(title = "Effective\nPopulation\nSize",
override.aes = list(alpha=1))) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
rm(list=ls())
